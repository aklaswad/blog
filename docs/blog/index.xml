<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on blog.aklaswad.com</title>
    <link>http://example.org/blog.html</link>
    <description>Recent content in Blogs on blog.aklaswad.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 24 Mar 2019 16:45:23 +0900</lastBuildDate>
    
	<atom:link href="http://example.org/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ふええ</title>
      <link>http://example.org/2019/000527.html</link>
      <pubDate>Sun, 24 Mar 2019 16:45:23 +0900</pubDate>
      
      <guid>http://example.org/2019/000527.html</guid>
      <description>
ふええ</description>
    </item>
    
    <item>
      <title>[小ネタ]Javascriptとしても実行できるperlの書き方</title>
      <link>http://example.org/2015/000526.html</link>
      <pubDate>Thu, 19 Feb 2015 16:39:34 +0900</pubDate>
      
      <guid>http://example.org/2015/000526.html</guid>
      <description>
以前ちょっと話題になったこちらの記事 &lt;a href=&#34;http://qiita.com/supermomonga/items/79d599b4ed8b385870b0&#34;&gt;PHPとしても実行できるRubyの書きかた - Qiita&lt;/a&gt; が完全にネタとして消化されていたのですが、自分は普通に普段使いしてます。perlのDataSectionを使って双方をコメントなどに見せているだけなので趣旨はちょっと違いますが、ひとつのファイルでウェブサーバー立てて、かつJavascriptのシンタックスハイライトを使ってコードを書けるので、ちょっとしたJavascriptの動作確認に便利です。

&lt;script src=&#34;https://gist.github.com/aklaswad/6f2e92ef3580596287cb.js&#34;&gt;&lt;/script&gt;

ちょっと直せばnode.jsで動くようにもできます。他にもperlのDATAセクションでcoffeescriptやRuby、Pythonを動かす方法も考えたのですが、あまり実用性が無いのでそれらは忘れてしまいました:P</description>
    </item>
    
    <item>
      <title>Music Hack Day Tokyo 2014 に参加してきた。</title>
      <link>http://example.org/2014/000525.html</link>
      <pubDate>Tue, 25 Feb 2014 20:09:15 +0900</pubDate>
      
      <guid>http://example.org/2014/000525.html</guid>
      <description>&lt;h3&gt;キックオフパーティー and 受付&lt;/h3&gt;

この規模のイベントでは初使用となる&lt;a href=&#34;http://about.peatix.com/colorsync.html&#34;&gt;ColorSync&lt;/a&gt;。一部の端末で動かないなどのトラブルもありましたが、概ねスムーズに入場していただけたと思います。受付よりも手前からチケット画面を表示されていた方の場合、「チケットを確認してないのでは」と思わるかも、と不安になるレベルのスムーズさでした。

&lt;h3&gt;ハッカソン&lt;/h3&gt;

二日間、&lt;a href=&#34;https://theterminal.jp/index.html&#34;&gt;素敵な会場&lt;/a&gt;でもくもくとコード書いてました。やりたいことは大体決まっていたので、特にチームに参加などはしなかったのですが、周りの人と適度に情報交換や雑談などしつつ、いい感じで開発できました。屋上の隠れ家感も素敵でした。

&lt;h3&gt;作ったもの&lt;/h3&gt;

QYARTSというwebサービスを作りました。説明が難しいのですが、メインにステップシーケンサーがあって楽曲を作成でき、チャットルーム的な感じでユーザーが参加すると、そのユーザーの端末から一部の音を、ちゃんと同期した状態で再生できる、というサービスです。シーケンサーのオーナーは、任意の音符の出力先を、自分のマシンorオーディエンスの誰かorオーディエンス全員から、などと割り振ることができる様になってます。アーティストが演奏している音の一部が客席のあちこちから鳴り出したらとても楽しいのではないかという、わりと単純な発想です。
WebAudioが使えるようになって、ネイティブアプリ不要でモバイルブラウザだけでこういった音の出るアプリが作れるようになって、とても楽しみが広がったように思います。

デバイスの会場内での位置を測定してパンできたらとか、ジャイロや加速度センサーでオーディエンスがその場でエフェクトを操作できるようにしたいとか、夢は広がりングだったのですが、いかんせん時間が足りず、かろうじてデモを動作させるのが精一杯でした。無念。
ステップシーケンサー部分の作成にかなり手間取ってしまい、音作りも何も出来ず、MIDIノートナンバー的なものを手入力するような仮UIのまま、デモ用の曲の仕込みをしているような有り様でした。そしてコレがさらなる悲劇を生むことに。。。

さすがにUIが酷くてまだコードもサイトも公開してません。できたらそのうち。

&lt;h3&gt;デモで盛大に音感のなさを露呈した&lt;/h3&gt;

会場はかなりネットワークが混雑していて、ちゃんと同期が取れるかかなり不安だったのですが、その点では上手くいったと思います。ただ、デモ用に仕込んでおいた曲で、ベースとパッドの調がずれていたという大変恥ずかしいミスをやってしまい、顔から火が出るかと思いました。なぜ事前に気づかなかった。。。超テンパッて、同じ言い訳を二回言ってますね。

デモの様子はこちらで見れます。 &lt;a href=&#34;http://www.ustream.tv/recorded/44140498/highlight/470673&#34;&gt;http://www.ustream.tv/recorded/44140498/highlight/470673&lt;/a&gt; 恥ずかしいのでembedしません。

&lt;h3&gt;他の参加者の方の作品で気になったもの&lt;/h3&gt;

&lt;a href=&#34;https://www.hackerleague.org/hackathons/music-hack-day-tokyo-2014/hacks/tokyo-tune-train&#34;&gt;Tokyo Tune Train // Music Hack Day Tokyo 2014 // Hacker League&lt;/a&gt;

音の聴かせ方が上手いなーと。

&lt;a href=&#34;https://www.hackerleague.org/hackathons/music-hack-day-tokyo-2014/hacks/singalong-world&#34;&gt;Singalong World // Music Hack Day Tokyo 2014 // Hacker League&lt;/a&gt;

初日の遅い時間にJSベースからiOSにピボットしているところを見ていたので、ここまで完成させたとはすごいです。アイデアも秀逸で素晴らしいです。

&lt;a href=&#34;https://www.hackerleague.org/hackathons/music-hack-day-tokyo-2014/hacks/synthesizer-server&#34;&gt;Synthesizer Server // Music Hack Day Tokyo 2014 // Hacker League&lt;/a&gt;

自分とは逆の発想。出音がかっこよかったです。

&lt;a href=&#34;https://www.hackerleague.org/hackathons/music-hack-day-tokyo-2014/hacks/voiceremix&#34;&gt;VoiceRemix! // Music Hack Day Tokyo 2014 // Hacker League&lt;/a&gt;

声をチョップするの大好きです。これは自分でもやりたい。WebRTC使ってその場で声を入力できるようにするとか、シンコペーション入れるとか。アイデアが広がります。

&lt;a href=&#34;https://www.hackerleague.org/hackathons/music-hack-day-tokyo-2014/hacks/yeah-i-only-like-their-earlier-stuff&#34;&gt;&amp;quot;Yeah, I only like their earlier stuff&amp;quot; // Music Hack Day Tokyo 2014 // Hacker League&lt;/a&gt;

デモ見てないですが、発想がすごく好きです。

&lt;h3&gt;感想&lt;/h3&gt;

とても濃厚な3日間で、クッタクタになりましたが凄く楽しかったです！アレンジしてくれた福山さんやスタッフの皆さんに感謝です。

おしまい。</description>
    </item>
    
    <item>
      <title>#webmusic ハッカソン vol.2に参加してた。</title>
      <link>http://example.org/2014/000524.html</link>
      <pubDate>Sun, 26 Jan 2014 20:28:50 +0900</pubDate>
      
      <guid>http://example.org/2014/000524.html</guid>
      <description>&lt;a href=&#34;http://www.youtube.com/watch?v=dCvuBz1FYWg&amp;t=1h3m27s&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-2A3FoRD1tE0/UtuYkG7rn6I/AAAAAAAAn_Y/y0cbZ8XqcaI/s1600/my-hi.png&#34;&gt;link and capture was taken form &lt;a href=&#34;http://blog.agektmr.com/2014/01/web-music-2.html&#34;&gt;Eiji Kitamura-san&#39;s blog&lt;/a&gt;. thanks!&lt;/a&gt;

</description>
    </item>
    
    <item>
      <title>perlで頑張って新人女子を助けた。 #paizahack_01</title>
      <link>http://example.org/2013/000523.html</link>
      <pubDate>Sat, 07 Dec 2013 00:29:24 +0900</pubDate>
      
      <guid>http://example.org/2013/000523.html</guid>
      <description>&lt;h3&gt;ソートして尺取り虫&lt;/h3&gt;

事前に全組み合わせをキャッシュしようとしてタイムアウトになる、などのお約束をこなしつつ、最初に考えたのが、商品の値段をソートしてしまい、上と下から範囲を狭めていって組み合わせをチェックしていく方法。最初のスタート地点を探すときに二分探索するのも含めて、やり方としては&lt;a href=&#34;http://sucrose.hatenablog.com/entry/2013/12/05/000146&#34;&gt;http://sucrose.hatenablog.com/entry/2013/12/05/000146&lt;/a&gt;と同じですね。こんなに綺麗に書けませんでしたが。
これに加え、チョット経ってから、和が目標値と一致したら探索終了していいことに気づいて直した時点で、&lt;a href=&#34;http://paiza.jp/poh/ec-campaign/result/341c77454c90a3faa792f87d8b1fab7b&#34;&gt;0.01/0.01/0.28&lt;/a&gt;というタイムが出た。

&lt;h3&gt;ソートが相当遅いのでソート相当の別のことをする&lt;/h3&gt;

この時点でNYTProfでボトルネックを探してみると、適当に作った100,000件の商品データで、入出力5割、ソート4割、探索1割、という塩梅。ソートを何とかしないとコレ以上タイムが伸びないと思い、色々調べて、目についたのが&lt;a href=&#34;http://blog.livedoor.jp/dankogai/archives/51764496.html&#34;&gt;dankogaiさんのバケットソートの記事&lt;/a&gt;。ただし、コレそのままではかえって遅くなってしまう。
作成したヒストグラムの分布範囲が広すぎて、全走査すると時間がかかりすぎるのだ。そこで考えをすすめて辿り着いたのが、ヒストグラムの作成だけして、値の探索は直接ヒストグラム内を走査する、という手法。

実は元の問題設定の特徴として、商品点数に比べてキャンペーン日数が極端に少ないというのがある。また、商品の価格の上限に比べて商品点数がかなり多い。商品点数がかなり盛られていると思われるcase3では、かなり密度の濃いヒストグラムが出来ると予想されるので、走査の能率はそれほど悪くならないはず。更に、実際には走査されない部分=探索に使用されない価格がかなりあることも想像できるので、それらを無視できるというのもメリットになる。

工夫としては、低い数字側から必要になった部分だけ配列に入れ(バケットソートの出力を逐次行う感じ)再利用時の高速化を図っている。
また、ヒストグラムの走査についても、その時点で見つかっている最も優秀な値を更に上書きする可能性のある範囲だけに絞り込める。極端な話、すでに目標値-1の組み合わせが見つかっている場合、配列を一回参照すれば次に進むことができる。
などなどを行い、最終的にクリナップしたコードが以下のもの。このコードのタイムは&lt;a href=&#34;http://paiza.jp/poh/ec-campaign/result/1eb631ed1199db1885e09f8b8656fd47&#34;&gt;0.02/0.01/0.18&lt;/a&gt;。

&lt;script src=&#34;https://gist.github.com/aklaswad/7819657.js&#34;&gt;&lt;/script&gt;

なお、このやり方は商品価格の分布が一様だという仮定に依存していて、商品価格に偏りがあった場合に効率が著しく落ちる可能性がある。チロルチョコ専門店でキャンペーン価格は1,000,000円とか言われると目も当てられない。が、とりあえず用意されているテストケースに対してはうまく行ったようなので良しとする。

case1のタイムが落ちてしまったのは、単に商品点数が少なく、走査範囲が広いため。コレをカバーしたいなら商品点数が少ない場合だけ分岐してソートして尺取り虫すればよい。

&lt;h3&gt;クリナップ前のコードのほうが速くて悔しい&lt;/h3&gt;

上ではかっこよく説明しているが、きれいな実装に辿り着くまで、変なマジックナンバー使ってみたりと、かなり試行錯誤した。その途中で自己最速タイム&lt;a href=&#34;http://paiza.jp/poh/ec-campaign/result/5f72ab9614e47b600fae3535e7d083fe&#34;&gt;0.01/0.01/0.15&lt;/a&gt;という記録が出ている。昨日の時点(12月6日)では、perlおよびLL(PHP,ruby,python)でのレコードにもなってる。まだ&lt;a href=&#34;https://gist.github.com/aklaswad/7836191&#34;&gt;コードがグチャグチャ&lt;/a&gt;で、自分で見なおしても何をやっているのかわからない部分も多く、なぜ速いのか謎のままである。

あ、あとこういうのはハッカソンとは言わないと思います。

おしまい。</description>
    </item>
    
    <item>
      <title>YAPC::Asia 2013で刺激されてアクセスログを可聴化するツール作った。</title>
      <link>http://example.org/2013/000522.html</link>
      <pubDate>Tue, 24 Sep 2013 04:25:53 +0900</pubDate>
      
      <guid>http://example.org/2013/000522.html</guid>
      <description>&lt;h3&gt;以下、本当にただの雑感&lt;/h3&gt;

ガチで1step(16分音符)毎にハートビートを送って、再生側ではそれを受け取る端からシンセサイズしているだけなので、不安定になるかなと思ったけどローカルのMBAで結構余裕で捌けてたので、ありなのかもしれない。AnyEventのtimerが結構ちゃんとしてて感心した。

OSCはただのUDPで基本的に一方通行なので、現在の構成だと監視サーバー=音の出る場所を一箇所に決めてそこにサーバー側から繋ぎに行く形になるので実用性がない。ただ、Proxy的なものを挟めばなんとかなるとは思ってる。

WebSocket+WebAudioで作れば気軽に誰でも使えるようになって、それはそれで面白かったかもしれないが、今回はあえてしなかった。だってPerlで書きたかったの。(とはいえキモとなる部分はPdのパッチ側にあるのだが)

Pdは10年ぶりくらいに触ったけどオブジェクトが全然増えてなくてワロタ。でもパッチ書くの楽しくてよかった。

正味三日でここまで来たが、実は今日は殆ど何も進んでいない。基本的な部分は昨日までで出来ていて、今日はサーバーの状態を音楽的に表現する試み(例えばレスポンスタイムをそのままショートディレイに突っ込んだり)を幾つか試したが、殆ど失敗した。やっぱり機械に音楽やらせるのって難しいです。

YAPC会場でずっとコレやってたのでトーク一つも聞けなかったけど後悔はしていない。</description>
    </item>
    
    <item>
      <title>YAPC::Asia 2013 行ってきた。</title>
      <link>http://example.org/2013/000521.html</link>
      <pubDate>Sat, 21 Sep 2013 22:56:00 +0900</pubDate>
      
      <guid>http://example.org/2013/000521.html</guid>
      <description>
今年もYAPC::Asia参加してきました。

&lt;h2&gt;チケット&lt;/h2&gt;

このブログで書いてなかった気もしますが、ただ今PeaTiXで働いています。受付が上手くいっているかなどドキドキしてました。
名刺カードに「チケットの文句は俺に言え！」と小さく書いて、「優しく」と書き足し、更に名刺で隠していたチキンがこちらになります。

&lt;h2&gt;前夜祭&lt;/h2&gt;

前夜祭に参加するのは初めて。さらに、飛び入りでLTして来ました。PeaTiXのアプリ絡みで前日の朝までに起こった出来事を、アップデートのお願いも兼ねてお話ししようと思ったのが前の日の夕方。当日に急いでスライド作って練習して行ったのですが、去年のLTソンの雰囲気と全然違って、飛び入り出来るか超ギリギリな感じで焦りました。
そして、改めて自分はあがり症だなあと。あんまり記憶がありません。練習の時に平均5分10秒とかだったのに、雰囲気的にも巻き巻きな感じなので、超早口になってしまいました。

なんですかねー。本当に慣れないです。この後まじで胃が痛くなって、今もまだ痛いです＞＜。でも、他の人と話すきっかけとかにもなって、やってよかったです。

&lt;h2&gt;初日&lt;/h2&gt;

午前中は寝坊+ちょっと仕事などで出られず、午後から。なんかどの会場も満員な感じで、どうしようと思いつつぼんやりしたり前職のボスと話したり、techno_nekoさんと遭遇して、perl+oscで音を鳴らすデモを見せてもらったりしてました。そして、結構面白そうなアイデアをいただき。。。

懇親会は登録していなかったので、Hub.pmに参加。頑張っていろんな人に話しかけたりしました。
そのうち懇親会組や大人の人たちが雪崩れ込んできて大変な騒ぎに。帰るタイミングを見失って飲み過ぎてしまった感があります。どのくらい飲み過ぎたかというと記憶がスワップファイルからかろうじてサルベージできるくらい。charsbarさんに音楽とはみたいな話を力説していたような。。。

&lt;h2&gt;二日目&lt;/h2&gt;

午前中は二日酔いでかなり辛い感じ+前日に思いついたアイデアに手を付け始めたら止まらなくなり、午後に会場に移動するもBOF会場で黙々とコード書いてました。とりあえずある程度形になり、techno_nekoさんにdemo見て貰うところまで出来たのでよかった！
その後はLT~クロージングまで見て、胃が痛いので家に帰りました。

&lt;h2&gt;まとめ&lt;/h2&gt;

&lt;ul/&gt;
  &lt;li&gt;頑張って人前で喋った&lt;/li&gt;
  &lt;li&gt;人と話すと新しいアイデアを貰える&lt;/li&gt;
  &lt;li&gt;LT以外のトークひとつも見てない＼(^o^)／&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>[programming]経験がオーバーハングな成長曲線を乗り越える。</title>
      <link>http://example.org/2013/000520.html</link>
      <pubDate>Wed, 15 May 2013 01:04:23 +0900</pubDate>
      
      <guid>http://example.org/2013/000520.html</guid>
      <description>
&lt;a href=&#34;http://d.hatena.ne.jp/mizchi/20130512/1368351397&#34;&gt;プログラミングはそれ自体が目的であっていい - mizchi log&lt;/a&gt;　こちらの記事をきっかけに、プログラミングの学習に必要な経験について盛り上がってるみたいなので、自分の経験についてもちょっと書いてみたい。

小学生の時に「こんにちはマイコン」を読んだことを除けば、自分がプログラミングに最初に触れたのはWindowsME上で動くHSPだった。
多分友達の家で「なんかパソコンあるし面白いこと出来ないかな」と話していて触ったのだと思う。3日ほどHSPを触っていたが、スプライトが動いてゲームっぽい何かが作れそうな予感がしたところで飽きた。

次に目に入ったのはDelphiだった。当時、無料で入手でき、やりたいことがそれなりに出来そうで、かつ理解できそうな開発環境がそれしか無かったからだ。AphexTwinやAutechreにあこがれてDSPをやりたかったので、(1)とりあえず何か音を出そうといじくり回していた。

何日か触っていて、ようやくDelphiのGUI上で設置した「Button1」と関係がありそうな場所に、Webで見つけたコードをコピペすると、それが実行されることがわかった。実行された結果、エラーの文字列がIDEに表示されるか、運が良ければ音が出る。文字通りただのノイズがスピーカーから出ただけだが、とても嬉しかった。
さらに試行錯誤を続けているうちに、MSDNからコピペして&#34;=&#34;を&#34;:=&#34;に書き換え頑張っていると、MSDNのサンプルコードのうちのいくつかは実行出来て何らかの音が出ることがわかった。楽しかったが、偽物の開発環境を使わされている感じもしていた。

またしばらくして、Delphiと同じ開発元からC++Builderというものが売られていることを知った。世の中ではpascalよりC++のほうが使われているらしいことは知っていた。なおかつ、(censored)したけどよくわからなかったVisualC++5.0よりDelphiに似ていて、ずっと使いやすそうだった。買った。8000円くらいだったと思う(2)。

C++はまったく意味がわからなかった。仕方ないので図書館に行って関係がありそうな本を片っ端から借りてきた。まったくの勘違いから、本屋で見つけた3000円くらいするDSPボード(3)の解説書を買ってきて、自分が欲しいものとまるで違うとわかって枕を濡らしたりもした。
この頃借りた本の中に、「エキスパートCプログラミング」という本があった。ジョーク過多な原文を無理やり翻訳したような、典型的な翻訳技術書で、読んでいる間は楽しかった。内容は大雑把に言うと「これこれのコンパイラの場合メモリのアドレスがこうやって使われるのでスタックが云々ヒープが云々。あとCの仕様書書いた奴はタヒねアーグヴィーーアーグシーー」というもので、同じ頃図書館で借りたニューロマンサーのほうが100倍わかり易いと思った。

それでもなんとかポインタの操作くらいは出来るようになり、最終的にはBC++上で、wavファイルを読み込んでメモリに展開するプログラムと、コピペしたFFTのコードを元にソノグラムが表示できるプログラムが出来たと覚えている。今、それらのコードは手元には残っていない。


この後、3年ほどプログラミングには触れなかった。生活に忙しかったのと、人として腐っていたのと、あとは単に飽きたのだろう。
腰を痛めてコンビニのバイトが辛くなり、なんとかデスクワークがしたいと思ってテクニカルサポートの派遣業務を始め、紆余曲折、今はWebアプリのエンジニアをしている。普段はおもにPerlとJavaScriptを書いている。

ちょっとした処理をループ書くか再帰で書くか、といった時に、C++を触ってた時の経験がふっと役に立つことがある。



[1]この時にはまったく無意識だったが、新しい環境に飛び込むときに大事なポイントは、凄く低レベルな目標を決めてとりあえず進んで見ることだと思う。

[2]たしかこの時一緒に、60GBのハードディスクを30,000円くらいで買ったと思う。
</description>
    </item>
    
    <item>
      <title>[git] コミットメッセージの最初の空行までがsubjectです。</title>
      <link>http://example.org/2013/000519.html</link>
      <pubDate>Fri, 19 Apr 2013 13:31:47 +0900</pubDate>
      
      <guid>http://example.org/2013/000519.html</guid>
      <description>
コミットメッセージの最初の空行までがsubjectです。最初の一行、ではありません。

subjectは、&lt;code&gt;git log --oneline&lt;/code&gt;とか&lt;code&gt;git log --format=&#34;%s&#34;&lt;/code&gt;とかした時に使われます。なので、

&lt;pre&gt;Clean up my room
* Wash whole dishes
* Mop the bathtub
* Throw away magazines
&lt;/pre&gt;

このようなコミットメッセージの書き方をすると、自分の中ではsubjectと本文がわかれていても、

&lt;pre&gt;
$ git log --oneline
988f5e7 Clean up my room * Wash whole dishes * Mop the bathtub * Throw away magazines
&lt;/pre&gt;

こんな風につながって一行になってしまいとても読みにくいです。

今度から気をつけましょう &gt; 自分</description>
    </item>
    
    <item>
      <title>JavaScriptでキング・クリムゾンに対向する</title>
      <link>http://example.org/2013/000518.html</link>
      <pubDate>Fri, 22 Feb 2013 11:53:41 +0900</pubDate>
      
      <guid>http://example.org/2013/000518.html</guid>
      <description>
ちょっと料理をする時にもコードの力でひと味ちがう自炊ライフを送るハッカーの皆さんこんにちは。僕も週末に気合を入れて自炊するときなんかは、さっとchromeのdeveloper consoleを立ち上げてワンライナー走らせちゃったりして快適な自炊ライフを満喫しています。
&lt;blockquote&gt;&lt;code&gt;setTimeout( function () { alert(&#39;Pair Young Now!&#39;);}, 1000 * 60 * 3)&lt;/code&gt;&lt;/blockquote&gt;
このソースは非常に汎用的かつ美味かつ再利用性が高いので、Webに置いてiPhoneなどのスマートフォンからも使えるようにすればみんなハッピーかなと思いましたが、そこには大きな罠が潜んでいました。

&lt;h1&gt;
</description>
    </item>
    
    <item>
      <title>WebSocketの仕様を調べていたら頭がどうにかなりそうだった。</title>
      <link>http://example.org/2012/000517.html</link>
      <pubDate>Sat, 29 Dec 2012 13:45:00 +0900</pubDate>
      
      <guid>http://example.org/2012/000517.html</guid>
      <description>
&lt;style&gt;
.websocket-protocol { background-color: #fee; margin: 1.0em 0; padding 5px; }
.websocket-api {background-color: #eef; margin 1.0em 0; padding 5px; }
pre { padding: 5px; margin 5px; }
strong.redwarning { color: #f00; }
&lt;/style&gt;


&lt;p&gt;WebSocketを使ってゴニョゴニョしているのだが、handshakeの失敗時のエラーをどう扱うべきなのか、よくわからない。WebSocket Protocol の仕様と WebSocket API の仕様で書いてあることが違う。&lt;br /&gt;
protocol仕様を読む限り、サーバーはhandshakeを拒否する場合適切なHTTPエラーコードを返さなくてはいけない、と書いてある。が、クライアント側のウェブブラウザ上のjavascriptでそれを期待しているとエラーイベントからはHTTPエラーコードは受け取れない。WebSocketの異常終了コード1006が固定でセットされている。&lt;/p&gt;
&lt;p&gt;
そこでAPI仕様を読むと、これらを行わない理由が赤字で大きく書いてある。
&lt;ul&gt;&lt;li&gt;オープンリダイレクタが設置されたサイトで脆弱性になるので、handshakeのレスポンスはHTTPとして扱わない。&lt;/li&gt;
&lt;li&gt;悪意あるスクリプトに攻撃の準備としてネットワーク環境の調査に使われるのを防ぐため、接続失敗の理由をスクリプトに通知してはいけない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;接続失敗の理由を開示してはいけない、というのは特定のシチュエーションの場合、と限定してあるのだが、この一文
&lt;blockquote&gt;A server that did not complete the opening handshake (e.g. because it was not a WebSocket server).&lt;p&gt;&lt;a href=&#34;http://dev.w3.org/html5/websockets/&#34;&gt;http://dev.w3.org/html5/websockets/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
が示す範囲がよくわからなくて、これがもし403とか返した場合も該当するなら、サーバーはHTTPエラーコードを返さなくてはいけないがブラウザはエラーコードを握りつぶさなくてはいけない、ということになる。実際API仕様にもHTTPステータスを受け取れるとは書いてないし、そういうもんだと言われればそれまでだが、実際のところ困る。&lt;br /&gt;
chromeのコードもはっきりそうなっているっぽくて( @gtk2k さんに教えていただきました。ありがとうございます。 )、101以外のHTTPステータスを受け取っても、特に個別の動作はしないし、エラーイベントのどこを探してもHTTP statusが見つからない。リダイレクトもしない。&lt;q&gt;Unexpected response code: 403&lt;/q&gt;という文字列がエラーコンソールに出てくるけど、javascriptからは拾えなそう。&lt;/p&gt;

&lt;p&gt;一体どうすれば良いのかわからず、原本 &lt;a href=&#34;http://tools.ietf.org/html/rfc6455&#34;&gt;http://tools.ietf.org/html/rfc6455&lt;/a&gt; および &lt;a href=&#34;http://www.w3.org/TR/websockets/&#34;&gt;http://www.w3.org/TR/websockets/&lt;/a&gt; と、そこから辿れる旧バージョンを参照した。以下の様な時系列で変更が行われた模様。&lt;/p&gt;

&lt;h3&gt;WebSocket Protocol hybi-05以前&lt;/h3&gt;
&lt;p&gt;プロトコル仕様に以下の記述がある。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;記述1 ユーザーエージェントは、一部のシチュエーションではエラーの理由をスクリプトに伝えてはいけない&lt;/li&gt;
&lt;li&gt;記述2 handshakeのレスポンスとして101以外を受け取った時、WebSocket接続を終了する&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;
 &lt;blockquote&gt;&lt;pre&gt;User agents must not convey any failure information to scripts in a
   way that would allow a script to distinguish the following
   situations:
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-05#section-7.1.1&#34;&gt;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-05#section-7.1.1&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;pre&gt;If the status code received from the server is not 101, the client
      MUST fail the WebSocket connection.
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-05#section-5.1&#34;&gt;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-05#section-5.1&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket Protocol hybi-06 February 25, 2011&lt;/h3&gt;
&lt;p&gt;プロトコル仕様から記述1が消える&lt;/p&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06#section-7.2.1&#34;&gt;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06#section-7.2.1&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;

&lt;h3&gt;ietf のメーリングリスト 28 Mar 2011&lt;/h3&gt;
&lt;p&gt;プロトコルレベルではHTTPをサポートするべきという方向に話が進む&lt;/p&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;&lt;p&gt;(超意訳)これ(オープンリダイレクタの問題)って俺達の問題じゃなくてWHATWGの問題だよね。リダイレクトや認証機能が無しなんてやってらんないから入れちゃおうぜ。もしブラウザが当面リダイレクトをサポートしないって事になってもOK。後でブラウザ側の挙動だけ変えれば済むなら楽だし。&lt;/p&gt;
&lt;blockquote&gt;&lt;pre&gt;I don&#39;t think it is &#34;our problem&#34;.     I think it is a &#34;W3C/WHATWG
HTML-5 WG problem&#34;.

This is essentially an API issue for the browser websocket object.
There are plenty of ways around this (adding optional follow
redirects, exposing redirect responses etc. etc.),   but I think it is
the W3C and WHATWG HTML-5 working groups that should be where such
matters are decided.

As a web developer I really rather not have to go without redirection
and other common auth methods - and I take responsibility for my
servers not being open redirectors..... but would understand if the
W3C/WHATWG decided not to support these features - at least initially.

However, we should make the protocol such that if/when the API does
support these features, then it will only be an in browser change and
not an update of the protocol.&lt;p&gt;&lt;a href=&#34;http://www.ietf.org/mail-archive/web/hybi/current/msg06954.html&#34;&gt;http://www.ietf.org/mail-archive/web/hybi/current/msg06954.html&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;/div&gt;

&lt;h3&gt;WHATWG のメーリングリスト Mar 29 2011&lt;/h3&gt;
&lt;p&gt;APIレイヤでHTTPを理解するかは先送りの方向に&lt;/p&gt;

&lt;div class=&#34;websocket-api&#34;&gt;&lt;p&gt;(超意訳)(HyBiのスレッドではHTTP使う方向になってるぜ、という話を受けて)オープンリダイレクタの問題はセキュリティ上の大穴だという意見に同意だ。httpが犯した過ちとそこで起こった問題を繰り返すべきではない。この問題は先送りにして、当面APIレベルではリダイレクトには対応しない、という方向で。&lt;/p&gt;

&lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;I absolutely agree that redirects are a big source of security
problems. If we are going to support them for websocket then I think
we need to learn from the mistakes of http as to not repeat the
problems that occurred there.

(中略)

But I&#39;m totally fine with punting on this for the future and just
disallowing redirects on an API level for now.&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-March/031079.html&#34;&gt;http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-March/031079.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;

&lt;h3&gt;WebSocket Protocol hybi-07 April 22, 2011&lt;/h3&gt;
&lt;/p&gt;記述2部分が変更 101以外はHTTPとして処理する&lt;/p&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;
&lt;blockquote&gt;&lt;pre&gt;If the status code received from the server is not 101, the client
      handles the response per HTTP procedures.  Otherwise, proceed as
      follows.
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-07#section-5.1&#34;&gt;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-07#section-5.1&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket API r1.210 May 24, 2011&lt;/h3&gt;
&lt;p&gt;旧記述2相当の内容がAPI仕様に引越し&lt;/p&gt;
&lt;div class=&#34;websocket-api&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Block redirects in WebSockets (whatwg r6148)&lt;/q&gt;&lt;pre&gt;+    When the user agent &lt;i&gt;validates the server&#39;s response&lt;/i&gt; during
+    the &#34;establish a WebSocket connection&#34; algorithm, if
+    the status code received from the server is not 101 (e.g. it is a
+    redirect), the user agent must fail the websocket
+    connection.
&lt;p&gt;&lt;a href=&#34;http://dev.w3.org/cvsweb/html5/websockets/Overview.html#rev1.210&#34;&gt;http://dev.w3.org/cvsweb/html5/websockets/Overview.html#rev1.210&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket Protocol hybi-08 June 7, 2011&lt;/h3&gt;
&lt;p&gt;handshake失敗時にサーバーはエラー理由をHTTP error codeで表現しなさい、という記述が登場&lt;/p&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;
&lt;blockquote&gt;&lt;pre&gt; If the server does not wish to
          accept this connection, it MUST return an appropriate HTTP
          error code (e.g. 403 Forbidden) and abort the WebSocket
          handshake described in this section.
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-08#section-5.2.2&#34;&gt;http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-08#section-5.2.2&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket Protocol RFC6455 PROPOSED STANDARD December 2011&lt;/h3&gt;
&lt;p&gt;現在のhandshakeのレスポンスの扱い protocolバージョン&lt;/p&gt;
&lt;div class=&#34;websocket-protocol&#34;&gt;
&lt;blockquote&gt;&lt;pre&gt;Any status code other than 101 indicates that the WebSocket handshake
   has not completed and that the semantics of HTTP still apply.  The
   headers follow the status code.
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc6455#section-1.3&#34;&gt;http://tools.ietf.org/html/rfc6455#section-1.3&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket API r1.271 Jul 11, 2012&lt;/h3&gt;
&lt;p&gt;記述1相当の内容が一年五ヶ月ぶりにAPI仕様として復活。&lt;/p&gt;
&lt;div class=&#34;websocket-api&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Clarify what codes are exposed in case of error, since this text was mysteriously removed from the RFC at some point. (whatwg r7175)&lt;/q&gt;&lt;pre&gt;+   User agents must not convey any failure information to scripts
+   in a way that would allow a script to distinguish the following
+   situations:
&lt;p&gt;&lt;a href=&#34;http://dev.w3.org/cvsweb/html5/websockets/Overview.html#rev1.271&#34;&gt;http://dev.w3.org/cvsweb/html5/websockets/Overview.html#rev1.271&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;h3&gt;WebSocket API W3C Candidate Recommendation 20 September 2012&lt;/h3&gt;
&lt;p&gt;現在のhandshakeのレスポンスの扱い APIバージョン。 赤くて目立つようにHTTPは混ぜるな危険とwarning。&lt;/p&gt;
&lt;div class=&#34;websocket-api&#34;&gt;
&lt;blockquote&gt;&lt;pre&gt;When the user agent validates the server&#39;s response during the &#34;establish a WebSocket connection&#34; algorithm, if the status code received from the server is not 101 (e.g. it is a redirect), the user agent must fail the WebSocket connection.

&lt;strong class=&#34;redwarning&#34;&gt;Following HTTP procedures here could introduce serious security problems in a Web browser context. For example, consider a host with a WebSocket server at one path and an open HTTP redirector at another. Suddenly, any script that can be given a particular WebSocket URL can be tricked into communicating to (and potentially sharing secrets with) any host on the Internet, even if the script checks that the URL has the right hostname.&lt;p&gt;&lt;a href=&#34;http://www.w3.org/TR/websockets/#the-websocket-interface&#34;&gt;http://www.w3.org/TR/websockets/#the-websocket-interface&lt;/a&gt;&lt;/p&gt;&lt;/strong&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;p&gt;というわけで、プロトコル仕様ではhandshakeのレスポンスはHTTPとして扱う方向になっているが、API仕様ではこれを無視する。将来的に統一するならAPI仕様が変更される。というのが現状のようです。接続失敗の理由をスクリプトから隠す件については結局良くわかりませんでした。MLはgoogle先生が最初に教えてくれた周辺しか読んでないので、他にも色々議論があったのかもしれません。&lt;/p&gt;

&lt;p&gt;実際どう対処すればよいか。少なくとも現時点のブラウザの実装がエラーコードを隠蔽してしまう以上、サーバー側の実装をするときにhandshakeの結果をHTTPで返しても無駄な気はする。handshakeしてから即closeするか、またはエラー診断用のHTTPのエンドポイントを用意するとか。うーん。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Example page</title>
      <link>http://example.org/2012/000516.html</link>
      <pubDate>Sat, 15 Dec 2012 14:52:43 +0900</pubDate>
      
      <guid>http://example.org/2012/000516.html</guid>
      <description>
&lt;p&gt;This is an example web page.&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;@ADD_TO_SITE_NAV&lt;/code&gt; tag is used on a web page, that page will be added to the navigation list in both the header and footer.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Page</title>
      <link>http://example.org/2012/000515.html</link>
      <pubDate>Sat, 15 Dec 2012 14:52:42 +0900</pubDate>
      
      <guid>http://example.org/2012/000515.html</guid>
      <description>
&lt;p&gt;This is an example &#34;about&#34; page. (Typically, an &#34;about&#34; page features a summary about an individual or corporation.)&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;@ABOUT_PAGE&lt;/code&gt; tag is used on a web page, the “about” page will be added to the navigation list in both the header and footer.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>When and where my laptop was running?</title>
      <link>http://example.org/2012/000514.html</link>
      <pubDate>Sat, 15 Dec 2012 13:36:33 +0900</pubDate>
      
      <guid>http://example.org/2012/000514.html</guid>
      <description>
勤怠表提出の自動化などが目的で、持ち歩いているラップトップのWi-Fiの接続先をログに取るようにしていたのだが、結構ログが溜まってきたので視覚化してみた。

&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://aklaswad.com/where.html&#34; target=&#34;_blank&#34; title=&#34;When and where my laptop was running?&#34;&gt;http://aklaswad.com/where.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

OSXでは接続しているSSIDなどの情報は以下のコマンドで取得できる。
&lt;pre&gt;&lt;code&gt;/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I&lt;/code&gt;&lt;/pre&gt;
この結果をパースして、SSIDに変化があったらファイルに追記するという簡単なperlスクリプトを、cronでぶん回しているだけ。接続先のSSIDのバリエーションなどはたかが知れているので、SSIDに対応した処理も行える。自分は、日付が変わってから最初にオフィスのネットワークに接続したらfoursquareでチェックインするようにしてる。&lt;ins&gt;のでスクリプトに直接APIKeyなど書いてあるので公開しません;)&lt;/ins&gt;

今回は、ログファイルをパースして、グラフっぽいHTMLを書き出してみた。これもcronで一日一回生成してscpでサーバーに投げるようにした。オフィスのネットワークやモバイル(wimax/iPhone)など接続先にあわせて色分けしたので、時期や季節によって行動パターンが違うのがわかって面白いと思う。寒くなると冬眠するがごとく活動時間が短くなっている様がよくわかりますね(震え声

ちなみに2011年3月の空白期間は、ラップトップのロジックボードがやられて起動不能だった+修理期間で、地震は直接の原因ではなかったりする。




</description>
    </item>
    
    <item>
      <title>Rainbow ticket log</title>
      <link>http://example.org/2012/000513.html</link>
      <pubDate>Thu, 29 Nov 2012 23:43:37 +0900</pubDate>
      
      <guid>http://example.org/2012/000513.html</guid>
      <description>
11.24
  taku メールで愚痴を言う 「QRコードめんどい」
11.27 tue
  taku meetingで問題提起する
  俺 QRコードがベストだという
その夜
  以前からあったbluetoothで同期した画面アクションで何とか出来ないかと思う。色ベースでのアイデア。同期したイルミネーションの中では異物を見つけやすいという基本アイデア。
  (この夜の考え)チェックインをスムーズに行うことが出来ればうまくいきそう
  (この夜の考え)別の画面に接触させてカメラ経由でトリガー引いてping送る、という方向で
11.28
  朝 jsベースでスケッチをコーディング
  officeでTaku, Mark, Fumiakiに話してみる、ピンときてない模様
  やる気なくなる
  夜 とりあえずjsベースで、イルミネーションが同期するコード書く。見た目の楽しさに愉快になる。
11.29
  朝 複数端末間でイルミネーションが同期するデモを会社で見せる。taku,181,Shoji反応よし。
  夜 退社直後に、「イルミネーション変化が信頼出来るなら、その画面に表示されている内容も信頼出来るので、超短いパスコードを使える」ということに気づく



</description>
    </item>
    
    <item>
      <title>一人旅してきた(名古屋〜伊勢)</title>
      <link>http://example.org/2012/000512.html</link>
      <pubDate>Fri, 06 Apr 2012 22:55:04 +0900</pubDate>
      
      <guid>http://example.org/2012/000512.html</guid>
      <description>
二泊三日で一人旅してきた。出発前から時系列順に、思った事とか。

&lt;h3&gt;iPad&lt;/h3&gt;

旅の目的はとにかくのんびりする事なので、MacBook Airは持たず、iPadだけ持って行くことに。
iPadで映画を観ようと出発前日にiTunesからレンタルするも、なぜかダウンロード始まらず。&lt;a href=&#34;http://apple-japan-vm.hosted.jivesoftware.com/thread/10107006?start=0&amp;tstart=0&#34;&gt;映画のレンタルでダウンロードされません: Apple サポートコミュニティ&lt;/a&gt;と同じ現象。出発直前に再度試したらダウンロード始まったのだが、出発を何時間も遅らせる訳にも行かず断念。残念その1。

&lt;h3&gt;東京〜名古屋〜松阪&lt;/h3&gt;

最初の目的地は松阪。松阪に行って松坂牛を食べるというのは一つのステータスです、と思っていた時期が僕にもありました。
ゆっくり起きて新幹線で名古屋に。駅なかの適当なお店できしめんを食べて、すぐJRで松阪へ。
予約したホテルにチェックイン。翌日の宿との予算の兼ね合いから、最安のホテルを選んだが、これはちょっと厳しかった。カプセルホテルに近い。なにか大きな問題があるという訳ではないが、部屋がすごく狭くて惨めな気持ちに。次からはもう少しだけ最低ラインを上げようと思った。

&lt;h3&gt;一升びん宮町店&lt;/h3&gt;

まず行ったのは、世にも珍しい回転焼肉の店。しかも松坂牛。&lt;a href=&#34;http://www.yakiniquest.com/-/000730/&#34;&gt;yakiniquestでもレビューされているが&lt;/a&gt;、ある意味回っているだけで勝ちなお店(話のネタになるという意味で)。お得感あふれる皿が多い(松坂牛内蔵五種すこしずつ盛り合わせで300円とか、ホルモン切り落とし200円とか)ので、消費行動としては決して失敗ではなかった、と言っておく。
ちなみに店内には普通に一皿ずつ注文する普通の座敷席もあって、そちらはほぼ満席になっていた。回転焼肉エリアにはあまり人はいなかった。
二件目を視野に入れて早めに店を出る。

&lt;h3&gt;夜の松阪&lt;/h3&gt;

とりあえず駅前まで出て、二肉目を求めて適当にぶらぶらする。
夜の7時くらいだが駅周辺はほとんどのお店がシャッターが閉まっていて、かなり寂しい感じ。駅から百〜二百メートルほど離れた幹線道路沿いではほとんどのお店が開いていたので、狭い範囲でドーナツ化しているという事なのか。
お目当ての松坂牛をメインに食べられるお店は、大きく以下の3系統にわかれている感じ。

&lt;ul&gt;
	&lt;li&gt;ステーキ10,000円〜という有名高級店&lt;/li&gt;
	&lt;li&gt;幹線道路沿いのファミリー焼肉/すき焼き/しゃぶしゃぶ店&lt;/li&gt;
	&lt;li&gt;駅周辺のホルモン居酒屋&lt;/li&gt;
&lt;/ul&gt;

高級店はさすがに予算が厳しいのと、そういう肉なら多分東京でも食べられると思いパス。ファミリー店なら先の一升びんが代表格なのだろうが、同じチェーンをはしごというのも何なのでこれもパス。
残るは駅周辺の、ざっくり「ホルモン」と看板に書いてある居酒屋に飛び込みで入る事なのだが、かなりプレッシャーの強い店構えのお店ばかりで、結局、どの店の暖簾もくぐる事が出来なかった。敗北です。修行不足ですね。そもそも焼肉屋をハシゴ出来る程若くない、というのは言い訳でしょうか。十年経って一人焼肉の経験をもっとたくさん積んだらまた挑戦しようと心に誓いました。
雰囲気の良い鉄板焼き屋で焼酎をチビチビ飲んでました。美味しかったです。

&lt;h3&gt;モーニング&lt;/h3&gt;

二日目、駅前の適当な喫茶店で朝食。話に聞く名古屋式モーニングを食べる。松阪は名古屋文化圏なのだなあと感心する。

&lt;h3&gt;伊勢市へ&lt;/h3&gt;

電車で伊勢市へ。一両編成のワンマン運転で、駅の改札と切符を使ったシステムと、バスのような整理券を使った車内精算のシステムが併用されていてカルチャーショックを受ける。ユーザビリティについて考えさせられたりする。
車窓からの眺めが、とても広々としていて癒される。乗り鉄になっても良いかな、と思う。

&lt;h3&gt;神宮&lt;/h3&gt;

外宮、内宮と回る。とても気持ちよかった。特に宇治橋を渡ったあたり。近代的な建物が視界から消えて、四方を低い山に囲まれると、下界から切り離されたような感覚になる。感動する。千数百年も前にこの空間の切り取り方を狙っていたのだとしたらこれもデザインだな、デザインの力って凄いな、などと下界から切り離されていない事を考えたりもする。

&lt;h3&gt;おかげ横丁&lt;/h3&gt;

内宮脇のおかげ横丁でランチ。のつもりが、金色に輝く美しいビールサーバーが目に入ってしまう。牡蠣フライと、神都麦酒という地ビール。この神都麦酒がスッキリしてとても美味しく、おかわりしてしまう。牡蠣フライも当たり前のように美味い。まだ午前中。
珈琲で少し酔いをさまして、紙芝居をやっているのを眺めたりぶらぶらしていると、&lt;a href=&#34;http://www.okageyokocho.co.jp/shop/okageza.html&#34;&gt;おかげ座&lt;/a&gt;というのを見つける。面白そうなので入館してみる。300円。
館内に入ると、伊勢神宮はこんなに凄いんだというイメージビデオを見せられ、正直だまされたと思った。
実はその後が本編で、江戸時代の伊勢の街のジオラマを、ガイド付きで見て回る。ジオラマと言ってもかなり巨大なもの。1/2伊勢の街。良かった。

&lt;h3&gt;上之郷&lt;/h3&gt;

伊勢を離れ、五十鈴川駅からこの日の宿の最寄り駅である鵜方駅に向かう。途中、上之郷駅で下車。目的も無く、何があるのか、何が無いのかもわからないまま降りた。人家は普通にあった。車もたまに走っている。喉が渇いたが自販機は無かった。駅前の一等地には廃墟があった。
30分後には次の電車が来るので、それまで写真など撮って過ごす。無計画な一人旅でないとなかなか出来ない途中下車。結構楽しかった。
これを書いている時点では、こいつ一人旅してる自分に酔ってるだけじゃないかと思ってもいる。

&lt;h3&gt;志摩温泉&lt;/h3&gt;

鵜方駅から送迎車で宿へ。松阪での宿泊費を削った分を盛って、貸し切りの小さな露天風呂が複数あるちょっと贅沢な宿。平日という事で他の客も少なく、貸し切りの貸し切り状態。お風呂には3回入った。
レストランでの食事という事で、あの人なんでひとりなの的な視線を恐怖していたが、しきりのある半個室で安心。
料理はとてもとても美味しかった。お造り、鍋、生牡蠣、揚げ物、たぶん、美味しさのあまり一人で満面の笑みのまま食べていたと思う。

&lt;h3&gt;iPad その2&lt;/h3&gt;

softbankのwifiスポットが見えたので、iPad(wifiモデル)をつなごうとする。宿にはネット接続サービスは無かった。iPadからsoftbankのネットワークを使うのは初めてだったので、まずiPhoneのほうから3G経由でソフトバンクのサイトを開いてIDとパスワードを取得、セットアップする。無事使える。kinoppyでマンガを買ってみたりする。便利。
ところが、食事から戻ってきたらiPadの接続はリセットされておりオートコンプリートも効かず、iPhoneのブラウザのキャッシュも消えていて打つ手がなくなる。IDが発行された画面で、内容をメールで送信するリンクを手動で叩いておかなくてはいけなかったらしい。iPadのシリアルナンバーとペアでメールアドレスも登録してあるのに、リカバリーの手段も見当たらない。同一シリアルナンバーでの再登録も弾かれる。腹立たしいがあきらめる。残念その2。

&lt;h3&gt;雨&lt;/h3&gt;

宿の周辺は良い感じに暗く、星空や、夜の海岸の写真を撮ろうと思っていたが、まさかのにわか雨。ついさっきまで晴天で、乾燥注意報まで出てるのに。濡れながら一枚だけ海に向けて撮った。結構雨が強くて退散。残念その3。

&lt;h3&gt;三日目&lt;/h3&gt;

宿の予約があるのはこの日まで。基本的には帰るつもりだが、途中どこに寄っても良いし、なんならどこかでもう一泊しても良し。
前日までで乗り鉄になりかかっていた自分として考えたのは、近鉄大阪線で大阪を目指すという案。地図を見る限り山の中をひた走るようで、とても気持ち良さそう。
食い意地の張った従来の自分としては、大阪は何回か行ったが名古屋は行った事が無い。初日も素通りした。手羽先きしめんヒツマブシ。台湾ラーメン味噌煮込み。
人は簡単には変われない。

頑張って起きて、宿の朝食。机上で炭火焼でみりん干しを焼いたりと、かなり贅沢な朝食。やはり美味しい。が、普段朝食をとらないので、かなりの満腹感に。
遅めの11時に宿を出て、特急で名古屋に。

&lt;h3&gt;名古屋市内&lt;/h3&gt;

Twitterでアドバイスを貰い、栄の&lt;a href=&#34;http://www.houraiken.com/hitsumabusi.html&#34;&gt;ヒツマブシの店&lt;/a&gt;へ。しかし、あまりお腹が空かない。並盛りもつらいなー、小盛りとかあるかなーと、牛丼屋に行くような気持ちで店の前に立つも、どうもそういう雰囲気ではない。値段からしてガチだ。この腹具合で入店するのは失礼にあたると判断し、諦める。
その分、この後に行く手羽先で全力を出すと心に誓う。目指すは風来坊。開店は5時らしいので、それまで市内観光をして開店と同時に突入する事にする。

先のwifiの件でAppleStoreとソフバンショップを回るもサポートセンターに聞けで終了。まあ予想通り。
iPhone用の外部電源も欲しかったが良いのが無い。そこで、栄の駅を降りたときに見かけたビックカメラに行ってみようとしたが辿り着けない。mapで検索しても出てこない。後でわかったが、栄の駅前にあったのはトップカメラというカメラ屋だった。

コメダ珈琲で一服。ちょっとだけお腹に入れようと思いTwitterでアドバイスを募ると全方位からシロノワールを強烈にプッシュされる。ミニシロノワールを頼んだ。ミニを頼むとは軟弱だと猛烈にdisられる。

&lt;h3&gt;名古屋城&lt;/h3&gt;

せっかくだから名古屋城に行ってみようと、地下鉄に乗る。それっぽい名前の名城公園駅で降りる。この駅は名古屋城の最寄り駅ではなかったらしく、お城を大外回りで一周する事に。花見がこれから始まるぜ、という雰囲気のなか、桜や名城公園の風景、お城の写真を撮って歩く。名古屋城の本丸は結局外から眺めるだけにした。

&lt;h3&gt;観覧車&lt;/h3&gt;

栄に戻り、風来坊に向かう途中、思いつきで観覧車に乗ってみる。
乗ってから、最近高所恐怖症気味なことを思い出す。こともあろうにこの観覧車、下が見える透明なゴンドラで、足下をみると高さがよくわかって凄く怖かった。下を見ないようにしても、急に止まるんじゃないかと怖かった。戦場カメラマンのように、ファインダーを覗いていれば恐怖心がなくなるんじゃないかと思ったが、僕のep-1にはファインダーが無かった。もちろん怖いままだった。
最近急に高いところや高い乗り物が駄目になった。なんだろう。
名古屋城が見えるかと思ったが見えなくて残念だった。見つけられなかっただけかしら。

&lt;h3&gt;風来坊&lt;/h3&gt;

勝手に想像していたイメージ(自分にとっての手羽先の原風景は高田馬場の山ちゃん)と違い、凄いおしゃれな雰囲気の店内。とりあえず手羽先とビール。
手羽先が置かれた瞬間の香りがヤバい。食欲そそりすぎて、さっきまでの満腹感などを一瞬で忘れる。ビール。甘くて辛くておいしい。しばらく手羽先を骨だけにする機械になる。

&lt;h3&gt;帰宅&lt;/h3&gt;

思考停止寸前のところで、この後の事を考える。名古屋に一泊しようか。スケジュール的には問題ないが、金銭的な問題はある。結構歩いたので、体力的にもちょっときつい。ということで大人しく帰る事にした。新幹線に乗りに名古屋駅へ。
結構酔っていたのか疲れていたのか、切符を買った後お土産も買わず、流れるようにホームまで来てしまった。手羽先買おうと思ってたのに。
名古屋駅から3時間かからずに家まで帰ってきた。名古屋近いなー。





</description>
    </item>
    
    <item>
      <title>退職したので、Six Apart入社前の話を書くよ。</title>
      <link>http://example.org/2012/000511.html</link>
      <pubDate>Mon, 02 Apr 2012 11:10:50 +0900</pubDate>
      
      <guid>http://example.org/2012/000511.html</guid>
      <description>&lt;p&gt;7年前、自分は30前にして食えないフリーターでした。人生詰んでました。&lt;br /&gt;
パソコンは好きで、Cでサウンドプログラミングの真似事のような事をしたりもしましたが、まったくの独学のため、仕事に出来るようなレベルではないと思っていたし、エンジニアリングを仕事にしたいと考えても見たものの、実際のところどうやって仕事に結びつけたら良いのかさっぱりわかりませんでした。&lt;br /&gt;
コンビニのバイトと、時々宅急便の仕分けなどしていましたが、元々体が弱く、仕事を休んでは家賃を滞納したり&lt;a name=&#34;gas&#34; href=&#34;#gas-fn&#34;&gt;ガスを止められ&lt;/a&gt;たりして、大変残念な30前でした。&lt;/p&gt;

&lt;p&gt;さすがにこのままだとヤバいと思っていた頃、&lt;a href=&#34;#afro-fn&#34; name=&#34;afro&#34;&gt;コンビニのお客さん&lt;/a&gt;に派遣でIT系の仕事探してみたらどうかと提案されました。その子も派遣で働いていて、紹介すると500円分の図書券がもらえるので、是非同じ派遣会社に登録しろと。&lt;br /&gt;
良くわからないままに、紳士服の青山で&lt;a href=&#34;#suite-fn&#34; name=&#34;suite&#34;&gt;2万円くらいのスーツ&lt;/a&gt;を買い、&lt;a href=&#34;#hair-fn&#34; name=&#34;hair&#34;&gt;髪を切り&lt;/a&gt;、派遣会社での面接に行きました。すごく社会人らしく振る舞わねばならない、と、結構悲壮な覚悟で新宿に行った事を覚えています。なにかビジネスバッグ的なものが必要だと思い込み、面接直前にヨドバシで2000円の黒くて四角いバッグを買いました。&lt;br /&gt;
簡単なレクチャーとスキルテストのあと、担当の方についていただき派遣先の検討をします。&lt;/p&gt;

&lt;p&gt;「どのような業務内容をご希望でしょうか?」
「音楽系のソフトのサポートとかやりたいです!」
「えー。。。」&lt;/p&gt;

&lt;p&gt;なぜ音楽系かというと単に好きだったからであり、なぜサポートかというと、本当は開発をやりたいが自分には無理だと決め込んでいたからです。&lt;br /&gt;
そもそも商用ソフトの案件自体少ないと思われるうえに、音楽系のソフトという絶対数の少なそうなリクエストでしたが、それっぽい仕事を探してきてくれました。この時の巡り合わせは、いろいろな意味で本当に幸運だったのでしょう。「ちょうど今、国産の音楽ソフトのサポート業務の募集がある。ただし、他にもWeb系のソフトのサポートなど、複数業務を兼任となる」という条件でした。よくわからないままOKしました。担当の方は美人でした。&lt;/p&gt;

&lt;p&gt;その「Web系のソフト」というのがMovable Typeだった訳です。「国産音楽ソフトのサポート業務」は完全閑古鳥状態で、MTのサポートがメインになる、というのは出社して初めてわかった事でした。MTは&lt;a href=&#34;#mt-fn&#34; name=&#34;mt&#34;&gt;一度触った&lt;/a&gt;事がある程度だったのですが、経験者は貴重らしく、初日に検証環境にパッケージをインストールしただけで褒められた事を覚えています。&lt;/p&gt;

&lt;p&gt;それからこのブログを書き始め、仕事についていくための勉強を兼ねてプラグインの作成に挑戦したりしていました。どんなレベルだったのかは、過去ログを読んでいただけたら大体わかると思います。興味のある方はどうぞ。自分でも読み返してみましたが、ひどいですね。&lt;br /&gt;
ここから約3年間、サポート業務をしつつ野良プラグインの開発などを続け、開発チームにも顔を覚えてもらえるようになり、最終的にはエンジニアとしてSix Apartに入社することになります。この時期、いくつかのきっかけを得てエンジニアとして成長する事が出来たと思います。&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;使ってもらえるものを公開した&lt;/dt&gt;
&lt;dd&gt;
公開したプラグインのうちのいくつかを、幸運にも気に入って使ってくださる人がいて、それが凄くモチベーションになりました。フィードバックが貰えると、とてもやる気になります。やる気がちょっと暴走して、朝会社に行ってサポート業務をし、夜帰ってきてから&lt;a href=&#34;#midnight-fn&#34;&gt;翌日起きられるぎりぎりの時間まで&lt;/a&gt;個人の開発をする、というMT漬けの生活をしたりもしてました。
時には2chでネタを拾ってきて押し売り同然に使ってもらう、みたいな事もしていました。
&lt;/dd&gt;
&lt;dt&gt;公開された良いコードを読んだ&lt;/dt&gt;
&lt;dd&gt;
プラグインを書き始めた頃はMTはまだオープンソースライセンスではありませんでしたが、ソースコードは(Perlで書かれたインストールベースのソフトなので当たり前ですが)もちろん、開発リポジトリも公開されていて、最新の開発コードに触れる事が出来ました。
特にMT4で導入されたregistryの仕組みはとても論理的で、この時期、最新のコードを追っかけるのがとても楽しみでした。タイミング的にも自分の理解が追いついてきたところで、追加された多くの新機能の詳細はブログ記事のネタにもなるので、毎日コード読んでました。
贔屓目かもしれませんが、MTのコードはきれいに書かれていて、コードリーディングを学ぶ上でとても良かったと思います。
&lt;/dd&gt;
&lt;/dl&gt;



&lt;a href=&#34;http://localhost/~asawada/Sites/my_first_website/aklaswad/2007/06/movable-type-4.html&#34;&gt;Movable Type 4 のプラグイン作成での新機能 - aklaswad&lt;/a&gt;
&lt;a href=&#34;http://localhost/~asawada/Sites/my_first_website/aklaswad/2008/01/mtosmtentries.html&#34;&gt;詳説MTEntries - aklaswad&lt;/a&gt;


そんなわけで、今月からPeatixにjoinします。

&lt;style&gt;
dl.footnotes {
    font-size: 75%;
}

dl.footnotes dt {
    border: 0;
}
&lt;/style&gt;
&lt;dl class=&#34;footnotes&#34;&gt;
&lt;h3&gt;footnotes&lt;/h3&gt;
&lt;dt&gt;&lt;a href=&#34;#gas&#34; name=&#34;gas-fn&#34;&gt;ガスを止められ&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;ガスは少し滞納するとすぐ止まる。再開までに一日とかかかるのでかなり困る。仕事前に風呂に入れず、近所のサウナに行ったりした。他にも&lt;a hrer=&#34;http://blog.aklaswad.com/2006/000055.html&#34;&gt;ネットを止められたり&lt;/a&gt;もした。&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#suite&#34; name=&#34;suite-fn&#34;&gt;2万円くらいのスーツ&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;後にSix Apartに面接を受けに行くときにも着ていった。サポートの初日とあわせて三回しか着ていない。スーツは未だにこの一着しか持っていないが、多分もう入らない。&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#hair&#34; name=&#34;hair-fn&#34;&gt;髪を切り&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;美容師さんに「面接に受かるような髪型にしてください」と言ってカットしてもらった。その前は「ロナウジーニョにしてください」と言ってちりちりの長髪にしてもらっていた。&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#afro&#34; name=&#34;afro-fn&#34;&gt;コンビニのお客さん&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;コンビニに良く来ていたアフロのバンドマン。1,2回ライブを見に行っただけなのに、ずいぶん良くしてもらった。彼が引っ越すときに洗濯機をもらったりした。今でも使ってる。元気だろうか。派遣をやっていたのはアフロの彼女さん。&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#mt&#34; name=&#34;mt-fn&#34;&gt;一度触った&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;この一年程前に、流行のブログというやつを触ってみようとインストールしてみたことがあった。ライセンスが難しかったので結局MTはやめて、しばらくnucleusを使っていた。wordpressはまだ無かったと思う。&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#midnight&#34; name=&#34;midnight-fn&#34;&gt;翌日起きられるぎりぎりの時間まで&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;当然遅刻が増えるのであまりおすすめはしない。&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>MacBook Air(2011 Mid / Lion)買ったので環境構築メモ</title>
      <link>http://example.org/2011/000510.html</link>
      <pubDate>Sun, 04 Dec 2011 22:15:29 +0900</pubDate>
      
      <guid>http://example.org/2011/000510.html</guid>
      <description>&lt;h3&gt;環境設定編&lt;/h3&gt;

&lt;h4&gt;OSのセットアップ時&lt;/h4&gt;
&lt;p&gt;キーボード配列はUS。OSの言語設定は日本語を選択&lt;/p&gt;

&lt;h4&gt;ファンクションキーを有効に&lt;/h4&gt;
&lt;p&gt;環境設定 &gt; キーボード &gt; キーボード &gt; F１、F２などの...をチェック&lt;/p&gt;

&lt;h4&gt;ことえりを有効に&lt;/h4&gt;
&lt;p&gt;環境設定 &gt; 言語とテキスト &gt; 入力ソース でことえりを探してチェックを入れる。 あとでgoogleIME入れる。&lt;/p&gt;

&lt;h4&gt;Dock周りを整理&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;左に移動して自動で隠れるように。&lt;/li&gt;
	&lt;li&gt;とりあえずterminalをdockに&lt;/li&gt;
	&lt;li&gt;Finder開いて左メニューのアプリケーション &gt; ユーティリティー &gt; ターミナルをDockにドラッグ&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;capslockとcontrol入れ替え&lt;/h4&gt;
&lt;p&gt;環境設定 &gt; キーボード &gt; キーボード &gt; 修飾キー&lt;/p&gt;

&lt;h4&gt;spotlight起動のショートカットを殺す (ctrl+spaceはemacsで使うので)&lt;/h4&gt;
&lt;p&gt;環境設定 &gt; キーボード &gt; キーボードショートカット&lt;/p&gt;

&lt;h4&gt;Chromeインストール&lt;/h4&gt;
&lt;p&gt;同期一発で前と同じ環境になる超便利&lt;/p&gt;

&lt;h4&gt;MissionControlはとりあえず放置&lt;/h4&gt;
&lt;p&gt;今まで(SnowLeopard)、あまりcommand+tabは使わずspacesでやりくりしていた(command+←/→で移動してた。押しやすくて便利だった)が、いろいろ弄ってみても前と同じ動作にならなそうなので、別の方法を探す。アプリケーションの切り替えをcommand+←/→に当ててみようかしら。 =&gt; アプリケーションの切り替えの設定場所が分からないので後回し。しばらくデフォルトの設定で使って慣れることにする。&lt;/p&gt;

&lt;div&gt;&lt;ins datetime=&#34;2011-12-11T12:50:27+09:00&#34;&gt;(追記)ReederやTwitterでのマウスジェスチャが動かなくて難儀していたが、以下の設定で動くようになった。
&lt;ul&gt;
	&lt;li&gt;環境設定 &gt; トラックパッド &gt; その他のジェスチャ &gt; ページ間をスワイプ で 『2本指または3本指でスワイプ』を選択&lt;/li&gt;
&lt;/ul&gt;
参考 &lt;a href=&#34;http://dbarg2.blog102.fc2.com/blog-entry-1211.html&#34;&gt;Lionで3本指スワイプによるブラウザの戻る＆進むなどを有効にする方法（追記） - MacBookの小部屋&lt;/a&gt;&lt;/ins&gt;&lt;/div&gt;

&lt;h4&gt;ターミナルの設定&lt;/h4&gt;
&lt;p&gt;以前の設定を持ってくる方法はわからなかった。
とりあえず環境設定から&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;起動 &gt; 起動時に開く &gt; 次の設定の新しいウィンドウ &gt; Proに変更&lt;/li&gt;
	&lt;li&gt;設定 &gt; 左ペインでProを選択 &gt; 左ペイン下部のデフォルトボタンでデフォルトに設定&lt;/li&gt;
	&lt;li&gt;設定 &gt; Pro &gt; テキスト &gt; テキストをアンチエイリアス処理を有効に。フォントをOsaka 14pxに変更。&lt;/li&gt;
	&lt;li&gt;設定 &gt; Pro &gt; シェル &gt; 次の指定プロセス以外が実行中の場合のみ にemacsを追加&lt;/li&gt;
	&lt;li&gt;設定 &gt; Pro &gt; キーボード &gt; メタキーとしてoptionキーを使用 をチェック&lt;/li&gt;
	&lt;li&gt;設定 &gt; Pro &gt; 詳細 &gt; オーディオベルのチェックを外す&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;アプリインストール編&lt;/h3&gt;
&lt;h4&gt;Growl&lt;/h4&gt;
&lt;p&gt;AppStoreで買った。170円くらい。今までお世話になってた人はキチンとお金払おうね！お金は払いたくないけどgrowl嫌いだけど使いたいけどっていう人は自分でビルドして使うことも出来るらしいよ!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://growl.info/downloads&#34;&gt;http://growl.info/downloads&lt;/a&gt;からGrowlNotify(コマンドラインツール)もダウンロードしてインストール。後でcoffeescript-growlで使う。&lt;/p&gt;

&lt;h4&gt;XCodeのインストール&lt;/h4&gt;
&lt;p&gt;AppStoreから。無料。終わらないので一晩放置、と思ったら中途半端な時間に落ちてきてた。&lt;/p&gt;

&lt;h3&gt;homebrew編&lt;/h3&gt;
&lt;h4&gt;homebrewをインストール&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;sudo mkdir /usr/local
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/gist/323731)&amp;quot;
&lt;/pre&gt;

&lt;h4&gt;mysql&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;brew install mysql
unset TMPDIR
mysql_install_db --verbose --user=&#39;********&#39; --basedir=&amp;quot;$(brew --prefix mysql)&amp;quot; --datadir=/usr/local/var/mysql --tmpdir=/tmp
cp /usr/local/Cellar/mysql/5.5.15/com.mysql.mysqld.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/com.mysql.mysqld.plist
&lt;/pre&gt;

&lt;h4&gt;node&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;brew install node&lt;/pre&gt;

&lt;h4&gt;emacs&lt;/h4&gt;
&lt;p&gt;デフォルトではemacs-22が入っているが、whitespace-modeを使うためemacs-23を入れ直す。&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;brew install emacs&lt;/pre&gt;

&lt;h3&gt;perlbrew + cpanm 編&lt;/h3&gt;

&lt;h4&gt;perlbrew&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;curl -kL http://xrl.us/perlbrewinstall | bash
echo &amp;quot;source ~/perl5/perlbrew/etc/bashrc&amp;quot; &amp;gt; .bashrc
perlbrew install perl-5.14.2
perlbrew switch perl-5.14.2
perlbrew install-cpanm&lt;/pre&gt;

&lt;ins datetime=&#34;2011-12-08T00:22:43+09:00&#34;&gt;(追記)Lion特有？自分の環境では、古いperl(5.8.9とか)がすんなり入らなかった。しばらく困ったが、patchperlだけ再インストールしたら上手く行った。
&lt;pre class=&#34;code&#34;&gt;perlbrew install-patchperl
perlbrew install perl-5.8.9&lt;/pre&gt;なんか本当にoverwriteするかと聞かれるのでyesと答える。&lt;/ins&gt;

&lt;ins datetime=&#34;2011-12-08T00:44:31+09:00&#34;&gt;&lt;h4&gt;（追記)Task::Plack&lt;/h4&gt;
EVが入らないという罠あり。&lt;code&gt;cpanm Task::Plack&lt;/code&gt;で順当にこけた後に、&lt;a href=&#34;http://llvm.org/bugs/show_bug.cgi?id=9891&#34;&gt;http://llvm.org/bugs/show_bug.cgi?id=9891&lt;/a&gt;のパッチをあてる。
&lt;pre class=&#34;code&#34;&gt;cpanm Task::Plack
cd ~/.cpanm/latest-build/EV-4.03/
patch -p0 &amp;lt; /path/to/patch-for-ev
cpanm .
cpanm Task::Plack&lt;/pre&gt;
とかそんな感じで。
参考: &lt;a href=&#34;http://torus.tumblr.com/post/10720272072/lion-plack-ev&#34;&gt;Lion で Plack をインストールすると EV のテストでエラーがでる。&lt;/a&gt;&lt;/ins&gt;

&lt;h4&gt;DBD::mysql (うろ覚え)&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;mysql -u root
mysql&amp;gt; create database test character set utf8;
mysql&amp;gt; grant all privileges on *.* to (ログインネーム)@localhost;
mysql&amp;gt; \q
cpanm DBD::mysql&lt;/pre&gt;

&lt;h3&gt;node編&lt;/h3&gt;

&lt;h4&gt;npmをインストール&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;curl http://npmjs.org/install.sh | sh&lt;/pre&gt;

&lt;h4&gt;QUnit&lt;/h4&gt;
&lt;p&gt;qunit-tapで使うため、npmでみつかるnode-qunitではなく、本家を直接インストール。しょっちゅう使うのでグローバルに。&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;npm install -g https://github.com/jquery/qunit/tarball/v1.2.0&lt;/pre&gt;

&lt;h4&gt;QUnit-tap&lt;/h4&gt;
&lt;p&gt;これもグローバルに&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;npm install -g qunit-tap&lt;/pre&gt;

&lt;h4&gt;CoffeeScript&lt;/h4&gt;
&lt;pre class=&#34;code&#34;&gt;npm install -g coffee-script&lt;/pre&gt;

&lt;h4&gt;coffeescript-growl&lt;/h4&gt;
&lt;p&gt;coffeescriptのコンパイル結果をgrowlで通知してくれる。更新されていないようなので、適当に直してインストールした。&lt;/p&gt;

&lt;pre class=&#34;code&#34;&gt;git clone https://github.com/wesbos/coffeescript-growl.git
cd coffeescript-growl
patch -p0 &amp;lt; fix.patch
npm install -g .&lt;/pre&gt;

&lt;pre class=&#34;code&#34;&gt;index 8f0ed15..0cd0a59 100644
--- coffeescript-growl.coffee
+++ coffeescript-growl.coffee
@@ -1,11 +1,11 @@
-sys = require(&#39;sys&#39;)
+util = require(&#39;util&#39;)
 exec = require(&#39;child_process&#39;).exec
 CoffeeScript = require &amp;quot;coffee-script&amp;quot;
 
 App = {}
 
 App.puts = (error, stdout, stderr) -&amp;gt;
-	sys.puts(stdout)
+	util.puts(stdout)
 
 App.icon = &amp;quot;#{__dirname}/i/coffee.png&amp;quot;
 
diff --git package.json package.json
index 760efb4..3aadc24 100644
--- package.json
+++ package.json
@@ -11,7 +11,7 @@
   },
   &amp;quot;main&amp;quot;: &amp;quot;coffeescript-growl.js&amp;quot;,
   &amp;quot;engines&amp;quot;: {
-    &amp;quot;node&amp;quot;: &amp;quot;&amp;gt;= 0.4.8 &amp;lt; 0.5.0&amp;quot;
+    &amp;quot;node&amp;quot;: &amp;quot;&amp;gt;= 0.6.0 &amp;lt;= 0.6.4&amp;quot;
   },
   &amp;quot;dependencies&amp;quot;: {},
   &amp;quot;devDependencies&amp;quot;: {}
&lt;/pre&gt;&lt;h3&gt;Apache編&lt;/h3&gt;

&lt;h4&gt;デフォルトで入っているApacheを使う&lt;/h4&gt;
&lt;p&gt;環境設定 &gt; 共有 &gt; Web共有をチェック
 /private/etc/apache2/users/(ログイン名).confが自動生成されていると思うので、cgiなど使えるように編集する&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;&amp;lt;Directory &amp;quot;/Users/(ログイン名)/Sites/&amp;quot;&amp;gt;                                                                                                                                                              
    Options Indexes -MultiViews ExecCGI FollowSymLinks                                                                                                                                           
    AllowOverride All                                                                                                                                                                            
    Order allow,deny                                                                                                                                                                             
    Allow from all                                                                                                                                                                               
    AddHandler cgi-script .cgi                                                                                                                                                                   
    AddHandler fastcgi-script .fcgi                                                                                                                                                              
&amp;lt;/Directory&amp;gt; &lt;/pre&gt;


&lt;ins datetime=&#34;2011-12-12T12:33:35+09:00&#34;&gt;
&lt;h4&gt;(追記)varnish&lt;/h4&gt;
&lt;p&gt;varnishを80番で起動して、Apacheやplackupしたサービスはリバースプロキシする事にした。&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt;brew install varnish&lt;/pre&gt;
&lt;p&gt;今あるformulaでは起動スクリプト的なものはついてこないみたいなので、自分でplistを書く。&#34;varnish plist&#34;とかでググればたくさん見つかる。&lt;br /&gt;
80番ポートをリッスンするにはシステム権限で起動する必要があるので、plistを/Library/LaunchDaemons/に置く。ファイルオーナーもroot:wheelとかに変更しておく。&lt;/p&gt;
&lt;/ins&gt;


&lt;h3&gt;以上&lt;/h3&gt;
&lt;p&gt;ほかにもいろいろやった気がするけど忘れた。おわり。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>三点リーダ</title>
      <link>http://example.org/2011/000509.html</link>
      <pubDate>Sat, 03 Dec 2011 11:54:48 +0900</pubDate>
      
      <guid>http://example.org/2011/000509.html</guid>
      <description>
1 ...
2 ・・・
3 ･･･
dots ...</description>
    </item>
    
    <item>
      <title>コンピュータ音楽―歴史・テクノロジー・アート</title>
      <link>http://example.org/2011/000508.html</link>
      <pubDate>Sun, 30 Oct 2011 21:26:18 +0900</pubDate>
      
      <guid>http://example.org/2011/000508.html</guid>
      <description>
前回の記事で書いたsonificatorの開発が思いの外面白く、勢い余って買ってしまった。コンピュータで作曲や音声合成を行うための理論が網羅的に解説されている大著。

&lt;a href=&#34;http://www.amazon.co.jp/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E9%9F%B3%E6%A5%BD%E2%80%95%E6%AD%B4%E5%8F%B2%E3%83%BB%E3%83%86%E3%82%AF%E3%83%8E%E3%83%AD%E3%82%B8%E3%83%BC%E3%83%BB%E3%82%A2%E3%83%BC%E3%83%88-Curtis-Roads/dp/4501532106%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dblogaklaswadc-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4501532106&#34; target=&#34;_blank&#34;&gt;コンピュータ音楽―歴史・テクノロジー・アート&lt;/a&gt;&lt;br /&gt;Curtis Roads 青柳 龍也 後藤 真孝 &lt;br /&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E9%9F%B3%E6%A5%BD%E2%80%95%E6%AD%B4%E5%8F%B2%E3%83%BB%E3%83%86%E3%82%AF%E3%83%8E%E3%83%AD%E3%82%B8%E3%83%BC%E3%83%BB%E3%82%A2%E3%83%BC%E3%83%88-Curtis-Roads/dp/4501532106%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dblogaklaswadc-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4501532106&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/418SQGVQHQL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;4501532106&#34; /&gt;&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.jp/e/ir?t=blogaklaswadc-22&amp;l=ur2&amp;o=9&#34; width=&#34;1&#34; height=&#34;1&#34; style=&#34;border: none;&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;

「訳者らあとがき」によれば原著は1996年とのことで、実に15年前の内容。記述が古い箇所が多いことも否めない。例えば、現在のDAWのようにMIDIイベントとオーディオ波形が並んで表示されているシーケンサー画面について「&lt;q&gt;グラフィカルな表現は、純粋な MIDI データとオーディオ波形間の時間的な対応を見るのに便利である&lt;sapn class=&#34;page-number&#34;&gt;(p 608)&lt;/span&gt;&lt;/q&gt;」と解説してある。 まだ同時には再生できなかったのだ!

理論的な部分での充実度は尋常ではなく、多くのシンセサイザーやエフェクターの原理から、グラニュラーシンセシスの理論的背景まで、自分には十分すぎる範囲がカバーされている。殆どの場合、今でも不足を感じることは無いと思う。

十年くらい前に音楽系のプログラミングに凝っていた時期があって、その時に図書館で借りて頑張ってひと通り読んだ。ここ5-6年はソッチ系のことを殆どやっていないので、大分忘れてしまった。素人の手習いに過ぎないが、また頑張って読もうと思う。当時は手元に置いておきたくてもあまりに高くて手が出なかったが。。。いや、今でも十分財布に厳しいぞ。もとを取るためにもsonificatorはしばらくいじり続けたいと思います。
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/2011/000507.html</link>
      <pubDate>Thu, 27 Oct 2011 00:58:59 +0900</pubDate>
      
      <guid>http://example.org/2011/000507.html</guid>
      <description>
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社ヒッチハイク・ガイド (@ シックス・アパート) http://t.co/fJOuGj5f&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/129070006200836096&#34;&gt;October 26, 2011  5:41 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社・リボウスキー (@ シックス・アパート w/ @taite2 @dreamagicjp) http://t.co/whhqeYKJ&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/128292384600621057&#34;&gt;October 24, 2011  2:11 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;地獄の出社録 (@ シックス・アパート) http://t.co/9hBARoSJ&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/127195409058770946&#34;&gt;October 21, 2011  1:32 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;イージー・出社 (@ シックス・アパート) http://t.co/DEbhhdqt&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/126875046064029697&#34;&gt;October 20, 2011  1:19 PM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;明日に向かって出社！ (@ シックス・アパート w/ @yagishita) http://t.co/TJ8UCI2R&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/125737288486502400&#34;&gt;October 17, 2011 12:58 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;2001年宇宙の出社 (@ シックス・アパート w/ @dreamagicjp) http://t.co/QSowM4jW&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/124297058076196865&#34;&gt;October 13, 2011  1:35 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;アンドロイドは電気出社の夢を見るか (@ シックス・アパート w/ @taite2 @yagishita @dreamagicjp) http://t.co/M54qZkLS&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/123933415090290688&#34;&gt;October 12, 2011  1:30 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社・イズ・ノット・イナフ (@ シックス・アパート) http://t.co/av23HsP3&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/123572519033774081&#34;&gt;October 11, 2011 10:35 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社・オブ・ザ・デット (@ シックス・アパート w/ @taite2) http://t.co/bBX1YxQf&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/122123225089060865&#34;&gt;October  7, 2011 10:37 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;俺たちに出社はない (@ シックス・アパート w/ @dreamagicjp @taite2) http://t.co/b30NOSNR&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/121760091757228032&#34;&gt;October  6, 2011  1:34 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;霊幻出社 (@ シックス・アパート) http://t.co/imLcKnOT&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/121034309762170880&#34;&gt;October  4, 2011  1:30 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;愛と幻想の出社 (@ シックス・アパート) http://t.co/mHxdj4iz&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/120665883289985025&#34;&gt;October  3, 2011  1:06 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;香港国際出社 (@ シックス・アパート w/ @taite2 @dreamagicjp) http://t.co/4mO72nse&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/119597844360462337&#34;&gt;September 30, 2011  2:22 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;トゥモロー・ネバー・出社 (@ シックス・アパート w/ @taite2) http://t.co/aXU13XMs&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/118859743862337536&#34;&gt;September 28, 2011 10:29 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;時計じかけの出社 (@ シックス・アパート w/ @dreamagicjp) http://t.co/4qRw0Rj6&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/116684137989021697&#34;&gt;September 22, 2011  1:24 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社と共に去りぬ (@ シックス・アパート w/ @yagishita) http://t.co/wxdEcPdO&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/115961384327581696&#34;&gt;September 20, 2011 10:32 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;暴力温泉出社 (@ シックス・アパート) http://t.co/TlrrYetE&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/114516378706391040&#34;&gt;September 16, 2011  1:50 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;ナチュラル・ボーン・出社 (@ シックス・アパート w/ @taite2) http://t.co/DZUzpOSL&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/114149694405484544&#34;&gt;September 15, 2011  1:33 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社・トゥ・ザ・フューチャー (@ シックス・アパート w/ @taite2) http://t.co/bQnUr18&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/113423649968623616&#34;&gt;September 13, 2011  1:28 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;明日に向かって出社！ (@ シックス・アパート w/ @nagara) http://t.co/XbKvo3k&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/112028733635956736&#34;&gt;September  9, 2011  5:05 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社・ザ・グレート (@ シックス・アパート) http://t.co/cZAG45O&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/111615552392409088&#34;&gt;September  8, 2011  1:43 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;第9出社 (@ シックス・アパート) http://t.co/FgjsGB6&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/110518018555121665&#34;&gt;September  5, 2011  1:02 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;ナチュラル・ボーン・出社 (@ シックス・アパート w/ @taite2) http://t.co/c4xqNKN&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/108351244686471170&#34;&gt;August 30, 2011  1:32 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;博士の異常な出社 (@ シックス・アパート) http://t.co/Ltx5saT&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/107982060584574976&#34;&gt;August 29, 2011  1:05 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;自分以外全員出社 (@ シックス・アパート) http://t.co/zzP7yTT&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/106906733498220545&#34;&gt;August 26, 2011  1:52 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社3.2 (@ シックス・アパート) http://t.co/1coQwwe&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/106538798166441985&#34;&gt;August 25, 2011  1:30 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;一発で出社成功 (@ シックス・アパート) http://t.co/t0X4QvK&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/105817050466877443&#34;&gt;August 23, 2011  1:42 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;逆襲の出社 (@ シックス・アパート) http://t.co/nbFtNis&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/105451381426634754&#34;&gt;August 22, 2011  1:29 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;当然の出社 (@ シックス・アパート w/ @taite2) http://4sq.com/pFxDGG&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/101465114644979713&#34;&gt;August 11, 2011 10:29 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社学習帳 (@ シックス・アパート) http://4sq.com/ptdxyb&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/99290795647057921&#34;&gt;August  5, 2011 10:29 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;出社5.1 (@ シックス・アパート w/ @yagishita) http://4sq.com/ptvY17&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/98929155319660544&#34;&gt;August  4, 2011 10:32 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;稲妻の出社 (@ シックス・アパート w/ @taite2) http://4sq.com/pHFjVH&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/97855835614613504&#34;&gt;August  1, 2011  2:27 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;完全なる出社 (@ シックス・アパート w/ @taite2) http://4sq.com/p3WlZD&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/96759114436317184&#34;&gt;July 29, 2011  1:49 AM&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;span class=&#34;tweet&#34;&gt;会心の出社 (@ シックス・アパート) http://4sq.com/nfOEC7&lt;/span&gt;&lt;a class=&#34;tweet_date&#34; href=&#34;http://twitter.com/aklaswad/statuses/96384394532622337&#34;&gt;July 28, 2011  1:00 AM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>YAPC ASIA 2011で刺激されてJavaScriptに没頭してsonificator作った。</title>
      <link>http://example.org/2011/000506.html</link>
      <pubDate>Sat, 22 Oct 2011 14:13:25 +0900</pubDate>
      
      <guid>http://example.org/2011/000506.html</guid>
      <description>
YAPC ASIA 2011行ってきました。

cho45さんのWAFの話とか、普段書いているコードに直結するような話で興味深い話も多かったのですが、それ以上に、techno-catさんやHaruka Kataokaさんの音楽関係のトラックにとても刺激を受けました。そういえば、自分がプログラムを始めたきっかけって、テクノとかエレクトロニカとか、そんな音楽やりたくてじたばたしているうちに片足突っ込んだのがはじまりだったよな、ということを思い出したりして、まあ、いわゆる初期衝動？に立ち返ったような気持ちになりました。

で、この一週間モンモンとしているうちに、今やるならWeb Audio APIだよななどと思いつつ色々いじってたら、こんなのが出来ました。

&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://aklaswad.github.com/sonificator/&#34;&gt;sonificator&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

すべてJavaScriptで書かれていて、Web Audio APIを利用してブラウザ上でリアルタイムに動作するプログラムで、DOM構造をそれっぽい音楽に変換して演奏します。ブックマークレットから起動できます。最近のchromeでしか動きません。今のところ、いわゆるIDMとかエレクトロニカといった感じの音にチューニングされてます。ちょっとした画像効果付きなので、そっち系統の音が好きな方は、好きなサイトで実行して放置すると良い感じなんじゃないかと思います。

自分のお気に入りは、Facebookのウォール部分です。予め先の方までAutoPagarizeしておいて垂れ流すと、とても気持ち良いです。みなさんも試してみてください。

&lt;iframe src=&#34;http://player.vimeo.com/video/30919126?title=0&amp;amp;byline=0&amp;amp;portrait=0&#34; width=&#34;500&#34; height=&#34;281&#34; frameborder=&#34;0&#34; webkitAllowFullScreen allowFullScreen&gt;&lt;/iframe&gt;

Perlのパの字も無いところに落ち着きましたが、言語に拘らずいろんな方向に刺激を与えてくれるのもYAPCの良いところですね。この土日も仕事とも言語とも関係なく、好きなコード書きたいという気持ちが、今の僕には溢れてます。</description>
    </item>
    
    <item>
      <title>MTのワンライナーを素早く書く</title>
      <link>http://example.org/2011/000505.html</link>
      <pubDate>Thu, 16 Jun 2011 11:36:47 +0900</pubDate>
      
      <guid>http://example.org/2011/000505.html</guid>
      <description>
通常、MTのパッケージはシステムレベルにインストールされません。そのため、lib/ とextlib/ へのパスを実行時に追加する必要があります。
例えば、EntryオブジェクトをDumpするワンライナーは以下のようになります。

&lt;pre class=&#34;code&#34;&gt;$ perl -Ilib -Iextlib -MMT -MData::Dumper -e &#39;MT-&amp;gt;new; print Dumper(MT-&amp;gt;model(&amp;quot;entry&amp;quot;)-&amp;gt;load(42))&#39;&lt;/pre&gt;

また、プラグインごとのlibディレクトリへのパスは、MTのインスタンス作成時に動的に追加されます。そのため、MTのプラグインを開発中、コンパイルチェックをしたい時などに直接実行する事ができません。

&lt;pre class=&#34;code&#34;&gt;$ perl -Ilib -Iextlib -Iplugins/MyPlugin/lib -c plugins/MyPlugin/lib/MyPlugin.pm&lt;/pre&gt;

長いですね。

そこで、以下のようなモジュールを、perlのパスの通った場所に設置します。

&lt;pre class=&#34;code&#34;&gt;package T;
use strict;
use warnings;
use lib qw( lib extlib );
use MT;
BEGIN { MT-&amp;gt;new };
1;&lt;/pre&gt;

名前は、T.pmです。これで

&lt;pre class=&#34;code&#34;&gt;$ perl -MT -MData::Dumper -e &#39;print Dumper(MT-&amp;gt;model(&amp;quot;entry&amp;quot;)-&amp;gt;load(42))&#39;
$ perl -MT -c plugins/MyPlugin/lib/MyPlugin.pm&lt;/pre&gt;

などと、perlにMT専用オプションが追加されたような錯覚を覚える事が出来ます。</description>
    </item>
    
    <item>
      <title>aaa</title>
      <link>http://example.org/2011/000504.html</link>
      <pubDate>Tue, 17 May 2011 13:26:46 +0900</pubDate>
      
      <guid>http://example.org/2011/000504.html</guid>
      <description>
&lt;p&gt;The purpose of this HTML is to help determine what default settings are with CSS and to make sure that all possible HTML Elements are included in this HTML so as to not miss any possible Elements when designing a site.&lt;/p&gt;

&lt;hr&gt;
&lt;h1&gt;Heading 1&lt;/h1&gt;
&lt;h2&gt;Heading 2&lt;/h2&gt;
&lt;h3&gt;Heading 3&lt;/h3&gt;
&lt;h4&gt;Heading 4&lt;/h4&gt;
&lt;h5&gt;Heading 5&lt;/h5&gt;
&lt;h6&gt;Heading 6&lt;/h6&gt;
&lt;hr&gt;

&lt;h2&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, &lt;a href=&#34;#&#34; title=&#34;test link&#34;&gt;test link&lt;/a&gt; adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, &lt;em&gt;emphasis&lt;/em&gt; consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;


&lt;h2 id=&#34;list_types&#34;&gt;List Types&lt;/h2&gt;
&lt;h3&gt;Definition List&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Definition List Title&lt;/dt&gt;
&lt;dd&gt;This is a definition list division.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Forms&lt;/h2&gt;
&lt;fieldset&gt;
&lt;legend&gt;Legend&lt;/legend&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus.&lt;/p&gt;
&lt;form&gt;
&lt;h2&gt;Form Element&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. Donec faucibus. Nunc iaculis suscipit dui.&lt;/p&gt;
&lt;p&gt;&lt;label for=&#34;text_field&#34;&gt;Text Field:&lt;/label&gt;&lt;/p&gt;
&lt;input type=&#34;text&#34; id=&#34;text_field&#34;&gt;
&lt;p&gt;&lt;label for=&#34;text_area&#34;&gt;Text Area:&lt;/label&gt;&lt;br&gt;
		&lt;textarea id=&#34;text_area&#34;&gt;&lt;/textarea&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&#34;select_element&#34;&gt;Select Element:&lt;/label&gt;&lt;/p&gt;
&lt;select name=&#34;select_element&#34;&gt;
			&lt;optgroup label=&#34;Option Group 1&#34;&gt;
&lt;option value=&#34;1&#34;&gt;Option 1&lt;/option&gt;
&lt;option value=&#34;2&#34;&gt;Option 2&lt;/option&gt;
&lt;option value=&#34;3&#34;&gt;Option 3&lt;/option&gt;
			&lt;/optgroup&gt;
			&lt;optgroup label=&#34;Option Group 2&#34;&gt;
&lt;option value=&#34;1&#34;&gt;Option 1&lt;/option&gt;
&lt;option value=&#34;2&#34;&gt;Option 2&lt;/option&gt;
&lt;option value=&#34;3&#34;&gt;Option 3&lt;/option&gt;
			&lt;/optgroup&gt;
		&lt;/select&gt;

&lt;label for=&#34;radio_buttons&#34;&gt;Radio Buttons:&lt;/label&gt;
&lt;input type=&#34;radio&#34; class=&#34;radio&#34; name=&#34;radio_button&#34; value=&#34;radio_1&#34;&gt; Radio 1&lt;br&gt;
&lt;input type=&#34;radio&#34; class=&#34;radio&#34; name=&#34;radio_button&#34; value=&#34;radio_2&#34;&gt; Radio 2&lt;br&gt;
&lt;input type=&#34;radio&#34; class=&#34;radio&#34; name=&#34;radio_button&#34; value=&#34;radio_3&#34;&gt; Radio 3&lt;br&gt;

&lt;label for=&#34;checkboxes&#34;&gt;Checkboxes:&lt;/label&gt;
&lt;input type=&#34;checkbox&#34; class=&#34;checkbox&#34; name=&#34;checkboxes&#34; value=&#34;check_1&#34;&gt; Radio 1&lt;br&gt;
&lt;input type=&#34;checkbox&#34; class=&#34;checkbox&#34; name=&#34;checkboxes&#34; value=&#34;check_2&#34;&gt; Radio 2&lt;br&gt;
&lt;input type=&#34;checkbox&#34; class=&#34;checkbox&#34; name=&#34;checkboxes&#34; value=&#34;check_3&#34;&gt; Radio 3&lt;br&gt;

&lt;label for=&#34;password&#34;&gt;Password:&lt;/label&gt;
&lt;input type=&#34;password&#34; class=&#34;password&#34; name=&#34;password&#34;&gt;

&lt;label for=&#34;file&#34;&gt;File Input:&lt;/label&gt;
&lt;input type=&#34;file&#34; class=&#34;file&#34; name=&#34;file&#34;&gt;

&lt;div&gt;
&lt;input class=&#34;button&#34; type=&#34;reset&#34; value=&#34;Clear&#34;&gt;
&lt;input class=&#34;button&#34; type=&#34;submit&#34; value=&#34;Submit&#34;&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/fieldset&gt;

&lt;h2 id=&#34;tables&#34;&gt;Tables&lt;/h2&gt;
&lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;th&gt;Table Header 1&lt;/th&gt;
&lt;th&gt;Table Header 2&lt;/th&gt;
&lt;th&gt;Table Header 3&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2 id=&#34;misc&#34;&gt;Misc Stuff - abbr, acronym, pre, code, sub, sup, etc.&lt;/h2&gt;
&lt;p&gt;Lorem &lt;sup&gt;superscript&lt;/sup&gt; dolor &lt;sub&gt;subscript&lt;/sub&gt; amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. &lt;cite&gt;cite&lt;/cite&gt;. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. &lt;acronym title=&#34;National Basketball Association&#34;&gt;NBA&lt;/acronym&gt; Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  &lt;abbr title=&#34;Avenue&#34;&gt;AVE&lt;/abbr&gt;&lt;/p&gt;
&lt;pre&gt;

Lorem ipsum dolor sit amet,
 consectetuer adipiscing elit.
 Nullam dignissim convallis est.
 Quisque aliquam. Donec faucibus.
Nunc iaculis suscipit dui.
Nam sit amet sem.
Aliquam libero nisi, imperdiet at,
 tincidunt nec, gravida vehicula,
 nisl.
Praesent mattis, massa quis
luctus fermentum, turpis mi
volutpat justo, eu volutpat
enim diam eget metus.
Maecenas ornare tortor.
Donec sed tellus eget sapien
 fringilla nonummy.
&lt;acronym title=&#34;National Basketball Association&#34;&gt;NBA&lt;/acronym&gt;
Mauris a ante. Suspendisse
 quam sem, consequat at,
commodo vitae, feugiat in,
nunc. Morbi imperdiet augue
 quis tellus.
&lt;abbr title=&#34;Avenue&#34;&gt;AVE&lt;/abbr&gt;
&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;
	&#34;This stylesheet is going to help so freaking much.&#34; &lt;br&gt;-Blockquote
&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Code Mirror 2 を触ってみた。</title>
      <link>http://example.org/2011/000503.html</link>
      <pubDate>Wed, 27 Apr 2011 22:50:35 +0900</pubDate>
      
      <guid>http://example.org/2011/000503.html</guid>
      <description>
JavaScriptで動作するエディタCodeMirrorが、フルスクラッチで書き直された新しいバージョンCodeMirror2をリリースしていたので試してみました。

	&lt;li&gt;&lt;a href=&#34;http://codemirror.net/&#34;&gt;http://codemirror.net/&lt;/a&gt;&lt;/li&gt;

&lt;h3&gt;CodeMirrorって何？&lt;/h3&gt;

CodeMirrorは、JavaScriptで書かれたエディタです。通常のブラウザネイティブのTextAreaを置き換え、プログラムやテンプレートなどのコンピュータ言語の入力をシンタックスハイライトや補完機能等で補助します。MT5のテンプレート編集画面でも使われています。

&lt;h3&gt;CodeMirror2は何が新しいの？&lt;/h3&gt;

CodeMirror1は、iFrameのdesignModeを利用していました。designModeの詳細はここでは触れませんが、動作が各ブラウザの実装に強く依存しているため、JavaScriptからコントロールするのはかなり難しい代物でした。

CodeMirror2では、designModeを捨て、編集領域の描画を自前で行っています。これによって、以下のようなメリットが得られます。






</description>
    </item>
    
    <item>
      <title>githubのwikiエンジン「Gollum」を試してみた。</title>
      <link>http://example.org/2011/000502.html</link>
      <pubDate>Sun, 23 Jan 2011 01:53:48 +0900</pubDate>
      
      <guid>http://example.org/2011/000502.html</guid>
      <description>
Gollumは、githubのwikiエンジンのコア部分がオープンソースとして公開されたものです。軽量なWebServerとして動作するので、ローカルマシン上で起動してすぐに、ブラウザ経由でwikiページの閲覧や編集が可能になります。使用感をメモしておきます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;https://github.com/github/gollum&#34;&gt;https://github.com/github/gollum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;インストールと起動&lt;/h3&gt; 
Gollumはrubyで書かれたwikiエンジンです。gemからインストールする事が出来ます。
起動するには、任意のgitリポジトリへ移動(またはオプションでパスを指定)してgollumコマンドを実行します。

&lt;pre&gt; 
$ sudo gem install gollum
$ git init my_wiki
$ cd my_wiki
$ gollum
&lt;/pre&gt; 

これで、デフォルトでポート4567にウェブサーバが起動するので、ブラウザでlocalhost:4567にアクセスしてすぐにwikiページの作成が可能です。

&lt;h3&gt;特徴&lt;/h3&gt; 
&lt;h4&gt;バックエンドがgit&lt;/h4&gt;

gollumはストレージとして、一般的なDBエンジンではなくgitを利用しています。ブラウザからページを追加してみるとわかりますが、wikiページがファイルと一対一で対応するという直感的に分かりやすい構造になっています。ワーキングコピーでそれらのファイルを直接編集してgit commitすることでwikiに反映させることもできます。

githubのwikiもgitリポジトリとしてアクセス可能になっているので、githubからwikiをガバっとcloneしてローカルマシン上のGollumで確認しながら大量にページ追加作業をし、まとまったところでgithubにpushといった形でのgithubと連携することで、かなりの作業の効率化が可能かと思います。

オマケ的な利点として、画像などのファイルを直接git addする事でリポジトリに含めて管理、参照するといったことも挙げられます。(現時点ではGithubのwikiにはファイルアップロードのインターフェースがないので)

&lt;h4&gt;複数のマークアップフォーマットに対応&lt;/h4&gt;

必要なライブラリをインストールする事で、以下のマークアップフォーマットを利用できます。フォーマットはwikiページごとに設定できます。

&lt;ul&gt;&lt;li&gt;ASCIIDoc&lt;/li&gt;
&lt;li&gt;Creole&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;Org&lt;/li&gt;
&lt;li&gt;Pod&lt;/li&gt;
&lt;li&gt;RDoc&lt;/li&gt;
&lt;li&gt;ReStructuredText&lt;/li&gt;
&lt;li&gt;Textile&lt;/li&gt;
&lt;li&gt;MediaWiki (gemから落とせる最新版(1.1.1)には含まれていない模様)&lt;/li&gt;
&lt;/ul&gt;

また、github 独自拡張のwiki内リンク記法が利用できます。

&lt;h3&gt;はまったところ&lt;/h3&gt;

ワーキングコピーではなくgitリポジトリそのものを見ているので、ファイルベースで作業した場合、git commitするまで反映されない、ということに気づくまで小一時間はまった。</description>
    </item>
    
    <item>
      <title>Github の MT のリポジトリブラウザに Fogbugz へのリンクを追加する Chrome extension 書いた。</title>
      <link>http://example.org/2011/000501.html</link>
      <pubDate>Wed, 12 Jan 2011 00:00:12 +0900</pubDate>
      
      <guid>http://example.org/2011/000501.html</guid>
      <description>
Happy new year! Happy Github!

ということで、Movable Type のリポジトリがgithubに移行してとても楽しみなのですが、コミットログにFogbugzのケース番号書いてあってもWebから見たときにリンクにならないので不便です。のでとりあえずChrome extensionでなんとかします。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/GithubType.crx&#34;&gt;GithubType.crx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

https://github.com/movabletype/ 以下で、コミットログからfogbugzのcase番号らしきものを拾って、近くにリンクを追加します。だけです。もっと良い方法をご存知の方教えてください。
</description>
    </item>
    
    <item>
      <title>Perlで出退勤管理などする。</title>
      <link>http://example.org/2011/000499.html</link>
      <pubDate>Sat, 08 Jan 2011 23:42:45 +0900</pubDate>
      
      <guid>http://example.org/2011/000499.html</guid>
      <description>Solution 1: MBAの接続先のSSIDを監視して会社への到着を知る

そもそもMBAと常に行動をともにしているのだから、出勤するという事はMBAが会社に到着する事と同義。MBAが出勤して最初にする事と言えば、社内のネットワークに接続する事。
ならば、MBAが常に接続先のネットワークを監視して、会社のネットワークにその日最初に接続された時間と最後に接続した時間をログに残しておけば、かなり正確に出退勤の時刻を把握できるでしょう。どのネットワークに接続していたかは、無線LANのSSIDを基準に判定します。

Mac OSXでは以下のコマンドで現在の無線ネットワークのステータスを取得できます。

&lt;pre&gt;/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I&lt;/pre&gt;

参考: &lt;a href=&#34;http://unknownplace.org/memo/2009/12/03/1/&#34;&gt;無線APによって自動でhostsを変える方法 - unknownplace.org&lt;/a&gt;

なんかズラズラと出てくるので、パースしてSSIDを取ってきます。直近のステータスをファイルに吐いておいて、直近と実行時でSSIDに変化があったら、別途ログに吐くようなスクリプトにしたのがこちらです。cronでぶん回しておけば、何時から何時までどこのネットワークにいたのかを記録できます。

ついでに、特定のSSIDに接続された時点でやりたい事も書けます。ちょっと工夫すれば自動ライフロガーにもなります。自分はこれで、Foursquare でオフィスにチェックインをするようにしました。これで絶対にチェックイン忘れする事がなくなりました。Mayerへ一直線です。必死だな。

Solution 2: iPhoneに頼る

僕のMBAへの愛もいつしか薄れ、同伴出勤をしなくなる日が来るかもしれません。それなりに重いし。そんな時にも、iPhoneだけは傍らにいるはずです。iPhoneにもお願いして、GPSで見守ってくれたらどんなに安心できる事でしょうか。

しかしiPhoneのネイティブアプリを制作するのは骨が折れそうです。以前参加していた Developer Program も更新しなかったし。&lt;a href=&#34;#footnote-1&#34;&gt;*1&lt;/a&gt;

そこで今回は、MobileMe をつかってWeb経由で現在地を取得することにします。CPANにWebService::MobileMeというのがあったので、これを使います。スクリプトにユーザー名とパスワードを書くのがイヤンな感じですが、まあ良しとします。で、latitudeとlongitudeがとれるので、あらかじめ調べておいたオフィスの現在地と一緒にGeo::Distanceに突っ込んでオフィスからの距離に変換。150mくらいの誤差が出るようなので、それ以内の距離だったら多分会社にいるでしょう。

MobileMeのAPIは

&lt;div id=&#34;footnote-1&#34;&gt;
Developer Programは登録しなくてもアプリのインストールは出来るらしい。この記事を半分以上書いた後に知った。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/kumattau/20110110/1294684307&#34;&gt;Developer 登録なしで iPhone に自作アプリをインストールする - くまったうの日記&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>MTDDC HOKKAIDO行ってきた。</title>
      <link>http://example.org/2010/000497.html</link>
      <pubDate>Sat, 25 Dec 2010 14:27:10 +0900</pubDate>
      
      <guid>http://example.org/2010/000497.html</guid>
      <description>&lt;h3&gt;[DAY 1] MTDDC HOKKAIDO&lt;/h3&gt;

朝５時半に起きて羽田へ。毎朝のように寝坊した旨をTwitterにつぶやいている身としては、そもそも飛行機に間に合うかが一番の難関でしたが、なんとかよたよたと家を出ました。北海道は大雪だったがなんとか無事飛行機も着陸し、会場へ。MTDDCスタート!

やはり自分的には、技術よりのトークの方が興味ありました。残念ながら受付にいて壁越しにしか聞けませんでしたが、ka2hiroさんのテンプレートタグの話と、pirolix氏の分散処理の話が面白かったです。

自分のLTは、開発中のリスティングフレームワークについて、ざっとした説明とライブコーディングをやりました。資料おいておきます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtddc_sapporo.html&#34;&gt;http://blog.aklaswad.com/mtddc_sapporo.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

前日まで「時間が余っているので15分くらいやって」と言われていたのが、直前になって「やっぱ時間無いので7分以内で」となってしまい、だいぶ端折ってしまいました。リスティングフレームワーク上でのリスト作成の雰囲気が少しでも伝わったらと思います。

&lt;h3&gt;[DAY 2] Hack-a-thon&lt;/h3&gt;

かつて無いほど大勢の参加者があり、楽しかったです。

自分はドラッグアンドドロップで複数ファイルをアップロードするインターフェイスの試作をやってました。マルチブラウザ対応等、いろいろ足りない部分が多くすぐには公開できませんが、ちょこちょこと手を入れていこうと思います。

Hokkaido.pmの方が多く参加されていた事もあり、PSGI絡みの話が多かったのが興味深かったです。
触発されて、以前書いたパブリッシュ側のPSGIアプリのデモもやろうと思ったのですが、Plackのインストールがコケてしまい間に合いませんでした。残念。一応コードさらしておきます。

&lt;script src=&#34;https://gist.github.com/576237.js?file=gistfile1.pl&#34;&gt;&lt;/script&gt;

&lt;h3&gt;[DAY 3] Freetime&lt;/h3&gt;

三日目は夕方のフライトの時間までフリータイム。小樽まで足を伸ばして、寿司と、前日の打ち上げでとてもおいしかった小樽ビールの本家のビアホールと、ウニいくら丼と、食い倒れてました。とてもおいしかったです。

おわり。</description>
    </item>
    
    <item>
      <title>registryメソッドの説明的な何か。</title>
      <link>http://example.org/2010/000487.html</link>
      <pubDate>Mon, 08 Nov 2010 01:06:01 +0900</pubDate>
      
      <guid>http://example.org/2010/000487.html</guid>
      <description>&lt;script src=&#34;https://gist.github.com/666207.js&#34;&gt; &lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Re: Movable Typeのプラグインファイル構成について</title>
      <link>http://example.org/2010/000486.html</link>
      <pubDate>Sat, 06 Nov 2010 16:41:36 +0900</pubDate>
      
      <guid>http://example.org/2010/000486.html</guid>
      <description>
&lt;ins datetime=&#34;2010-11-06T17:06:48+09:00&#34;&gt;少し説明を追加、アップデートしました。&lt;/ins&gt;

小粋空間さんで、プラグインのファイル構成について解説されている記事が公開されています。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.koikikukan.com/archives/2010/11/06-020202.php&#34;&gt;Movable Typeのプラグインファイル構成について: 小粋空間&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

その中で、自分の過去の発表で YAML ファイルでの perl コードの実行について話した内容に触れられていたのですが、それを読んで、自分の発言が誤解されるような言い方になっていたようなので、整理してみます。

要点を順に書くと、こんな感じになります。

&lt;ol&gt;
	&lt;li&gt;Movable Type の registry では、サブルーチンが期待されているなら、文字列を自動的に perl コードとして展開する場合がある&lt;/li&gt;
	&lt;li&gt;plugin の定義ファイルである config.yaml ファイルではこの機能を最大限利用することで直接 perl コードを埋め込める(ようになっている設定値が多数用意されている)&lt;/li&gt;
	&lt;li&gt;ただし、テーマの定義ファイルである theme.yaml ファイルを扱う際には、セキュリティ向上を目的に、基本的にこの機能を使わないよう開発している&lt;/li&gt;
&lt;/ol&gt;

&lt;ins datetime=&#34;2010-11-06T17:06:20+09:00&#34;&gt;ですから、plugin のスタートポイントがfoo.plである場合と、config.yamlである場合に、セキュリティ的な安全性の差は(現在の所)ありません。小粋空間さんのところで触れられた安全性の話は、plugin と theme の違いの話だとご理解ください。&lt;/ins&gt;

2) について補足しておくと、registry 内でサブルーチンが期待される場合(例えばテンプレートタグの登録での、実行ルーチンの指定部分)、「sub {」で始まる文字列を直接指定する事で、perl として実行させる事が出来ます。
以下は、実際にプラグインとして動作するconfig.yamlファイルの例です。

&lt;pre&gt;
tags:
    function:
        Foo1: sub { return &#34;Hello foo1&#34; }
&lt;/pre&gt;

</description>
    </item>
    
    <item>
      <title>ActionStreams &#43; AnyEvent</title>
      <link>http://example.org/2010/000484.html</link>
      <pubDate>Tue, 19 Oct 2010 02:23:28 +0900</pubDate>
      
      <guid>http://example.org/2010/000484.html</guid>
      <description>
ActionStreamsで更新チェックする時に、AnyEvent::HTTPを使って並列ダウンロードするようにしてみました。&lt;a href=&#34;http://github.com/sixapart/mt-plugin-ActionStreams&#34;&gt;sixapart / mt-plugin-ActionStreams&lt;/a&gt;からforkして、anyeventブランチを切ってゴニョゴニョしてます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://github.com/aklaswad/mt-plugin-ActionStreams/tree/anyevent&#34;&gt;http://github.com/aklaswad/mt-plugin-ActionStreams/tree/anyevent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

AnyEventが見つかれば自動的に利用するようにしてありますので、特別な設定は不要です。

10程度のストリームの処理で、ベンチマーク(ストップウォッチで目視)では約三倍ほど速くなってます。ストリームの数が増えれば、もっと差が出るかもしれません。</description>
    </item>
    
    <item>
      <title>YAPC::Asia 2010</title>
      <link>http://example.org/2010/000483.html</link>
      <pubDate>Sun, 17 Oct 2010 00:26:56 +0900</pubDate>
      
      <guid>http://example.org/2010/000483.html</guid>
      <description>
行ってきました。YAPC、というかPerlのイベント自体に初参加だったのですが、とてもエキサイティングな二日間を過ごせました。ふっとMTを持ちあげてくれた&lt;a href=&#34;http://twitter.com/yusukebe&#34;&gt;yusukebe&lt;/a&gt;さんのトークには特に感謝したいです。色々吹っ切れた気がします。

</description>
    </item>
    
    <item>
      <title>テンプレートの依存関係を表示するプラグインを作ってみました。</title>
      <link>http://example.org/2010/000477.html</link>
      <pubDate>Fri, 28 May 2010 13:32:26 +0900</pubDate>
      
      <guid>http://example.org/2010/000477.html</guid>
      <description>
Include Map という名前のプラグインです。

&lt;h3&gt;なにが起こるの？&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;テンプレートの編集画面に、&lt;strong&gt;そのテンプレートをインクルードしている&lt;/strong&gt;テンプレートの一覧を表示します。&lt;/li&gt;
	&lt;li&gt;以下のような依存関係の一覧画面を追加します。&lt;/li&gt;
&lt;/ul&gt;

&lt;a href=&#34;http://blog.aklaswad.com/images/include_map.png&#34;&gt;&lt;img alt=&#34;include_map.png&#34; src=&#34;http://blog.aklaswad.com/assets_c/2010/05/include_map-thumb-500x175-112.png&#34; width=&#34;500&#34; height=&#34;175&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/a&gt;

&lt;h3&gt;どこでダウンロードするの？&lt;/h3&gt;

ダウンロードは&lt;a href=&#34;http://github.com/aklaswad/mt-plugin-include-map&#34;&gt;github&lt;/a&gt;からお願いします。画面右上、上から3段目の「Download Source」ボタンから、最新のパッケージをダウンロードできます。

&lt;h3&gt;使い方は？&lt;/h3&gt;

IncludeMapプラグインは、テンプレートの編集を監視し、内部的に依存関係の記録を行います。ですが、現在のところプラグインのインストール時にはこの記録は作成されません。
運用中のMovable Typeにこのプラグインを追加して利用する場合、事前にブログ/ウェブサイトの一覧画面からPlugin Action &gt; Rebuild Include Mapを実行してください。

インストールに成功すると、メニューの「デザイン &gt; Include Map」から、各ブログごとのテンプレートの依存関係表を開くことが出来ます。この画面はIEでは動作しないかもしれません。

&lt;h3&gt;ご利用は計画的に&lt;/h3&gt;

&lt;strong&gt;このプラグインはMTのデータベースに変更を加えます。また、開発途中のため、今後大きな変更が加わる可能性もあります。実運用中の環境へのインストールはお勧めしません。テスト用途でのご利用をご検討ください。&lt;/strong&gt;</description>
    </item>
    
    <item>
      <title>MTからOAuthを使うプラグイン作ってます。</title>
      <link>http://example.org/2010/000476.html</link>
      <pubDate>Fri, 21 May 2010 00:09:53 +0900</pubDate>
      
      <guid>http://example.org/2010/000476.html</guid>
      <description>
外部リソースへのアクセスを行うようなプラグインを作成するときに、OAuth認証を利用する必要がある場合があります。ぶっちゃけて言うと、７月からTwitterにアクセスするために必要になります。

OAuthによるアクセスについては、&lt;a href=&#34;http://www.macminiosx.com/2010/03/movable_typeoauthtwitter_postt.html&#34;&gt;PostTwiOAuth&lt;/a&gt;などで実現されていますが、プラグインごとに認証部分を再実装するのは面倒ですし、OAuthの性質上、プラグインのインストール後にそれなりの設定作業が必要になるため、エンドユーザー視点でも設定項目をプラグイン間で共有して欲しいのではないかと思います。

そこで、OAuthサービスプロバイダに関する設定のプラグイン間での共有や、Handshakeの実行、および取得したトークンの管理を行うプラグインを開発しています。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://github.com/aklaswad/mt-plugin-oauth-framework&#34;&gt;http://github.com/aklaswad/mt-plugin-oauth-framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

ドキュメントは、以下で準備を進めています。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://wiki.github.com/aklaswad/mt-plugin-oauth-framework/&#34;&gt;http://wiki.github.com/aklaswad/mt-plugin-oauth-framework/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

プラグイン本体については、基本機能は実装済みですが、スタイリングやデザインの一部などは手つかずです。メインのAPI等の部分も、まだまだ改良の余地があるかと思います。今月末をメドに形にしたいと考えていますので、興味のあるプラグイン開発者の方は触ってみてください。フィードバック、パッチ、おしかり、ウェルカムです。このエントリのコメント/トラックバックや、&lt;a href=&#34;http://github.com/aklaswad/mt-plugin-oauth-framework/issues&#34;&gt;githubのITS&lt;/a&gt;まで連絡いただければ幸いです。</description>
    </item>
    
    <item>
      <title>アーカイブ一覧をAjaxでツリー展開するカスタマイズ</title>
      <link>http://example.org/2010/000475.html</link>
      <pubDate>Wed, 05 May 2010 01:17:43 +0900</pubDate>
      
      <guid>http://example.org/2010/000475.html</guid>
      <description>基本的な考え方としては、MT側であらかじめ、ツリー展開する中身の部分だけを出力するためのアーカイブを作成し、静的なHTMLファイル群として出力しておき、リストの項目のクリック時に出力されたファイルを動的にロードして表示する、という仕組みです。
以下のような手順で作業を行いました。

&lt;h3&gt;ボックスの内側を表示する軽量なテンプレートを作る&lt;/h3&gt;
簡素なブログ記事一覧をHTMLとして表示するようなテンプレートを、ブログ記事リストのアーカイブテンプレートとして作成します。この部分が、ツリー展開時に中身として表示されます。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:entries&amp;gt;
    &amp;lt;mt:if __first__&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;/mt:if&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;lt;mt:entryPermalink&amp;gt;&amp;quot;&amp;gt;&amp;lt;mt:entryTitle&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;p&amp;gt;&amp;lt;mt:entryBody remove_html=&amp;quot;1&amp;quot; trim_to=&amp;quot;40&amp;quot;&amp;gt;...&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;mt:if __last__&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/mt:if&amp;gt;
&amp;lt;/mt:entries&amp;gt;&lt;/pre&gt;
これだけを、テンプレートの内容として保存します。

&lt;h3&gt;アーカイブマッピングを設定する&lt;/h3&gt;

作成したアーカイブテンプレートに、以下のようにマッピングを作成します。「skelton」の部分は何でも構いません。
&lt;pre class=&#34;code&#34;&gt;%y/%m/skelton.html&lt;/pre&gt;
これで、ツリー表示の内側部分を、月ごとに独立したHTMLファイルとして出力できます。マッピングの保存後、再構築しておきましょう。

&lt;h3&gt;アーカイブページでAjaxでの読み込みを行う&lt;/h3&gt;

まず、jQueryをロードするためのコードを、Archive Indexテンプレートのhead部分に追加します。
&lt;pre class=&#34;code&#34;&gt;&amp;lt;script src=&amp;quot;&amp;lt;mt:StaticWebPath&amp;gt;jquery/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;
今回は手抜きをしてMT5に同梱されているjQueryをロードしましたが、テーマに同梱する場合等を考えて、jQueryライブラリはブログディレクトリにアップロードし、それを読み込むようにした方がベターだと思います。

次に、リストの項目表示部分に「load-skelton」というクラスの指定を追加します。
&lt;pre class=&#34;code&#34;&gt;&amp;lt;li class=&amp;quot;load-skelton&amp;quot; url=&amp;quot;&amp;lt;$mt:ArchiveLink$&amp;gt;skelton.html&amp;quot;&amp;gt;&amp;lt;$mt:ArchiveTitle$&amp;gt;&amp;lt;/li&amp;gt;
&lt;/pre&gt;

そして、load-skeltonクラスの要素をclickした時に、先ほど作成した展開用テンプレートを読み込む動作を指定するためのjQueryのイベントを設定します。今回は、以下のようなコードを&amp;lt;/body&amp;gt;タグの直前に追加しました。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(&#39;.load-skelton&#39;).click(function(){
    var toggle = $(this).attr(&#39;opened&#39;);
    if ( toggle &amp;gt; 0 ) {
        $(this).find(&#39;.preview-box&#39;).remove();
        $(this).removeAttr(&#39;opened&#39;);
    }
    else {
        var url = $(this).attr(&#39;url&#39;);
        $(this).append($(&#39;&amp;lt;div&amp;gt;&#39;).addClass(&#39;preview-box&#39;).load(url));
        $(this).attr(&#39;opened&#39;, 1);
    }
});
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;h3&gt;まとめ&lt;/h3&gt;
カスタマイズは以上です。
肝は、MTのアーカイブを利用して事前に短い静的HTMLファイルを出力しておく事によって、ツリーの展開を動的に、かつ軽快に動作させることが簡単に実現できるという点だと思います。いやあ、MTって本当に便利ですね。enjoy!</description>
    </item>
    
    <item>
      <title>MT5にアップグレードした</title>
      <link>http://example.org/2010/000472.html</link>
      <pubDate>Mon, 03 May 2010 01:08:26 +0900</pubDate>
      
      <guid>http://example.org/2010/000472.html</guid>
      <description>
MT4 + SQLite &gt;&gt; MT5 + SQLite &gt;&gt; MT5 + MySQL と長い旅路を経てようやく(今更)MT5にアップグレードできました。
色々無茶な拡張を重ねていたので、convert-db実行時に一部データが消失したり等、いくつかのトラブルが発生しましたが、懸念していた文字化けなど、MT本体についてMT4からMT5で大きな変更があった点については、問題なく作業が進みました。一般的な環境での作業なら、ほぼノートラブルでアップグレード出来るのではないかと思います。

幾つかプラグインをドロップしたので、テンプレートもそのままでは再構築できず。えいっとPicoベースに変更しました。すっきりしていて好みのデザインです。
久々にテンプレートのカスタマイズをして、普段使わない脳みその部位が脳肉痛です。Archivesのページでは、前から考えていたAjaxを使ったツリー展開を試してみました。なかなか軽快に動作しているので満足しています。このカスタマイズは後で手順をまとめておこうと思います。乞うご期待!

という事で、ゴールデンウィークのまっただ中、丸一日MTと戯れてマジ楽しい一日でした。</description>
    </item>
    
    <item>
      <title>TagOverride</title>
      <link>http://example.org/2010/000471.html</link>
      <pubDate>Sun, 02 May 2010 23:20:46 +0900</pubDate>
      
      <guid>http://example.org/2010/000471.html</guid>
      <description>
詳細なドキュメント建設予定地</description>
    </item>
    
    <item>
      <title>MTML-Twitter-API</title>
      <link>http://example.org/2010/000470.html</link>
      <pubDate>Sun, 02 May 2010 23:20:29 +0900</pubDate>
      
      <guid>http://example.org/2010/000470.html</guid>
      <description>
詳細なドキュメント建設予定地</description>
    </item>
    
    <item>
      <title>SubPop</title>
      <link>http://example.org/2010/000469.html</link>
      <pubDate>Sun, 02 May 2010 23:20:14 +0900</pubDate>
      
      <guid>http://example.org/2010/000469.html</guid>
      <description>
詳細なドキュメント建設予定地</description>
    </item>
    
    <item>
      <title>Softwares</title>
      <link>http://example.org/2010/000466.html</link>
      <pubDate>Sun, 02 May 2010 13:44:15 +0900</pubDate>
      
      <guid>http://example.org/2010/000466.html</guid>
      <description>
&lt;h2&gt;Movable Type Plugins&lt;/h2&gt;

&lt;h3&gt;開発継続中のプラグイン&lt;/h3&gt;

&lt;mt:pages folder=&#34;mtplugins&#34; tag=&#34;NOT @deprecated AND NOT @doc&#34;&gt;
    &lt;mt:if __first__&gt;&lt;ul&gt;&lt;/mt:if&gt;
    &lt;li&gt;&lt;a href=&#34;&lt;mt:pagePermalink&gt;&#34;&gt;&lt;mt:pageTitle&gt;&lt;/a&gt; &lt;mt:if tag=&#34;pageKeywords&#34;&gt;&lt;a href=&#34;&lt;mt:pageKeywords&gt;&#34;&gt;&lt;img src=&#34;&lt;mt:staticWebPath&gt;plugins/GitHubActionStreams/github.png&#34; /&gt;&lt;/a&gt;&lt;/mt:if&gt;&lt;/li&gt;
    &lt;mt:if __last__&gt;&lt;/ul&gt;&lt;/mt:if&gt;
&lt;/mt:pages&gt;


&lt;h3&gt;開発終了/メンテナンス終了のプラグイン&lt;/h3&gt;

&lt;mt:pages folder=&#34;mtplugins&#34; tag=&#34;@deprecated AND NOT @doc&#34;&gt;
    &lt;mt:if __first__&gt;&lt;ul&gt;&lt;/mt:if&gt;
    &lt;li&gt;&lt;a href=&#34;&lt;mt:pagePermalink&gt;&#34;&gt;&lt;mt:pageTitle&gt;&lt;/a&gt; &lt;mt:if tag=&#34;pageKeywords&#34;&gt;&lt;a href=&#34;&lt;mt:pageKeywords&gt;&#34;&gt;external link&lt;/a&gt;&lt;/mt:if&gt;&lt;/li&gt;
    &lt;mt:if __last__&gt;&lt;/ul&gt;&lt;/mt:if&gt;
&lt;/mt:pages&gt;</description>
    </item>
    
    <item>
      <title>MTからImage::Imlib2を使ってみた</title>
      <link>http://example.org/2010/000464.html</link>
      <pubDate>Thu, 08 Apr 2010 16:16:44 +0900</pubDate>
      
      <guid>http://example.org/2010/000464.html</guid>
      <description>

&lt;pre class=&#34;code&#34;&gt;
        GD: 6.23158 wallclock secs ( 6.06 usr  0.17 sys +  0.00 cusr  0.00 csys =  6.23 CPU) @  2.41/s (n=15)
ImageMagick: 6.36544 wallclock secs ( 5.73 usr  0.63 sys +  0.00 cusr  0.00 csys =  6.36 CPU) @  2.36/s (n=15)
    Imager: 5.91636 wallclock secs ( 5.76 usr  0.15 sys +  0.00 cusr  0.00 csys =  5.91 CPU) @  2.54/s (n=15)
    Imlib2: 1.3138 wallclock secs ( 1.18 usr  0.13 sys +  0.00 cusr  0.00 csys =  1.31 CPU) @ 11.45/s (n=15)
    NetPBM: 6.28144 wallclock secs ( 0.00 usr  0.23 sys +  1.01 cusr  4.74 csys =  5.98 CPU) @ 65.22/s (n=15)
              Rate ImageMagick          GD      Imager      Imlib2      NetPBM
ImageMagick 2.36/s          --         -2%         -7%        -79%        -96%
GD          2.41/s          2%          --         -5%        -79%        -96%
Imager      2.54/s          8%          5%          --        -78%        -96%
Imlib2      11.5/s        385%        376%        351%          --        -82%
NetPBM      65.2/s       2665%       2609%       2470%        470%          --
&lt;/pre&gt;
&lt;pre&gt;
        GD: 18.5416 wallclock secs (18.14 usr  0.40 sys +  0.00 cusr  0.00 csys = 18.54 CPU) @  0.81/s (n=15)
ImageMagick: 17.8535 wallclock secs (17.01 usr  0.84 sys +  0.00 cusr  0.00 csys = 17.85 CPU) @  0.84/s (n=15)
    Imager: 18.6331 wallclock secs (18.40 usr  0.23 sys +  0.00 cusr  0.00 csys = 18.63 CPU) @  0.81/s (n=15)
    Imlib2: 4.78948 wallclock secs ( 4.66 usr  0.12 sys +  0.00 cusr  0.00 csys =  4.78 CPU) @  3.14/s (n=15)
            s/iter      Imager          GD ImageMagick      Imlib2
Imager        1.24          --         -0%         -4%        -74%
GD            1.24          0%          --         -4%        -74%
ImageMagick   1.19          4%          4%          --        -73%
Imlib2       0.319        290%        288%        273%          --
&lt;/pre&gt;




http://hibinokoto.jp/archives/about_my_works/about_image_magick_imager_and_image_imlib2.php
http://yusukebe.com/tech/archives/20070526/011710.html
http://d.hatena.ne.jp/clouder/20071129/1196313459</description>
    </item>
    
    <item>
      <title>77&#43;9</title>
      <link>http://example.org/2010/000463.html</link>
      <pubDate>Thu, 18 Feb 2010 02:24:19 +0900</pubDate>
      
      <guid>http://example.org/2010/000463.html</guid>
      <description>
先日、とあるバグを退治しようとしていて遭遇したのがこの「77+9」という数式。
サーバから値を取得する部分が想定した動作をしないので生データを追跡したところ、やたらと「77+9」を呪文のように繰り返す文字列が浮かび上がってきた。

結論を言えば、この「77+9」は、utf-8の上限値である「0xEF0xBF0xBD」というバイト列をBase64で符号化した結果だった。
この時点では仮説に過ぎないが、utf-8特有の
このことから、Bese64でエンコードする前の段階で、文字列のutf-8への符号化の試みに失敗し、緊急避難的に上限値をという形跡が見て取れる。
正直自分はその点に気づかずに、結構な時間を無駄にしてしまったが、一度この現象を目にした事のあるエンジニアならば、問題点はBase64以前に

Encodeモジュールと格闘しているものは、麻雀牌の隙間でアルファベットが泡を吹いている映像を見れば、それはutf8-binaryが不慮の事故によって望まぬアップグレードをされた残骸だと知っている。

もうすこし考えを進めれば、結果文字列からなんか変なの出て来ちゃったという時に、その変なのを貼付ければ「ああ、これShift_JISを</description>
    </item>
    
    <item>
      <title>MTMLからTwitterにアクセスするプラグイン書いた。</title>
      <link>http://example.org/2010/000462.html</link>
      <pubDate>Tue, 05 Jan 2010 21:49:19 +0900</pubDate>
      
      <guid>http://example.org/2010/000462.html</guid>
      <description>MTMLTwitterAPIプラグインをインストールすると、以下の二つのブロックタグが利用可能になります。

&lt;ul&gt;
	&lt;li&gt;mt:TwitterMentions&lt;/li&gt;
	&lt;li&gt;mt:TwitterStatusUpdate&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;使用上の注意&lt;/h4&gt;

これらのタグが動作するたび(=これらのタグが書かれたテンプレートが再構築されるたび)に、ネット経由でのAPIアクセスが発生します。そのため、通常の更新を行うサイトのテンプレートで利用する目的には向きません。最悪、致命的なパフォーマンス低下を起こし更新不能となる場合も考えられますので、十分ご理解いただいた上でご利用ください。

&lt;h4&gt;mt:TwitterMentions&lt;/h4&gt;

特定ユーザーに対しての@付き発言を取得し、取得した発言の分だけ繰り返しを行うブロックタグです。
ブロック内では、各発言についての情報が以下の変数に設定されます。

&lt;ul&gt;
	&lt;li&gt;id&lt;/li&gt;
	&lt;li&gt;text&lt;/li&gt;
	&lt;li&gt;name&lt;/li&gt;
	&lt;li&gt;screen_name&lt;/li&gt;
&lt;/ul&gt;

以下のモディファイアを指定できます。

&lt;dl&gt;
&lt;dt&gt;endpoint&lt;/dt&gt;
&lt;dd&gt;エンドポイントのURLを指定します。通常は指定する必要はありません。
twitterのAPI仕様が変更になった場合や、twitter互換の別サービスを利用する場合に指定すると良いと思います。&lt;/dd&gt;
&lt;dt&gt;username&lt;/dt&gt;
&lt;dd&gt;twitterAPIを利用するユーザーのログインネームを指定します。必須です。&lt;/dd&gt;
&lt;dt&gt;password&lt;/dt&gt;
&lt;dd&gt;twitterAPIを利用するユーザーのパスワードを指定します。必須です。&lt;/dd&gt;
&lt;dt&gt;timeout&lt;/dt&gt;
&lt;dd&gt;リクエストのタイムアウトまでの時間を設定します。デフォルトでは10秒になっています。&lt;/dd&gt;
&lt;dt&gt;fatal_error&lt;/dt&gt;
&lt;dd&gt;何らかの理由でリクエストが失敗した場合に再構築を終了したい場合には1を指定してください。デフォルトでは、リクエストに失敗しても致命的エラーとはならず、再構築が続行されます(エラーの記録はMTのログから確認できます。)&lt;/dd&gt;
&lt;dt&gt;new_mentions_only&lt;/dt&gt;
&lt;dd&gt;twitterAPIから取得したデータには、最近の(２０?)件のデータが含まれています。デフォルトでは、一度でも取得した事のあるデータに関しては処理をスキップする仕様になっています。もし何らかの理由で常に(20?)件のデータの処理を行いたい場合、&lt;em&gt;new_mentions_only=0&lt;/em&gt;を指定してください。&lt;/dd&gt;
&lt;dt&gt;namespace&lt;/dt&gt;
&lt;dd&gt;同一MT上で複数のTwitterMentionsタグを運用しており、上記所得済みデータの判定を使い分けたい場合に指定します。&lt;/dd&gt;
&lt;/dl&gt;


&lt;h4&gt;mt:TwitterStatusUpdate&lt;/h4&gt;

Twitterに対して発言を行うブロックタグです。mt:TwitterStatusUpdateタグで囲まれた内容の再構築結果をTwitterにポストします。

&lt;dl&gt;
&lt;dt&gt;endpoint&lt;/dt&gt;
&lt;dd&gt;エンドポイントのURLを指定します。通常は指定する必要はありません。
twitterのAPI仕様が変更になった場合や、twitter互換の別サービスを利用する場合に指定すると良いと思います。&lt;/dd&gt;
&lt;dt&gt;username&lt;/dt&gt;
&lt;dd&gt;twitterAPIを利用するユーザーのログインネームを指定します。必須です。&lt;/dd&gt;
&lt;dt&gt;password&lt;/dt&gt;
&lt;dd&gt;twitterAPIを利用するユーザーのパスワードを指定します。必須です。&lt;/dd&gt;
&lt;dt&gt;timeout&lt;/dt&gt;
&lt;dd&gt;リクエストのタイムアウトまでの時間を設定します。デフォルトでは10秒になっています。&lt;/dd&gt;
&lt;dt&gt;fatal_error&lt;/dt&gt;
&lt;dd&gt;何らかの理由でリクエストが失敗した場合に再構築を終了したい場合には1を指定してください。デフォルトでは、リクエストに失敗しても致命的エラーとはならず、再構築が続行されます(エラーの記録はMTのログから確認できます。)&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4&gt;使い方&lt;/h4&gt;

ブログのメインページにTwitterStatusUpdateを設置して再構築頻度を観察するという使い方もあるかと思いますが、やっぱりボットを作るのが一番の醍醐味かと思います。

以下は、実際に@mturanaiを運用しているテンプレートです。

&lt;script src=&#34;http://gist.github.com/269265.js&#34;&gt;&lt;/script&gt;

どっさりと配列を用意した上で、ランダムに配列の中身を取り出して返信しています。
(MTのデフォルトでは乱数を所得するタグはありませんが、twitterの更新速度が充分速いので、twitterの発言idを乱数として利用しています。)

実際にボットとして運用するために、ローカルマシン上で動作しているMTにテンプレートを作成しておき、cronで定期的に再構築を行っています。

&lt;pre class=&#34;code&#34;&gt;*/2 * * * * cd /Users/aklaswad/Sites/cgi-bin/greyhound; ./tools/mt-tmpl-test -b=2 -t=186
&lt;/pre&gt;

enjoy!</description>
    </item>
    
    <item>
      <title>MT関係のイベントに参加しました。</title>
      <link>http://example.org/2009/000461.html</link>
      <pubDate>Tue, 15 Dec 2009 11:49:06 +0900</pubDate>
      
      <guid>http://example.org/2009/000461.html</guid>
      <description>
MT5がリリースされ、MT関連のイベントも賑やかになってきました。
ここ何週間かの間に、いくつかのMT関係のイベントに参加しました。ずいぶん遅くなってしまったものもありますが、まとめてレポート書きたいと思います。

&lt;h3&gt;第1回MT5勉強会&lt;/h3&gt;
&lt;a href=&#34;http://www.dakiny.com/&#34;&gt;Dakinyさん&lt;/a&gt;主催の、有志による勉強会です。
MT5.0リリースの直後に行われたところに、無理矢理参加させていただきました。急な参加をお願いしてしまい、運営の皆様には大変ご迷惑をおかけしたと思います。有り難うございました。

ワークショップでは、テーマ作成のテーブルに参加させていただきました。
自分の作業を進めつつ、時にはテーマ機能のいろんな側面に関してディスカッションになったり、現場で想定される運用について貴重な意見をいただいたり、すごく勉強になりました。
なお、いくつかの点で動作がおかしいという指摘を頂き、原因が分からず後半はかなり挙動不審になってた事をお詫びいたします。バグ怖いねん。

その後の懇親会では、すごく楽しい時間を過ごさせていただきました。

&lt;h3&gt;Movable Type エンジニアの夕べ&lt;/h3&gt;

続いて、&lt;a href=&#34;http://www.skyarc.co.jp/&#34;&gt;スカイアーク&lt;/a&gt;さんの主催の、MT関係のエンジニアで集まってのライトニングトーク大会+MTカルトQというイベントに参加しました。

ここでは、僕もLTに参加させていただき、個人的に作成しているネタ系(?)プラグインのTagOverrideを紹介させていただきました。

&lt;div style=&#34;width:425px;text-align:left&#34; id=&#34;__ss_2687115&#34;&gt;&lt;a style=&#34;font:14px Helvetica,Arial,Sans-serif;display:block;margin:12px 0 3px 0;text-decoration:underline;&#34; href=&#34;http://www.slideshare.net/aklaswad/mt-tag-override&#34; title=&#34;MT Tag Override&#34;&gt;MT Tag Override&lt;/a&gt;&lt;object style=&#34;margin:0px&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=mttagoverride-091209202806-phpapp01&amp;stripped_title=mt-tag-override&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34;/&gt;&lt;param name=&#34;allowScriptAccess&#34; value=&#34;always&#34;/&gt;&lt;embed src=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=mttagoverride-091209202806-phpapp01&amp;stripped_title=mt-tag-override&#34; type=&#34;application/x-shockwave-flash&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style=&#34;font-size:11px;font-family:tahoma,arial;height:26px;padding-top:2px;&#34;&gt;View more &lt;a style=&#34;text-decoration:underline;&#34; href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a style=&#34;text-decoration:underline;&#34; href=&#34;http://www.slideshare.net/aklaswad&#34;&gt;aklaswad&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;

他の方のLTも、興味深いものばかりでした。

そしてクイズ大会!
全十問で、シックスアパートのロゴはどれかと言うような、間違うはずが無い&lt;a href=&#34;http://www.goodpic.com/&#34;&gt;!&lt;/a&gt;問題から、実在しないコールバックポイントはどれかという技術的カルトクイズまで盛りだくさんで、非常に楽しめました。

いや、始まる前は全問正解余裕すぎると思っていたのですが。
言い訳ですが、なんか問題文を見てると「あれ、あのコールバックは実装されている筈だけど、実はバグで動いていないという引っかけ問題なのでは・・・！？」と疑心暗鬼になってしまい。バグ怖いねん。
結果、トップに一歩及ばずの八問正解でした。
優勝された&lt;a href=&#34;http://www.zelazny.mydns.jp/&#34;&gt;oscar&lt;/a&gt;さん(ネタにさせてもらってすみません)、同率首位ながらおしくもジャンケンで敗れた&lt;a href=&#34;http://smallworld.west-tokyo.com/&#34;&gt;にっく&lt;/a&gt;さん、参りました。おめでとうございます！

懇親会は、これまた楽しかったです。BodyMoreってエ(謎)。
その後はあまり記憶がありません。平日なのに。

&lt;h3&gt;Movable Type Designers and Developers Conference in Osaka&lt;/h3&gt;

&lt;h4&gt;day1&lt;/h4&gt;

MTのリリース恒例のカンファレンス第一弾がなんと、初の大阪遠征というかたちで行われました! 
それもカンファレンスとハッカソンの2Daysです。

カンファレンスでは、テーマ機能についてお話しさせていただきました。プレゼン資料はこちらからご覧いただけます。

&lt;a href=&#34;http://blog.aklaswad.com/theme_quest/&#34;&gt;テーマの冒険&lt;/a&gt;

また、テーマ機能のデモンストレーションを兼ねて、プレゼン資料の作成に特化したテーマ「Slidon」を作成したうえで、MT上でプレゼン資料を用意するという試みを行いました。
資料作成に利用したテーマも、ダウンロードしてお試しいただけたらと思います。

&lt;a href=&#34;http://github.com/aklaswad/slidon&#34; title=&#34;aklaswad&#39;s slidon at master - GitHub&#34;&gt;aklaswad&#39;s slidon at master - GitHub&lt;/a&gt;

上記リンク先ページで、「download」ボタンをクリックしてダウンロードしてください。「Slidon」テーマは、今後も継続的に開発を進めていけたらと思います。

また、後半のライトニングトークでは、mt-tmpl-testというツールについても発表しました。資料も無く、かなり分かりづらい発表になってしまった事をお詫びいたします。ある意味BuildTracerの兄弟的な位置づけのツールでもあるので、機会があれば改めてエントリーを書けたらと思います。

その後の懇親会は以下略。沢山次会しました。

&lt;h4&gt;day2&lt;/h4&gt;

二日目はハッカソン。前半では&lt;a href=&#34;http://twitter.com/awayuki&#34;&gt;awayuki&lt;/a&gt;さんとマルチドメインでのMTの運用について考えつつ、後半はBuildTracerのMT5対応版を作ってました。
BuildTracerについては、色々技術的な困難を抱え込んでしまい、なかなか解決できないまま終了。。。MT5対応にはもう少し時間が必要なようです。
ハックタイム終了後は、ビール飲みつつワイワイガヤガヤと成果発表会。楽しかったです!
会場をお貸しいただいた&lt;a href=&#34;http://alfasado.net/&#34;&gt;アルファサード&lt;/a&gt;の&lt;a href=&#34;http://junnama.alfasado.net/online/&#34;&gt;Junnama&lt;/a&gt;さん、&lt;a href=&#34;http://weeeblog.net/&#34;&gt;okayama&lt;/a&gt;さんには本当にお世話になりました。有り難うございました!

&lt;h4&gt;余談&lt;/h4&gt;

ハッカソン中に、カンファレンスで使用した、MTで出力したスライド資料をまとめていました。
その際、ブログのテンプレート中でBlogURLやAssetURLを利用していると、リンクが絶対URLで作成されてしまい、配布には向かないという状況になりました。
その時「あれ、これってTagOverrideで無理矢理タグの出力を相対パスに変換すれば解決できるんちゃう」と閃きまして。ちょっとした試行錯誤の末、上手い事出来たんです!
いやあ、&lt;del datetime=&#34;2009-12-15T01:28:57+09:00&#34;&gt;ネタ&lt;/del&gt;思いつきで作ったプラグインでも、きちんと役に立つ場面があるもんですね。

&lt;ins datetime=&#34;2009-12-15T01:30:51+09:00&#34;&gt;※ ハッカソン中、上記閃きに関して自分自身を絶賛するような独り言がうるさかった事をお詫びいたします。&lt;/ins&gt;

</description>
    </item>
    
    <item>
      <title>Re: [Perl]MT形式のエクスポート用に出力をエスケープする</title>
      <link>http://example.org/2009/000460.html</link>
      <pubDate>Sat, 24 Oct 2009 16:13:32 +0900</pubDate>
      
      <guid>http://example.org/2009/000460.html</guid>
      <description>
&lt;a href=&#34;http://d.hatena.ne.jp/a666666/20091022/1256213712&#34;&gt;MT形式のエクスポート用に出力をエスケープする - 刺身☆ブーメランのはてなダイアリー&lt;/a&gt;

そうか。MTのエクスポート形式って業界標準なのか。。。

エスケープ結果を復元するコードが無かったので自分で書こうとしたが、もとのコードだとエスケープ後のデリミタと同じパターン(-----&amp;lt;&amp;gt;など)が元の文字列に存在した時に、正確に復元できないという問題に気づいたが、あきらめて風呂に入っているうちに解決策を思いついた。
文字列中のすべての「-」のみの行を３倍とかに変更してしまえば、安全にエスケープでき、かつラウンドトリップ可能となるはずです。&lt;q&gt;3倍なのは本来のデリミタ( &#39;-&#39; x 5 || &#39;-&#39; x 8 )と重複しないためで、彗星と直接の関係ありません。&lt;/q&gt;

&lt;script src=&#34;http://gist.github.com/217424.js&#34;&gt;&lt;/script&gt;

実際には、後方互換性が必要になる(このエスケープ形式に対応していないインポーターでも違和感無く読み込めるのが理想)ので、実戦投入は無理でしょう。
元記事のほうでは、HTML表示した場合に見た目変化が無いように空タグっぽい&amp;lt;&amp;gt;を末尾に追加したのだと思うのですが、MTなんかでは最終的な出力先がHTMLとは限らないので、良く無い事が起こりそうな気もします。デリミタと重複する行の末尾にスペースを一個追加してしまう、というあたりが落としどころになるのでしょうか。

</description>
    </item>
    
    <item>
      <title>TagOverride</title>
      <link>http://example.org/2009/000459.html</link>
      <pubDate>Sun, 11 Oct 2009 23:24:23 +0900</pubDate>
      
      <guid>http://example.org/2009/000459.html</guid>
      <description>このプラグインをインストールすると、以下の二つのテンプレートタグが利用可能になります。

&lt;h3&gt;&amp;lt;mt:TagOverride&amp;gt;&lt;/h3&gt;
タグの動作を上書きするためのブロックタグです。
このブロックの実行後にname属性で指定したタグが呼び出された場合、元々のタグの実行結果の代わりに、このブロックの内側のテンプレートの実行結果が表示されるようになります。

&lt;h4&gt;利用可能なモディファイア&lt;/h4&gt;

&lt;dl&gt;&lt;dt&gt;name&lt;/dt&gt;
&lt;dd&gt;上書きするタグの名前を指定します。&lt;/dd&gt;
&lt;/dl&gt;

例: このブロックが実行されると、以降、どのエントリーでも&amp;lt;EntryTitle&amp;gt;タグの実行結果が「トントリー」になります。
&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:TagOverride name=&amp;quot;EntryTitle&amp;quot;&amp;gt;トントリー&amp;lt;/mt:TagOverride&amp;gt;&lt;/pre&gt;

&lt;h4&gt;利用可能な変数&lt;/h4&gt;
上書き後にタグが呼び出された場合、そのタグに設定されたモディファイアの値が、変数&#34;args&#34;にハッシュとして設定されています。これらの値を操作/上書きする事で、タグの動作を変更できます。

例
以下のブロックを実行すると、以降、すべての&amp;lt;mt:Entries&amp;gt;タグのlimitモディファイアが自動的に三倍になり、沢山のエントリーを表示できます。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:TagOverride name=&amp;quot;Entries&amp;quot;&amp;gt;
　　　　&amp;lt;mt:if var=&amp;quot;args&amp;quot; key=&amp;quot;limit&amp;quot;&amp;gt;
　　　　　　　　&amp;lt;mt:setvarblock name=&amp;quot;args&amp;quot; key=&amp;quot;limit&amp;quot;&amp;gt;&amp;lt;mt:var name=&amp;quot;args&amp;quot; key=&amp;quot;limit&amp;quot; op=&amp;quot;*&amp;quot; value=&amp;quot;3&amp;quot;&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
　　　　&amp;lt;/mt:if&amp;gt;
　　　　&amp;lt;mt:SuperTag&amp;gt;
&amp;lt;/mt:TagOverride&amp;gt;&lt;/pre&gt;

&lt;h3&gt;&amp;lt;mt:SuperTag&amp;gt;&lt;/h3&gt;
TagOverrideの内側で、上書き前のタグを呼び出すファンクションタグです。上書き前のタグの実行結果が返ってきます。

例
以下のブロックを実行すると、以降、すべての&amp;lt;mt:EntryTitle&amp;gt;タグの出力の末尾にidが表示されるようになります。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:TagOverride name=&amp;quot;EntryTitle&amp;quot;&amp;gt;&amp;lt;mt:SuperTag&amp;gt;(&amp;lt;mt:EntryID&amp;gt;)&amp;lt;/mt:TagOverride&amp;gt;&lt;/pre&gt;

&lt;h3&gt;既知の問題&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;多重にオーバーライドできないようです。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>registryメソッド三態</title>
      <link>http://example.org/2009/000458.html</link>
      <pubDate>Mon, 22 Jun 2009 00:24:49 +0900</pubDate>
      
      <guid>http://example.org/2009/000458.html</guid>
      <description>
プラグイン作る時には必ずお世話になるregistryメソッドについて。備忘録。

&lt;h3&gt;レジストリはハッシュツリーである&lt;/h3&gt;
レジストリとは、まあwindowsのアレと同じで、MovableTypeがシステム設定を管理するための巨大なハッシュツリーです。レジストリがあらゆる設定を一元管理する事で、プラグイン経由で各種の情報を登録してシステムの挙動を変更したり、プラグインの動作を別のプラグインから操作したり、といった事が容易に実現できます。MT4の中核をなす概念です。

&lt;h3&gt;レジストリはハッシュツリーでは無い&lt;/h3&gt;
さて、先ほど「レジストリは巨大なハッシュツリーである」と書きました。内部表現としてはその通り、PerlのHASHをツリー状にくみ上げたものです。が、セッター/ゲッターであるregistryメソッドを正しく使えば、以下のような機能の恩恵にあずかる事が出来ます。

&lt;h4&gt;labelのtranslate&lt;/h4&gt;
registryメソッド経由で値が取得される場合、そのハッシュツリー以下に「label」というキーで文字列が登録されていれば、その値は自動的にtranslateされます。

&lt;h4&gt;接ぎ木&lt;/h4&gt;
ハッシュツリー内に、外部のハッシュツリーとみなせる値があった場合、自動的に展開されます。
具体的には以下の3つのパターンが該当します。
&lt;ul&gt;
	&lt;li&gt;yamlファイルへのpathとみなせる文字列&lt;/li&gt;
	&lt;li&gt;$Component::Module::subroutineという形式で書かれた、MTの特定のＣｏｍｐｏｎｅｎｔに紐づけられたサブルーチン名。&lt;/li&gt;
	&lt;li&gt;CODEREF&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;pluginへのリファレンスの自動補完&lt;/h4&gt;
取得した部分木がハッシュだった場合、その子供である値がハッシュリファレンスならば、そこにキー「plugin」が追加され、その値を提供したComponent自身へのリファレンスが値にセットされます。

setterとしての使い方
$some_component-&gt;registry(
    &#39;path&#39; =&gt; &#39;to&#39; =&gt; &#39;registry&#39; =&gt; &#39;key&#39; =&gt;
    {
        set =&gt; &#39;this&#39;,
        &#39;as&#39;  =&gt; &#39;hashref&#39;,
    }    
);

my $ref_buz = MT-&gt;registry(&#39;foo&#39;,&#39;bar&#39;,&#39;buz&#39;);

さて、ここからが本題。
MTクラスのregistryメソッド
基本的にgetterとしてのみ動作します。
MT::Componentクラスのインスタンスメソッド
MT::Componentクラスのクラスメソッド</description>
    </item>
    
    <item>
      <title>config.yamlで良くある$Foo::Bar::buzの謎を探る。</title>
      <link>http://example.org/2009/000457.html</link>
      <pubDate>Thu, 18 Jun 2009 04:03:50 +0900</pubDate>
      
      <guid>http://example.org/2009/000457.html</guid>
      <description>この書式はMT独自の機能で、基本的にregistry(プラグインのconfig.yamlなど)にメソッド名を書くような場面でのみ有効となります。一見、Perlの名前空間のようにも見えますが、頭の「$Foo::」の部分は全くの別物です。&lt;a href=&#34;http://code.sixapart.com/svn/movabletype/trunk/lib/MT.pm&#34;&gt;(MT_HOME)/lib/MT.pm&lt;/a&gt;のhandler_to_coderefというルーチンでパースされていますので、詳しい内容についてはコード見てください;-)

MT4では、Componentという概念が登場してます。Componentは、平たく言うと、作業の主体は誰か、という情報を扱うための基底クラスです。
すべてのプラグインはそれぞれ、独立したComponentです。各種addonもComponentです。また、MT本体も、Coreという名前のComponentです。
すべてのComponentはそれぞれに、テンプレートのサーチパスや、L10Nのhandler、registryなどを、固有の情報として保持しています。そのおかげで、必要な時に文脈にあわせて適切な翻訳を行ったり、プラグインが自分のディレクトリ以下のtmplディレクトリからテンプレートファイルを取り出したりする、といったことが実現されています。
そんな、縁の下のComponentさんがたくさんいるので、「じゃ、今回は$Fooさんに面倒見てもらおうかしら」というのが、くだんの表記法の意味する所な訳です。

せっかくなので、ちょっとしたプラグインを作って実験してみます。

MT::translateメソッドは、カレントのComponentがセットされていれば、そのComponentの辞書を優先的に利用して翻訳を行う、という実装になっています。
なので、$Foo::つきで呼ばれたコールバックと、そうでない場合とで、MT::translateを実行した際の結果に違いが現れます。

次のようなCompTest.pmファイルを用意し、

&lt;pre class=&#34;code&#34;&gt;package CompTest;
use MT;
 
sub test_with_component_name {
    printf STDERR &amp;quot;trans with component: %s\n&amp;quot;, MT-&amp;gt;translate(&#39;Entry&#39;);
}
 
sub test_without_component_name {
    printf STDERR &amp;quot;trans without component: %s\n&amp;quot;, MT-&amp;gt;translate(&#39;Entry&#39;);
}
 
1;
&lt;/pre&gt;

config.yamlで以下のようにコールバックに登録します。

&lt;pre class=&#34;code&#34;&gt;id: CompTest
callbacks:
    init_app:
        -
            handler: $CompTest::CompTest::test_with_component_name
        -
            handler: CompTest::test_without_component_name
l10n_class: CompTest::L10N&lt;/pre&gt;

で、このプラグインのL10Nファイルに

&lt;pre class=&#34;code&#34;&gt;Entry =&amp;gt; &#39;Suntory&#39;,&lt;/pre&gt;

などと書いておくと、mt.cgiの実行の度に以下のようなエラー出力が得られる筈です。

&lt;pre class=&#34;code&#34;&gt;trans with component: Suntory
trans without component: Entry&lt;/pre&gt;

&lt;form mt:asset-id=&#34;107&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CompTest.zip&#34;&gt;CompTest.zip&lt;/a&gt;&lt;/form&gt;

&lt;ins datetime=&#34;2009-06-22T02:06:06+09:00&#34;&gt;
&lt;h4&gt;追記: レジストリでのダラー付きメソッド名のみ特権的に実行されるケース&lt;/h4&gt;
大事な機能を見落としてました。
レジストリ内にダラー付きで記述されているメソッド名は、registryメソッド経由で値を参照する場合に、（たとえそれが途中のpathにあったとしても）自動的に実行されます。
これにより、使用頻度が低くかつロードするコストの大きいハッシュテーブルを、必要な時にのみ実行されるサブルーチンの戻り値としてレジストリに組み込むことが出来ます。
これは、現在のMTの実装ではダラーありのメソッド名指定のみに適用されます。

たとえば、以下のようなレジストリエントリとメソッドの実装があった場合

&lt;pre class=&#34;code&#34;&gt;#plugins/Hoge/config.yaml...
id: Hoge
foo:
    bar: $Hoge::Hoge::Fuga::heavy_calcuration&lt;/pre&gt;

&lt;pre class=&#34;code&#34;&gt;# Hoge/Fuga.pm in plugins/Hoge/lib/...
package Hoge::Fuga;
 
sub heavy_calcuration {
　　　　wait_for_godot()
        or die;
　　　　return { answer =&amp;gt; 42 };
}
 
1;&lt;/pre&gt;

このルーチンは、値が要求されるまでは実行されず、かつ、

&lt;pre class=&#34;code&#34;&gt;my $ans = $plugin-&amp;gt;registry(&#39;foo&#39;, &#39;bar&#39;, &#39;answer&#39;);&lt;/pre&gt;

このようにコールされた時には、最初からそこにハッシュがあったかのように扱う事が出来ます。&lt;/ins&gt;

&lt;del datetime=&#34;2009-06-22T02:23:42+09:00&#34;&gt;で、まあ、このComponent指定接頭辞は、実際書かなくてもそれなりに動作はします。ので、本題である$Coreって必ず書く必要があるかと言うと、どうなのか良く分かりません。微妙。
それでも、書いたら損をするという物でもないですし、とりあえずおまじないとして書いておくと良いのではないでしょうか。
そしてもし、プラグイン作ってて、なんか期待したテンプレートをロードしてくれない、なんて事があったら、こんな話もあったよねと思い出してみてください。&lt;/del&gt;
&lt;ins datetime=&#34;2009-06-22T02:32:50+09:00&#34;&gt;callbackのメソッド名のような、実行する事が主目的となるレジストリ値の場合には、最初に書いたようにダラーありと無しで違いは少ないのですが、上記追記分のように、ハッシュを遅延ローディングする目的の場合、必ずメソッド名をダラー付きで指定する必要があります。$Core::Foo::methodのように宣言されている部分は、ほとんどはその遅延ローディング目的ですね。すごく意味のある事です。奥が深いですね。まいりました。&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>ActionStreamのlinkフィールドからサムネイルをでっちあげる。</title>
      <link>http://example.org/2009/000456.html</link>
      <pubDate>Wed, 10 Jun 2009 01:15:58 +0900</pubDate>
      
      <guid>http://example.org/2009/000456.html</guid>
      <description>
久しぶりの更新。テンプレート系のコネタです。
ActionStreamsのいくつかのプラグインでは、別途ThumbnailのURLを取得して専用のフィールドに保存してくれますが、そうではない場合もあります。
特にソーシャルブックマーク等のサービスの場合には、そもそもコンテンツとそのサムネイルの関係が事前に分からないため、何もしてくれません。
でもまあ、自分の行動範囲で、URLからサムネイル画像のURLが推測できる範囲なら何とかなるんじゃないか。
そこで、MTMLで無理矢理やっつけてみました。

まず、以下のようなテンプレートを、モジュールテンプレートとして作成します。
前半のmt:setHashVarタグのなかに適当に正規表現をつっこむと対応サイトが増やせます。とりあえずyoutubeとniconico、amazonだけ作りました。検証してないので、取りこぼしや誤作動があるかもしれません。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:setHashVar urls&amp;gt;
&amp;lt;mt:setvar youtube  value=&amp;quot;http\://[^\.\/]+\.youtube\.(jp|com)/watch\?v=([0-9a-zA-Z\-]{11})&amp;quot;,&amp;quot;http://img.youtube.com/vi/$2/default.jpg&amp;quot; /&amp;gt;
&amp;lt;mt:setvar niconico value=&amp;quot;^http\://www\.nicovideo\.jp/watch/[sn]m([0-9]{1,9})&amp;quot;,&amp;quot;http://tn-skr2.smilevideo.jp/smile?i=$1&amp;quot; /&amp;gt;
&amp;lt;mt:setvar amazon   value=&amp;quot;^http\://www\.amazon\.(?:co\.jp|com)/.*(?:ASIN|product-description|product|dp)/([^/]+)(?:/.*)*&amp;quot;,&amp;quot;http://images.amazon.com/images/P/$1.09._THUMBZZZ_.jpg&amp;quot; /&amp;gt;
&amp;lt;/mt:setHashVar&amp;gt;
&amp;lt;mt:loop urls&amp;gt;
&amp;lt;mt:setVarBlock check&amp;gt;&amp;lt;mt:getVar var=&amp;quot;__value__[0]&amp;quot;&amp;gt;&amp;lt;/mt:setVarBlock&amp;gt;
&amp;lt;mt:setVarBlock pattern&amp;gt;/&amp;lt;mt:getVar var=&amp;quot;__value__[0]&amp;quot;&amp;gt;/&amp;lt;/mt:setVarBlock&amp;gt;
&amp;lt;mt:setVarBlock replace&amp;gt;&amp;lt;mt:getVar var=&amp;quot;__value__[1]&amp;quot;&amp;gt;&amp;lt;/mt:setVarBlock&amp;gt;
&amp;lt;mt:if url like=&amp;quot;$check&amp;quot;&amp;gt;&amp;lt;mt:var url regex_replace=&amp;quot;$pattern&amp;quot;,&amp;quot;$replace&amp;quot;&amp;gt;&amp;lt;/mt:if&amp;gt;
&amp;lt;/mt:loop&amp;gt;&lt;/pre&gt;

上のを保存したら(仮に「URL2Image」という名前で保存したとします)、ActionStreamsの表示側で、次のようにインクルードします。
変換対象となるURLを、モディファイアのように渡してください。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:if tag=&amp;quot;StreamActionThumbnailURL&amp;quot;&amp;gt;
    &amp;lt;mt:StreamActionThumbnailURL /&amp;gt;
&amp;lt;mt:else&amp;gt;
    &amp;lt;mt:setvarblock name=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;mt:StreamActionURL /&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
    &amp;lt;mt:setvarblock name=&amp;quot;thumb&amp;quot;&amp;gt;&amp;lt;mt:include module=&amp;quot;URL2Image&amp;quot; url=&amp;quot;$link&amp;quot; trim=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
    &amp;lt;mt:if thumb&amp;gt;&amp;lt;img src=&amp;quot;&amp;lt;mt:var name=&amp;quot;thumb&amp;quot; /&amp;gt;&amp;quot; /&amp;gt;&amp;lt;/mt:if&amp;gt;
&amp;lt;/mt:if&amp;gt;&lt;/pre&gt;


このブログのメインページに表示しているライフログでも、Youtubeのビデオのブックマークなんかで画像が表示されるようにしてあるので、参考にしてみてください。

今回は、画像のみに絞ったカスタマイズにしましたが、やり方によってはembedタグにしたりアフィリエイトリンクにしたり色々出来ると思います。もちろんActionStreams以外の色々にも利用できると思います。お好みで工夫してみてください。

&lt;ins datetime=&#34;2009-06-18T00:26:30+09:00&#34;&gt;&lt;div&gt;変換後のURLの前後に半角スペースが混じるとの指摘をいただきましたので、呼び出し側で&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/modifiers/trim.html&#34;&gt;trim&lt;/a&gt;モディファイアを追加する形で対応しました。&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:include module=&amp;quot;URL2Image&amp;quot; url=&amp;quot;$link&amp;quot; trim=&amp;quot;1&amp;quot; /&amp;gt;&lt;/pre&gt;また、&lt;a href=&#34;http://www.hvc-001.com/mt/2009/06/15061330.html&#34;&gt;hvc-001さんにご指摘いただき&lt;/a&gt;、ニコニコ動画用の正規表現を一部修正しました。トラックバックありがとうございました!&lt;/div&gt;&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>test</title>
      <link>http://example.org/2009/000455.html</link>
      <pubDate>Fri, 22 May 2009 22:50:52 +0900</pubDate>
      
      <guid>http://example.org/2009/000455.html</guid>
      <description>
&lt;form mt:asset-id=&#34;100&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/images/IMG_0137.JPG&#34;&gt;&lt;img alt=&#34;IMG_0137.JPG&#34; src=&#34;http://blog.aklaswad.com/assets_c/2009/05/IMG_0137-thumb-120x160-100.jpg&#34; width=&#34;120&#34; height=&#34;160&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/a&gt;&lt;/form&gt;</description>
    </item>
    
    <item>
      <title>RE:テンプレートでクロージャ</title>
      <link>http://example.org/2009/000454.html</link>
      <pubDate>Tue, 03 Mar 2009 23:39:53 +0900</pubDate>
      
      <guid>http://example.org/2009/000454.html</guid>
      <description>
感服した。驚愕した。特にすばらしいのがプレフィックスを置換することで、MTMLコンパイラの認識外からMTMLへインポートするというアイデアだ。非常にスマートなやり方だと思う。

ただ、厳密にはクロージャではないと思う。自分も門外漢なのであまりどうのこうのと言えないが、つまるところ、基本的にMTMLには変数のスコープという概念が存在しないので、クロージャ自体が成立しないのだ。

変数のスコープを閉じ込めるために、上記のプレフィックスのトリックを二重に使っている。

</description>
    </item>
    
    <item>
      <title>[MT]コールバックの実行順序</title>
      <link>http://example.org/2009/000453.html</link>
      <pubDate>Fri, 20 Feb 2009 00:25:00 +0900</pubDate>
      
      <guid>http://example.org/2009/000453.html</guid>
      <description>
今日はコールバックの発生順序に関して大はまりしたので個人的に思ったことをメモ。

MTやMTのプラグインから利用可能なコールバックには大きく分けて以下の3つがある。
&lt;ul&gt;
	&lt;li&gt; 1) 通常のMTのコールバック(cms_post_saveなど)&lt;/li&gt;
	&lt;li&gt; 2) Data::ObjectDriver(D::OD) が Class::Trigger のトリガーを実行した際に同期して呼ばれる、オブジェクト操作関係のコールバック(MT::Entry::post_saveなど)&lt;/li&gt;
	&lt;li&gt; 3) D::ODが実行する Class::Trigger のトリガー&lt;/li&gt;
&lt;/ul&gt;

ちなみに(3)は、以下のように指定/実行できます。

&lt;pre class=&#34;code&#34;&gt;MT::Comment-&amp;gt;add_trigger(
    post_save =&amp;gt; sub {
        my $comment = shift;
        # do something here... 
});&lt;/pre&gt;

このうち、(1)と(2)はMTのコールバックとして実行されるため、優先順位を指定できるが、(3)はMTのコールバックではないので、どのような順番で処理されるか分からない。そのためドハマリしました。

結局、現在のMTの実装として（恣意的に）

&lt;ul&gt;
	&lt;li&gt;Class::Trigger　の「pre_****」は常にMTの「pre_****」コールバックより先に呼ばれる&lt;/li&gt;
	&lt;li&gt;Class::Trigger　の「post_****」は常にMTの「post_****」コールバックより後に呼ばれる&lt;/li&gt;
&lt;/ul&gt;

となっているが、（多分）アンドキュメンテッドな仕様なためこの順序が変更されない保証は無い。ということだと思います。

とりあえずの結論としては、基本的に(3)の方法は使わずに必ず(2)の方法で指定する、必要ならpriorityをきちんと登録する、というのがベストプラクティスなのかなと思いました。


で、ここからが疑問なのだが、単なる数字(MTのコールバックの優先順位は0~11で指定される)では正直何より先or後に実行されるのか分からないんスよね。これって意味有ります？
こういった仕組み自体はよく有る汎用的な仕組みだとは思うのですが。なんか納得いかねえ。

曖昧模糊と「早いうちに」とか「遅い時間に」とか指定するよりも、名指しで「&#39;hoge&#39;プラグインの&#39;mage&#39;コールバックよりは先に実行してください」みたいに具体的に指定できるような仕組みのがベターなのかな、と妄想した一日でした。</description>
    </item>
    
    <item>
      <title>Dummy</title>
      <link>http://example.org/2009/000452.html</link>
      <pubDate>Sat, 31 Jan 2009 23:59:59 +0900</pubDate>
      
      <guid>http://example.org/2009/000452.html</guid>
      <description>
Dummy</description>
    </item>
    
    <item>
      <title>ギターのコード譜を生成するプラグイン作った。</title>
      <link>http://example.org/2008/000448.html</link>
      <pubDate>Thu, 11 Dec 2008 10:45:19 +0900</pubDate>
      
      <guid>http://example.org/2008/000448.html</guid>
      <description>&lt;h2&gt;動作環境&lt;/h2&gt;

お使いのサーバーで、画像処理ライブラリのGDと、PerlからGDを利用するためのモジュールがインストールされている必要があります。自分の利用しているXreaのサーバーでは、いずれも利用可能なようです。&lt;br /&gt;

&lt;h2&gt;インストール&lt;/h2&gt;

プラグインディレクトリに、解凍したGuitarToolsプラグインのpluginsディレクトリ以下をアップロードしてください。&lt;br /&gt;
外部モジュールとして、画像作成に&lt;a href=&#34;http://blog.livedoor.jp/nipotan/archives/51168727.html&#34;&gt;にぽたんさん作成&lt;/a&gt;の&lt;a href=&#34;http://search.cpan.org/dist/GD-Tab-Guitar/&#34;&gt;GD::Tab::Guitar&lt;/a&gt;、コード認識に&lt;a href=&#34;http://search.cpan.org/dist/Music-Chord-Namer/&#34;&gt;Music::Chord::Namer&lt;/a&gt;を利用しています。プラグインのパッケージには同梱していませんので、これらのモジュールをCPANからインストールするか、またはextlibに適宜展開して下さい。&lt;br /&gt;
&lt;br /&gt;
また、lines記法を利用するためには、以下のスタイルシートをメインのスタイルシートテンプレートのおしりなどに張り付けるなどの形で、参照できるようにしてください。&lt;br /&gt;

&lt;pre class=&#34;code&#34;&gt;.guitarlines {
    line-height: 50px;
    background-color: #F4F8Fc;
    font-size: 16px;
}

.guitarlines .guitarchord {
    position: relative;
    width: 52px;
    top: -7px;
    margin: 0 -52px 0 0;
    border: 0;
}

.guitarlines .chordname {
    position: relative;
    display: inline-block;
    width: 0;
    top: -1.2em;
    font-weight: bold;
}&lt;/pre&gt;


&lt;h2&gt;利用方法&lt;/h2&gt;

プラグインがインストールされると、グローバルモディファイア「guitar_tools」と、テキストフォーマット「GuitarTools」が有効になります。これらが有効な箇所で、ギター記法を利用できます。&lt;br /&gt;
ごくたまにエントリーで使う程度ならフォーマットから利用し、日常的にギター記法を利用するブログでは、EntryBodyタグなどのモディファイアとして、テンプレートに組み込んでしまうのがよいかと思います。&lt;br /&gt;

&lt;h2&gt;シンタックス&lt;/h2&gt;

&lt;h3&gt;基本&lt;/h3&gt;
角括弧で囲んで「chord:」と書いた後にコードネームを書いてください。&lt;br /&gt;
&amp;#x5b;chord:C&amp;#x5d;と書くと[chord:C]のように画像に変換されます。&lt;br /&gt;

&lt;h3&gt;フレットを指定する&lt;/h3&gt;
デフォルトで登録されているコードのフォームが気に食わない、コードが特殊、など、フレットを指定したい場合「C6@032030」のように@マークで区切ってください。&lt;br /&gt;

&amp;#x5b;chord:C6@032030&amp;#x5d;&lt;br /&gt;
[chord:C6@032030] &lt;br /&gt;

&lt;ul&gt;
	&lt;li&gt;6弦から1弦に向かって書きます。&lt;/li&gt;
	&lt;li&gt;ミュートは小文字のxです。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;複数のコードをズラッと書く。&lt;/h3&gt;
複数並べたい場合、スペースで区切って記入できます。&lt;br /&gt;

&amp;#x5b;chord:C6@032030 GM7 Bm7 Em&amp;#x5d;&lt;br /&gt;
[chord:C6@032030 GM7 Bm7 Em]&lt;br /&gt;

&lt;h3&gt;コードネームの自動推定&lt;/h3&gt;
コードネームの代わりに「auto」と指定することで、自動的にコードを推測することができます。&lt;br /&gt;

&amp;#x5b;chord:auto@320003 auto@xx0232 auto@x7678x auto@576755 auto@123456&amp;#x5d;&lt;br /&gt;
[chord:auto@320003 auto@xx0232 auto@x7678x auto@576755 auto@123456]&lt;br /&gt;

&lt;h3&gt;その他の例&lt;/h3&gt;
フレット指定するならコードネームは適当でもおkです&lt;br /&gt;

&amp;#x5b;chord:Jimi@x7678x&amp;#x5d;&lt;br /&gt;
[chord:Jimi@x7678x]&lt;br /&gt;

二桁のフレット数が混じるときはカンマ区切りで&lt;br /&gt;

&amp;#x5b;chord:Ab_oct@x,11,x,13,x,x&amp;#x5d;&lt;br /&gt;
[chord:Ab_oct@x,11,x,13,x,x]&lt;br /&gt;

&lt;h3&gt;コードの表記例&lt;/h3&gt;

メジャー、マイナー&lt;br /&gt;
&amp;#x5b;chord:C Cm&amp;#x5d;&lt;br /&gt;
[chord:C Cm] &lt;br /&gt;

メジャーセブンスは大文字M7。セブンス、メジャーセブン、マイナーセブン、マイナーメジャーセブン。&lt;br /&gt;
&amp;#x5b;chord:C7 CM7 Cm7 CmM7&amp;#x5d;&lt;br /&gt;
[chord:C7 CM7 Cm7 CmM7] &lt;br /&gt;

ディミニッシュ、オーギュメント、サスペンテッドフォー、アドナイン&lt;br /&gt;
&amp;#x5b;chord:Edim Eaug Esus4 Eadd9&amp;#x5d;&lt;br /&gt;
[chord:Edim Eaug Esus4 Eadd9] &lt;br /&gt;

テンションは括弧でくくる&lt;br /&gt;
&amp;#x5b;chord:C7(9) C7(9,13)&amp;#x5d;&lt;br /&gt;
[chord:C7(9) C7(9,13)] &lt;br /&gt;

シャープはシャープ記号。フラットは小文字のb&lt;br /&gt;
&amp;#x5b;chord:C# C7(#9) C7(b5)&amp;#x5d;&lt;br /&gt;
[chord:C# C7(#9) C7(b5)] &lt;br /&gt;


&lt;h3&gt;lines記法&lt;/h3&gt;
歌詞っぽいものをかけます。&lt;br /&gt;

歌詞全体を&amp;#x5b;lines:　... &amp;#x5d; で囲みます。&lt;br /&gt;
そして、コードネームを弓かっこ「{」「}」で囲んではさむと、歌詞中にコードネームやポジション画像を埋め込むことができます。&lt;br /&gt;
コードネームのみとしたい場合、コードネームの先頭にマイナスを付けてください。&lt;br /&gt;

&lt;pre&gt;&amp;#x5b;lines:
{F#m(11)@x44200}two jumps in a week a bet you {Asus2@x02200}think that&#39;s pretty clever {E}don&#39;t you boy?
{F#m(11)@x44200}Flying on your motorcycle, {Asus2@x02200}watching all the ground {Eb@688666}beneath you drop
{-F#m(11)}You&#39;d kill yourself for recognition, {-Asus2}kill yourself to never {-E}ever stop
{-F#m(11)}You broke another mirror, you&#39;re {-Asus2}turning into something {-E}you are not

So don&#39;t leave me {F#m(11)@x44200}high____{Asus2@x02200}don&#39;t leave me {E}dry____
Don&#39;t leave me {-F#m(11)}high____{-Asus2}don&#39;t leave me {-E}dry____
&amp;#x5d;
&lt;/pre&gt;

[lines:
{F#m(11)@x44200}two jumps in a week a bet you {Asus2@x02200}think that&#39;s pretty clever {E}don&#39;t you boy?
{F#m(11)@x44200}Flying on your motorcycle, {Asus2@x02200}watching all the ground {Eb@688666}beneath you drop
{-F#m(11)}You&#39;d kill yourself for recognition, {-Asus2}kill yourself to never {-E}ever stop
{-F#m(11)}You broke another mirror, you&#39;re {-Asus2}turning into something {-E}you are not

So don&#39;t leave me {F#m(11)@x44200}high____{Asus2@x02200}don&#39;t leave me {E}dry____
Don&#39;t leave me {-F#m(11)}high____{-Asus2}don&#39;t leave me {-E}dry____
]</description>
    </item>
    
    <item>
      <title>config.yamlで行こう。</title>
      <link>http://example.org/2008/000447.html</link>
      <pubDate>Thu, 04 Dec 2008 23:53:49 +0900</pubDate>
      
      <guid>http://example.org/2008/000447.html</guid>
      <description>
MTのプラグインのエントリーファイルを「hoge.pl」で書いたらよいのか、「config.yaml」で書いたらよいのか、という話題をちらほらと耳にします。
自分的にはyaml大好きなので、

config</description>
    </item>
    
    <item>
      <title>[ActionStreams]ボケて用config.yaml</title>
      <link>http://example.org/2008/000446.html</link>
      <pubDate>Tue, 07 Oct 2008 22:51:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000446.html</guid>
      <description>
&lt;a href=&#34;http://bokete.jp/&#34;&gt;ボケて&lt;/a&gt;用のconfig.yamlです。

&lt;ul&gt;
	&lt;li&gt;フィード無いのでscraperでとってきてます。多分寿命は短いと思う。&lt;/li&gt;
	&lt;li&gt;scraperのネストの扱いが分からなくてハマった。&lt;/li&gt;
	&lt;li&gt;フィードの配信が待ち望まれるところ。&lt;/li&gt;
	&lt;li&gt;フィールド追加するより、titleなどの既存のフィールドに入れちまった方が良いのかしら？&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;code&#34;&gt;
name: BoketeAS
id: boketeas
key: BoketeAS
author_link: http://blog.aklaswad.com/
author_name: aklaswad
description: Adds profile service and activity stream for Bokete.jp
version: 0.1
profile_services:
    bokete:
        name: Bokete
        url: http://bokete.jp/user/%s
        icon: images/bokete.png
action_streams:
    bokete:
        bokes:
            name: Bokes
            description: stream you boked
            fields:
                - boke
            html_form: &#39;[_1] boked &amp;lt;a href=&amp;quot;[_2]&amp;quot;&amp;gt;[_3]&amp;lt;/a&amp;gt;&#39;
            html_params:
                - url
                - boke
            url: &#39;http://bokete.jp/user/{{ident}}&#39;
            identifier: boke
            scraper:
                foreach: div.odai530
                get:
                    boke:
                        - &#39;h3&#39;
                        - TEXT
                    url:
                        - &#39;//p[2]/a[position()=last()]&#39;
                        - @href
&lt;/pre&gt;

&lt;ins datetime=&#34;2008-10-22T20:57:31+09:00&#34;&gt;とっくにフィード吐くようになってるみたいですね。。。そのうち。。。&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>EmoticonButton 4 CustomEditorButton2。</title>
      <link>http://example.org/2008/000445.html</link>
      <pubDate>Fri, 03 Oct 2008 23:45:20 +0900</pubDate>
      
      <guid>http://example.org/2008/000445.html</guid>
      <description>
&lt;a href=&#34;http://www.luckypines.com/mt/2008/05/mt.html&#34;&gt;MTでも絵文字使おうぜプラグイン、アリマス - Kickstart my heart&lt;/a&gt;で公開されている絵文字プラグインを、CustomEditorButton2にインポートしてみました&lt;img class=&#34;emoticon happy02&#34; src=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-static/plugins/EmoticonButton/images/emoticons/happy02.gif&#34; alt=&#34;happy02&#34; style=&#34;border:0;&#34; /&gt;。

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;96&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/EB4CEB2.zip&#34;&gt;EB4CEB2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;

利用にあたっては、CustomEditorButotn2側もアップデート&lt;img class=&#34;emoticon up&#34; src=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-static/plugins/EmoticonButton/images/emoticons/up.gif&#34; alt=&#34;up&#34; style=&#34;border:0;&#34; /&gt;が必要となっています&lt;img class=&#34;emoticon wobbly&#34; src=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-static/plugins/EmoticonButton/images/emoticons/wobbly.gif&#34; alt=&#34;wobbly&#34; style=&#34;border:0;&#34; /&gt;。お試しいただく際には、CustomEditorButton2プラグインも、以下のバージョン2.0.31にアップデートしてください&lt;img class=&#34;emoticon coldsweats01&#34; src=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-static/plugins/EmoticonButton/images/emoticons/coldsweats01.gif&#34; alt=&#34;coldsweats01&#34; style=&#34;border:0;&#34; /&gt;。

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;95&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2_0_31.zip&#34;&gt;CustomEditorButton2_0_31.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Six Apartに入社しました。</title>
      <link>http://example.org/2008/000444.html</link>
      <pubDate>Tue, 16 Sep 2008 20:44:51 +0900</pubDate>
      
      <guid>http://example.org/2008/000444.html</guid>
      <description>
私事となりますが、本日よりSix Apartで働くことになりました。

こうして報告エントリを書こうとしているとなんだか感極まったりして、ブログの過去ログを見直しているのですが、今の自分があるのは、このブログを見てくれて、自分の拙いプラグインを使ってくださった皆様のおかげだと、実感しています。本当にありがとうございました。

これからも愉快なプラグインを作ったりなどするべく、頑張っていきたいと思います。
今後ともよろしくお願いします。</description>
    </item>
    
    <item>
      <title>息を吐くようにMTMLを書く。</title>
      <link>http://example.org/2008/000442.html</link>
      <pubDate>Thu, 11 Sep 2008 21:25:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000442.html</guid>
      <description>まず、MT4.2の新機能のグローバルモディファイア&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/modifiers/mteval.html&#34;&gt;mteval&lt;/a&gt;を使って、ウェブページに直接MTMLを書けるようにします。ただし、全部を対象にしてしまうのも気持ち悪いので、プライベートタグ「@eval」をつけてあるものだけを対象にするようにします。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:PageIfTagged tag=&amp;quot;@eval&amp;quot;&amp;gt;
    &amp;lt;mt:PageBody mteval=&amp;quot;1&amp;quot; /&amp;gt;
&amp;lt;mt:else&amp;gt;
    &amp;lt;mt:PageBody /&amp;gt;
&amp;lt;/mt:PageIfTagged&amp;gt;&lt;/pre&gt;

&lt;form mt:asset-id=&#34;92&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;http://blog.aklaswad.com/images/webpage.png&#34; width=&#34;336&#34; height=&#34;284&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/form&gt;

これで、ウェブページに簡単にMTMLを書けるようになりました。

さて、MTMLで満足な出力結果が得られるようになったら、今度はサイトのトップページなどに導線を作りたいところ。

MT4.1以前で、インデックステンプレートを利用してページを作っていた場合、ここでどうしてもひと手間かかっていました。
今回はウェブページを利用しているので、以下のように、プライベートタグ「@nav」の付けられたウェブページをサイトのトップナビゲーションに表示するよう、事前に作成しておきました。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;
    &amp;lt;div id=&amp;quot;nav-inner&amp;quot;&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li class=&amp;quot;home&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;lt;$MTBlogURL$&amp;gt;&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;lt;$mt:Link template=&amp;quot;archive_index&amp;quot;$&amp;gt;&amp;quot;&amp;gt;Archives&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;mt:Pages tag=&amp;quot;@nav&amp;quot;&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;lt;mt:PagePermalink&amp;gt;&amp;quot;&amp;gt;&amp;lt;mt:pageTitle&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/mt:Pages&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;form mt:asset-id=&#34;91&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;topnav.png&#34; src=&#34;http://blog.aklaswad.com/images/topnav.png&#34; width=&#34;244&#34; height=&#34;99&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/form&gt;

ちなみに、mid-centuryのトップナビゲーションは初期状態では、「バナーヘッダー」モジュールテンプレートの中で、mt:ignoreで無効化されています。該当箇所のmt:ignoreを削除すれば有効になります。

これで完成。かなり快適です。
ちょっとAssetやエントリをまとめたページを作りたいなと思い立ったら、おもむろに@evalというタグをつけてウェブページにテンプレートを書き始めます。で、出来たら@navとタグを付ければ即サイトに反映されるという塩梅。MTML中毒の皆さん、良かったらお試しくださいー。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/2008/000443.html</link>
      <pubDate>Tue, 09 Sep 2008 05:56:41 +0900</pubDate>
      
      <guid>http://example.org/2008/000443.html</guid>
      <description>

そこで問題だ!
この、以前のバージョンにべったりの実装で、どうやって仕様変更に対応するか?

答え1: ハンサムのaklaswadは突如すばらしいアイデアがひらめく
答え2: リリースでいきなり仕様がもとに戻る
答え3: 対応できない。現実は非情である。

</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/2008/000441.html</link>
      <pubDate>Thu, 04 Sep 2008 17:28:46 +0900</pubDate>
      
      <guid>http://example.org/2008/000441.html</guid>
      <description>


</description>
    </item>
    
    <item>
      <title>google chrome から投稿</title>
      <link>http://example.org/2008/000440.html</link>
      <pubDate>Wed, 03 Sep 2008 11:56:14 +0900</pubDate>
      
      <guid>http://example.org/2008/000440.html</guid>
      <description>
google chrome から投稿。
TaggingHelper は動いてるけど、CustomEditorButton2は動作せず。

&lt;ins datetime=&#34;2008-09-03T13:29:04+09:00&#34;&gt;いや、動いてはいるな。なんかクリックの感知が安定してない感じだ。ダブルクリックすると動いたりする。。。なんぞこれー&lt;/ins&gt;

</description>
    </item>
    
    <item>
      <title>Movable Type Developer Conference に参加できませんでした。</title>
      <link>http://example.org/2008/000439.html</link>
      <pubDate>Thu, 21 Aug 2008 22:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000439.html</guid>
      <description>
とんだ出落ちですみません。会社の休みもらえたのが、締め切りの次の日だったんです。フライングで申し込んでおけば良かったと今になって思うも後悔先に立たず。

でまあ、結局一日家でUstreamに張り付いてずっと見ていたので、割と満足。ちょっとした感想くらいなら述べることも出来るというものです。


興味深かったのはやはり Beau Smith さんのパブリッシングに関する話。
アーカイブやインデックステンプレートごとに更新頻度とページビューを予想してパブリッシュの方法を決めろ、ただしサイトごとに傾向は違ってくるので頑張れ、という話だったと思います。

ただ、現実的に、そう簡単に最適解が出せるかというと難しいと思います。その一番の理由は、定量的に再構築の回数を観測出来ないからです。

これってでも、実現できそうですよね。
再構築の回数を記録してFileinfoテーブルにでも突っ込んでおくと、パフォーマンスの測定に役立つのでは無いか。
もっと突き進めれば、ページビューのデータも取得するようにして、View / Build Ratio みたいな値を定期的に算出し、ファイルごとに最適なパブリッシング方法をMTが自動的に設定してくれる、なんてことも出来るかも。という妄想をいたしました。


あとはLightingTalkが大変楽しそうでしたね。Ustreamの画面だと実動作のデモは視聴がちょっと辛くはありましたが、それでも、すごくいい雰囲気が伝わってきました。
変態テンプレート好きの自分としては、&lt;a href=&#34;http://www.3oclock.com/hello-world/2008/08/movable-type-developer-confere-1.html&#34;&gt;mt:EntryPreviousのネスト技&lt;/a&gt;の話が一番ツボにハマりました。今なら、mt:setVarTemplateを再帰させてゴニョゴニョしても面白いかも。という妄想をいたしました。


なにはともあれ、みなさんお疲れさまでした。参加できなくて残念でしたが、すごく楽しい時間をありがとうございました。おしまい。</description>
    </item>
    
    <item>
      <title>[mtplugins] CustomEditorButton2 0.3</title>
      <link>http://example.org/2008/000438.html</link>
      <pubDate>Thu, 21 Aug 2008 02:10:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000438.html</guid>
      <description>
&lt;form mt:asset-id=&#34;89&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2_0_3.zip&#34;&gt;CustomEditorButton2_0_3.zip&lt;/a&gt;&lt;/form&gt;

MT4.2 でボタンの配置が保存できなくなっていた問題に対応しました。
機能追加などはありません。&lt;ins datetime=&#34;2008-08-21T11:09:09+09:00&#34;&gt;MT4.1で利用を続ける場合は、アップグレードの必要はありません。&lt;/ins&gt;

&lt;ins datetime=&#34;2008-08-21T11:10:34+09:00&#34;&gt;CustomEditorButton2の以前のバージョンからアップグレードする場合には、事前に(MT_HOME/)plugins/CustomEditorButton2/config.yaml ファイルを削除してください。誤動作の可能性があります。&lt;/ins&gt;

このバージョンから、諸事情により、デフォルトのボタンは別プラグインとして同梱される形になりました。
パッケージを見ればすぐわかると思うので、デフォルトのボタンが気に食わない場合はサクッと消してしまってください。

あと、この間気づいたのですが、FastCGI環境だとうまく動かないみたいですね。近いうちにその辺を修正したバージョンを出そうと思います。
ほかに何か不具合などありましたらフィードバックください。よろしくお願いします。</description>
    </item>
    
    <item>
      <title>blog it from iPhone</title>
      <link>http://example.org/2008/000437.html</link>
      <pubDate>Mon, 11 Aug 2008 13:48:18 +0900</pubDate>
      
      <guid>http://example.org/2008/000437.html</guid>
      <description>
面白い。MTの管理画面からアカウントを一発で作成出来るといいかも。</description>
    </item>
    
    <item>
      <title>iPhoneテンプレートにtouch-iconを追加する</title>
      <link>http://example.org/2008/000436.html</link>
      <pubDate>Fri, 08 Aug 2008 17:01:57 +0900</pubDate>
      
      <guid>http://example.org/2008/000436.html</guid>
      <description>
http://cremadesign.jp/blog/iphone/iphone_template_for_mt101.html

http://builder.japan.zdnet.com/news/story/0,3800079086,20365093,00.htm

http://builder.japan.zdnet.com/news/story/0,3800079086,20365049,00.htm</description>
    </item>
    
    <item>
      <title>「Movable Type 4.2 パーフェクトガイド」にBuild Tracerが掲載されてます。</title>
      <link>http://example.org/2008/000435.html</link>
      <pubDate>Thu, 07 Aug 2008 01:15:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000435.html</guid>
      <description>
&lt;a href=&#34;http://www.koikikukan.com/&#34;&gt;小粋空間&lt;/a&gt;のyujiroさんの著書&lt;a href=&#34;http://www.amazon.co.jp/Movable-Type-4-2-%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%AC%E3%82%A4%E3%83%89-%E5%8B%87%E6%AC%A1%E9%83%8E/dp/4839927790%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dblogaklaswadc-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4839927790&#34; target=&#34;_blank&#34;&gt;Movable Type 4.2 パーフェクトガイド&lt;/a&gt;が発売になりました。おめでとうございます!
しかも、一冊戴いてしまいました。ありがとうございました!

&lt;a href=&#34;http://www.amazon.co.jp/Movable-Type-4-2-%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%AC%E3%82%A4%E3%83%89-%E5%8B%87%E6%AC%A1%E9%83%8E/dp/4839927790%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dblogaklaswadc-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4839927790&#34; target=&#34;_blank&#34;&gt;Movable Type 4.2 パーフェクトガイド&lt;/a&gt;&lt;br /&gt;荒木 勇次郎&lt;br /&gt;&lt;a href=&#34;http://www.amazon.co.jp/Movable-Type-4-2-%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%AC%E3%82%A4%E3%83%89-%E5%8B%87%E6%AC%A1%E9%83%8E/dp/4839927790%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dblogaklaswadc-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4839927790&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/31VAjKmpxAL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;4839927790&#34; /&gt;&lt;/a&gt;&lt;img src=&#39;http://www.assoc-amazon.jp/e/ir?t=blogaklaswadc-22&amp;l=ur2&amp;o=9&#39; width=&#39;1&#39; height=&#39;1&#39; border=&#39;0&#39; alt=&#39;&#39; /&gt;&lt;br /&gt;

時間を見ては目を通しているのですが、本当にすごいボリュームです。しかも、随所にコラムとして関連情報へのポインタが含まれていて、情報の密度も半端じゃないです。手に取った瞬間に、並大抵ではないエネルギーが費やされている一冊だと分かります。すばらしいです。
改めてyujiroさん、お疲れ様でした。

それでですね。なんと!パーフェクトガイド内で、当サイトで公開しているプラグイン&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/buildtracer.html&#34;&gt;Build Tracer&lt;/a&gt;が紹介されています。しかも、通常のプラグイン紹介とは別枠で、パーフェクトガイドのメインともいえるテンプレート解説の冒頭付近に一ページ強を割いて掲載されていました。見た瞬間変な汁が出ました。
あの&lt;del&gt;超ニッチな&lt;/del&gt;プラグインを取り上げられるとは、これは、自分も頑張らなくちゃとやる気がたくさん出ました。ありがとうございました!

&lt;ins datetime=&#34;2008-08-08T00:50:50+09:00&#34;&gt;IndexContextプラグインもピックアップされてました。うぇーい。&lt;/ins&gt;
</description>
    </item>
    
    <item>
      <title>TaggingHelper For MT4.2</title>
      <link>http://example.org/2008/000434.html</link>
      <pubDate>Wed, 06 Aug 2008 22:33:27 +0900</pubDate>
      
      <guid>http://example.org/2008/000434.html</guid>
      <description>
そろそろ、当サイトで配布しているプラグインをMT4.2に対応させていく必要があるのですが、今回は色々動かなくなるものが多くて、頭を抱えています。

とり急ぎTaggingHelperを対応させました。まったくの暫定版なので、バージョン外とします。
Movable Type / MTOS 4.2 でのみ動作します。また、タグの使用頻度順でのソートが出来ません。

&lt;form mt:asset-id=&#34;86&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/TaggingHelperForMT4_2.zip&#34;&gt;TaggingHelperForMT4_2.zip&lt;/a&gt;&lt;/form&gt;

今後の対応については、考え中です。</description>
    </item>
    
    <item>
      <title>iPhone用テンプレートを導入してみました。</title>
      <link>http://example.org/2008/000433.html</link>
      <pubDate>Tue, 05 Aug 2008 15:00:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000433.html</guid>
      <description>
cremaさん作成の iPhoneテンプレート for MT を、このブログに導入してみました。iPod TouchやiPhoneをお持ちの方は、アクセスしてみてください。

&lt;form mt:asset-id=&#34;85&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;blogaklaswadcomimage.png&#34; src=&#34;http://blog.aklaswad.com/images/blogaklaswadcomimage.png&#34; width=&#34;320&#34; height=&#34;480&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/form&gt;

テンプレートは以下のページで配布されています。すばらしいです。
&lt;a href=&#34;http://cremadesign.jp/blog/iphone/iphone_template_for_mt.html&#34;&gt;「iPhoneテンプレートfor MT」を公開いたします。｜iPhone｜東京Webデザイナー日記リターンズ｜crema design&lt;/a&gt;

なお、 iPhoneテンプレートはブログURL内の「i」ディレクトリに出力する仕組みになっていますので、iPhoneでアクセスする時に専用のURLにアクセスする必要があります。
このブログでは、インストールの際に以下のようなカスタマイズを行って、PCでの閲覧時と同じURLになるようにしてみました。

&lt;ul&gt;
	&lt;li&gt;追加したiPhoneテンプレート内のトップページとブログ記事アーカイブへのリンクを、通常のものに書き直す。
	&lt;ul&gt;&lt;li&gt;画像やcssファイルなどへのリンクは変更しない&lt;/li&gt;
	&lt;li&gt;アーカイブマッピングは、「i」ディレクトリ内へ出力する設定のままにする&lt;/li&gt;&lt;/ul&gt;
        &lt;/li&gt;
	&lt;li&gt;ブログトップの.htaccessに以下を追加。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;code&#34;&gt;
  RewriteCond %{HTTP_USER_AGENT} (iPhone|iPod)
  RewriteCond %{REQUEST_URI} !^/i/
  RewriteRule ^(.*)\.html$ /i/$1.html [L]
&lt;/pre&gt;

.htaccessの記述は、利用しているサーバーによっては上手く動かないかもしれません。またその場合、即座にサイト全体が500エラーになってしまうような事態も考えられます。.十分注意して作業を行ってください。
</description>
    </item>
    
    <item>
      <title>mt:ifStaticとmt:ifDynamicは似て非なる物。</title>
      <link>http://example.org/2008/000432.html</link>
      <pubDate>Fri, 01 Aug 2008 18:18:18 +0900</pubDate>
      
      <guid>http://example.org/2008/000432.html</guid>
      <description>
自分は、今見ているテストページがスタティックパブリッシングとダイナミックパブリッシングのどちらによる出力なのか、一目で分かるように、以下のような表示をさせておくことがあります。

&lt;pre class=&#34;code&#34;&gt;このテンプレートは&amp;lt;mt:ifDynamic&amp;gt;ダイナミック&amp;lt;mt:else&amp;gt;スタティック&amp;lt;/mt:ifDynamic&amp;gt;で構築されました。&lt;/pre&gt;

いくらPerl弄っても動作が直らないと思ったらPHPのほうに問題があった。何を言ってい(ry等と言うことにならないためですね。

さて、ここでちょっとした罠があります。&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/tags/ifdynamic.html&#34;&gt;mt:ifDynamic&lt;/a&gt;と対になるようなテンプレートタグ&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/tags/ifstatic.html&#34;&gt;mt:ifStatic&lt;/a&gt;では、このような書き方は出来ません。

&lt;pre class=&#34;code&#34;&gt;このテンプレートは&amp;lt;mt:ifStatic&amp;gt;スタティック&amp;lt;mt:else&amp;gt;ダイナミック&amp;lt;/mt:ifStatic&amp;gt;で構築されました。&lt;/pre&gt;

上記テンプレートは、スタティックでは期待通りに動きますが、ダイナミックでは以下のような出力になってしまいます。

&lt;blockquote&gt;このテンプレートはで構築されました。&lt;/blockquote&gt;

原因は、mt:ifStaticタグのPHPでの実装が、テンプレートタグとしてではなく、コメント(のような)扱いになっているためです。
&amp;lt;mt:ifStatic&amp;gt;・・・&amp;lt;/mt:ifStatic&amp;gt;の部分が、再構築より前に強制的にテンプレートから削除されてしまうんですね。なので、その中に何個mt:elseを書こうが、全部消えてしまうわけです。mt:ignoreと同じですね。

これはおそらくダイナミックパブリッシングでは、ページビューごとに構築が行われるため、より細部の高速化を重視しているものかと思われます。mt:ifStaticとmt:ifDynamicで非対称な動作となっているのでちょっと違和感がありますが、上手く使い分けると良いと思います。</description>
    </item>
    
    <item>
      <title>golf</title>
      <link>http://example.org/2008/000431.html</link>
      <pubDate>Mon, 28 Jul 2008 13:18:23 +0900</pubDate>
      
      <guid>http://example.org/2008/000431.html</guid>
      <description>
iPhoneにカードゲームを入れているのだが、その中のゴルフが面白い。
一人詰め麻雀に近い感覚で、さくっと楽しめる。

1 2
12 123
112 2
122 13
123 24
1223 1234

3 24
34 2345
334 24
345 246
3345 取れない
3445 23456
3456 2457
　aa
 </description>
    </item>
    
    <item>
      <title>iPhoneに感じるワクワク感の正体が判明した。</title>
      <link>http://example.org/2008/000430.html</link>
      <pubDate>Fri, 25 Jul 2008 23:40:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000430.html</guid>
      <description>
購入以来、それはもう指紋の跡が消える暇が無いほど、むしろ俺の指紋が消えちまうんじゃないかと思うくらい触りまくってるiPhoneですが、最高です。
バッテリーもとりあえず普段の会社往復の間は持つようだしアプリは楽しいしとりあえず生活圏ではwi-fiか3Gのどちらかは拾えるし余りに楽しいのでアプリ開発したくなって金無いのに真剣にMacBookの購入を検討し始めたりしてるわけです。

で、ですね。なんか、単純に外でウェブに繋がるとか、iPodと電話が一緒になったとか、そういう個々の具体的な機能についてとは、まったく別の次元のワクワク感を、iPhoneを触るたんびに感じるんですよ。

だって不思議じゃないですか?
あの愛想の無い、ともすれば上下間違えてスリープボタン押せなかったりするのっぺらぼうなデザインのクセに、ひとたびロック解除すれば触る撫ぜる傾ける音が出る話す震える表示する移動する、と、あらゆる手段でのインターフェイスが提供されていて、およそコンピュータに出来そうな事ならいつ何時でも反応してくれる。
それなのに電源切れば、ほとんどただの板。
このギャップにスゲエワクワクするんです。


そのワクワク感の正体が今日分かりました。気づきました。
iPhoneって&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E6%9D%B1%E4%BA%AC%E6%8E%A2%E5%81%B5%E5%9B%A3&#34;&gt;東京探偵団&lt;/a&gt;に出てきた「CJカード」を現実にしてしまったんだな、と。

東京探偵団ってのは「ギャラリーフェイク」や古くは「さすがの猿飛」「GU-GUガンモ」の作者の細野不二彦が書いていた、ホモの少年と守銭奴の少女とマゾの少年で構成される探偵事務所が超巨大財閥の金の力を後ろ盾にホモの中年が起こす事件を金の力で解決するという内容の傑作マンガです。
wikipediaによると連載は&#39;85-&#39;87年ですので、当時自分は小6くらいで読んでたんでしょうか。

そのマンガの中で、探偵団の一人が落とした探偵団専用のスペシャルクレジットカード「CJカード」を貧しい家出兄妹が拾う、という話があるのですが、そこで描かれるカードの機能がとにかく凄いんですよ。
クレジットカードとして勿論最強。何しろ日本に10枚と無い超スペシャルカード。限度額無限。取り出した瞬間即VIP待遇。
そして、ここが大事なのですが、一見ただのクレジットカードなのに、ちょっとカードの端を触って操作すると、音楽が聴ける、ファミコンが出来る、ショッピングも出来る、テレカにもなる、位置情報も確認できる、お父さんに会いたいとカードに話しかければ、居場所を音声で答えてくれる。なんだか分からないくらいハイテクな色々が詰め込まれた超高機能カード。
このエピソードの肝は、ただのカードなのに、家出兄妹の希望を次から次へと叶えていくという、そのファンタジーにあったと思います。そこで描かれていたものは、まさに「魔法のカード」でした。子供心に凄く憧れ、何度も読み返したことを今でも覚えています。


そして20年が過ぎ、iPhoneが今、手の中にあります。
ゲーム、音楽、電話。加速度センサー、GPS、そしてマルチタッチディスプレイ...。20年前のマンガに登場したファンタジー、子供だった当時の自分が憧れた魔法のほとんどが、この板状の小さいボディに実現されています。これは、ワクワクせざるを得ませんよね。

子供の頃のそんな記憶を思い出しながら、ぼーっと黒いiPhoneを眺めていると、これって本当「魔法のカード」と呼ぶにふさわしい代物だと思えてきてしまいます。そりゃカードと呼ぶには少々分厚くて大雑把ですが、少なくとも、電話の受話器から発展してきた携帯電話のデザインと比べて強いてどちらかといえば、間違いなくカードでしょう。

ぱっと見は何も出来なさそうなのに、ちょっと触るだけで万能的に要求に答えてくれるという感覚。
これは、10キーのついた受話器の末裔たちからは絶対に感じ取ることの出来ない、特別な快楽なんじゃないかな、と思います。

&lt;iframe src=&#34;http://rcm-jp.amazon.co.jp/e/cm?t=blogaklaswadc-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=484010526X&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>驚くほどあっさりとiPhoneをGetした。</title>
      <link>http://example.org/2008/000429.html</link>
      <pubDate>Tue, 22 Jul 2008 23:35:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000429.html</guid>
      <description>
そう、それは三日前の土曜日。驚くほどあっさりとiPhoneを入手できました。イエー。バッバッ。
発売フィーバー直後、遅れて何件か量販店など回ってみたものの、カスリもしなかったので「これは厳しいな」と思っていましたところ。

発売から一週間後となる先週末。
友人と遊ぶ予定もあって朝から開店待ちをするわけにも行かず、iPhoneを入手出来るのは当分先だなと諦めていた三連休初日の午後5時過ぎ。場所は23区内の某駅前。
お遊びも一段落、これから飲みに行くぞ、という時に、ちょっとお金を下ろしに銀行に寄ったんですよ。
で、その隣か隣の隣にソフトバンクショップがあったので、冷やかし半分で店員に聞いてみました。

「iPhoneの在庫はありますか」
「ありません」

当然の答えが返ってきました。ですよねー。
おおう。これで終戦。とも思ったのですが、明日以降のリサーチのために、入荷数や行列の様子などを店員さんに聞いてみました。すると、

「Softbank端末からの機種変更でしょうか?」

逆に質問が帰ってきました。
質問を質問で返すんじゃねえぞとも思ったのですが、そこは&lt;del datetime=&#34;2008-07-22T23:11:02+09:00&#34;&gt;チキン&lt;/del&gt;大人な自分なので

「いえ、iPhone目当てで他キャリアからソフトバンクさんに乗り換えようと決心しております!」

とかそんなことを言ってみました。すると、おおなんということでしょう。店員さん、急に張り切って
「予約分のキャンセルが無いか、電話で確認してみますので、ちょっとお待ちいただけますかー」
とか言いつつどこかへ走っていきます。

あれ、なにこの展開。
大昔には、新規ゼロ円機種変万円なんて時代もあったけど、今でもそんなメソッド使えるの?とgkbrしながら待つこと数分。

「16Gのブラックでよろしかったでしょうかー」
「2階の契約カウンターでお待ちいただけますかー」

なんと。ktkr。

後はあっという間でした。MNPの手続きから何から面倒見てもらって、30分程度で俺の手元に俺のアクティベーション済みの俺のiPhoneが。
飲み会を半分すっぽかしてしまった友人には申し訳なかったが(合流後iPhoneネタで盛り上がったので良しとする)、こんな棚ボタでiPhoneをGetできた自分は超ラッキーだと思います。イエー。バッバッ。

結論としてはWinWinの関係が大事だよねービジ☆ネス、というお話でした。</description>
    </item>
    
    <item>
      <title>iPhoneから投稿。</title>
      <link>http://example.org/2008/000428.html</link>
      <pubDate>Sat, 19 Jul 2008 22:33:07 +0900</pubDate>
      
      <guid>http://example.org/2008/000428.html</guid>
      <description>
モバイルミー</description>
    </item>
    
    <item>
      <title>googleの面接のパズルを颯爽と解いてみた。</title>
      <link>http://example.org/2008/000427.html</link>
      <pubDate>Thu, 17 Jul 2008 23:45:13 +0900</pubDate>
      
      <guid>http://example.org/2008/000427.html</guid>
      <description>&lt;pre&gt;
とりあえず、(1)から(13)まで番号を振る
(1)(2)(3)(4)と(5)(6)(7)(8)を天秤に乗せる

傾いたら
    残りの(9)-(13)は本物
    (1)(2)(3)(5)(6)と(9)(10)(11)(12)(13)を天秤に載せる
    傾いたら
        ここで偽者が重いか軽いかが判明
        かつ、一回目の結果を考えると、(1)(2)(3) OR (5)(6) のいずれに偽者が含まれるかも判明
        (1)(2)(3)に偽者が含まれるなら
            (1)と(2)を比較。
        (5)(6)に偽者が含まれる
            (5)と(6)を比較
    傾かなかったら
        (4)(7)と(12)(13)を比較
        傾いたら
            偽者が重いか軽いかが分かる。
            かつ、一回目の結果を考えれば、(4)と(7)のどちらが重いか分かるので、判定可能
        傾かなかったら
            (8)が偽者(重いか軽いかは分からず)
傾かなかったら
    残りの(9)-(13)に偽者が含まれる。(1)から(8)は本物
    (1)(2)(3)と(9)(10)(11)を天秤に
    傾いたら
        偽者が重いか軽いかが分かる
        (9)と(10)を天秤に
    傾かなかったら
        (12)(13)のいずれかが偽者
        (1)と(12)を天秤に
&lt;/pre&gt;

で、perlで書いてみた。

&lt;pre class=&#34;code&#34;&gt;
#!/usr/bin/perl
use strict;
sub which_is_heavy {
    my ($left, $right) = @_;

    #この辺は本来ならブラックボックス
    my ($left_mass, $right_mass);
    map { $left_mass += $_ } @$left;
    map { $right_mass += $_ } @$right;

    return $left_mass &gt; $right_mass    ? &#39;left&#39;
            : $left_mass &lt; $right_mass ? &#39;right&#39;
            :                            &#39;balanced&#39;;
}
 
sub get_fake_from_three {
    #偽者が重いか軽いか分かってれば3つのコインから一発で偽者を割り出せるよ関数
    my ($fake, @coins) = @_;
    if ($coins[0] &gt; $coins[1] ) {
        return $fake eq &#39;heavy&#39; ? 0 : 1;
    }
    elsif ( $coins[0] &lt; $coins[1] ) {
        return $fake eq &#39;heavy&#39; ? 1 : 0;
    }
    else {
        return 2;
    }
}
 
sub get_fake {
    my @c = @_;
    my $first_result = which_is_heavy( [ @c[0..3] ] ,[ @c[4..7] ] );
    if ($first_result eq &#39;balanced&#39; ) {
        #0-7は本物
        my $second_result = which_is_heavy( [@c[0..2]], [@c[8..10]] );
        if ($second_result eq &#39;balanced&#39; ) {
            #11,12が偽者
            my $third_result = which_is_heavy( [ $c[0] ], [ $c[11] ]);
            return $third_result eq &#39;balanced&#39; ? 12 : 11;
        }
        else {
            #8-10に偽者かつ重いか軽いかが判明
            my $fake = $second_result eq &#39;left&#39; ? &#39;light&#39; : &#39;heavy&#39;;
            return 8 + get_fake_from_three($fake, @c[8..10]);
        }
    }
    else {
        #8-12は本物
        my $second_result = which_is_heavy( [$c[0],$c[1],$c[2],$c[4],$c[5]],[@c[8..12]] );
        if ($second_result eq &#39;balanced&#39; ) {
            my $third_result = which_is_heavy( [$c[3], $c[6]], [@c[8..9]] );
            if ( $third_result eq &#39;left&#39;) {
                return $first_result eq &#39;left&#39; ? 3 : 6;
            }
            elsif ( $third_result eq &#39;right&#39; ) {
                return $first_result eq &#39;left&#39; ? 6 : 3;
            }
            else {
                return 7;
            }
        }
        else {
            my $fake = $second_result eq &#39;left&#39; ? &#39;heavy&#39; : &#39;light&#39;;
            if ( ( $fake eq &#39;heavy&#39; &amp;&amp; $first_result eq &#39;left&#39; )
              || ( $fake ne &#39;heavy&#39; &amp;&amp; $first_result ne &#39;left&#39; ) ) {
                return get_fake_from_three( $fake, @c[0..2] );
            }
            else {
                if ( $fake eq &#39;heavy&#39; ) {
                    return $c[4] &gt; $c[5] ? 4 : 5;
                }
                else {
                    return $c[4] &gt; $c[5] ? 5 : 4;
                }
            }
        }
    }
}
 
print get_fake( 3,2,2,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 0\n&#34;;
print get_fake( 2,3,2,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 1\n&#34;;
print get_fake( 2,2,3,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 2\n&#34;;
print get_fake( 2,2,2,3,2,2,2,2,2,2,2,2,2 ) . &#34; will be 3\n&#34;;
print get_fake( 2,2,2,2,3,2,2,2,2,2,2,2,2 ) . &#34; will be 4\n&#34;;
print get_fake( 2,2,2,2,2,3,2,2,2,2,2,2,2 ) . &#34; will be 5\n&#34;;
print get_fake( 2,2,2,2,2,2,3,2,2,2,2,2,2 ) . &#34; will be 6\n&#34;;
print get_fake( 2,2,2,2,2,2,2,3,2,2,2,2,2 ) . &#34; will be 7\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,3,2,2,2,2 ) . &#34; will be 8\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,3,2,2,2 ) . &#34; will be 9\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,3,2,2 ) . &#34; will be 10\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,2,3,2 ) . &#34; will be 11\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,2,2,3 ) . &#34; will be 12\n&#34;;
 
print get_fake( 1,2,2,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 0\n&#34;;
print get_fake( 2,1,2,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 1\n&#34;;
print get_fake( 2,2,1,2,2,2,2,2,2,2,2,2,2 ) . &#34; will be 2\n&#34;;
print get_fake( 2,2,2,1,2,2,2,2,2,2,2,2,2 ) . &#34; will be 3\n&#34;;
print get_fake( 2,2,2,2,1,2,2,2,2,2,2,2,2 ) . &#34; will be 4\n&#34;;
print get_fake( 2,2,2,2,2,1,2,2,2,2,2,2,2 ) . &#34; will be 5\n&#34;;
print get_fake( 2,2,2,2,2,2,1,2,2,2,2,2,2 ) . &#34; will be 6\n&#34;;
print get_fake( 2,2,2,2,2,2,2,1,2,2,2,2,2 ) . &#34; will be 7\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,1,2,2,2,2 ) . &#34; will be 8\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,1,2,2,2 ) . &#34; will be 9\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,1,2,2 ) . &#34; will be 10\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,2,1,2 ) . &#34; will be 11\n&#34;;
print get_fake( 2,2,2,2,2,2,2,2,2,2,2,2,1 ) . &#34; will be 12\n&#34;;
 
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>MTと2038年問題</title>
      <link>http://example.org/2008/000426.html</link>
      <pubDate>Wed, 02 Jul 2008 12:30:48 +0900</pubDate>
      
      <guid>http://example.org/2008/000426.html</guid>
      <description>
&lt;a href=&#34;http://www.koikikukan.com/archives/2008/07/02-020202.php&#34;&gt;小粋空間: MTDate タグ・モディファイア詳説&lt;/a&gt;

&lt;a href=&#34;http://ja.wikipedia.org/wiki/2038%E5%B9%B4%E5%95%8F%E9%A1%8C&#34;&gt;2038年問題 - Wikipedia&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>[mt.js]mt:tabを使ってみる</title>
      <link>http://example.org/2008/000425.html</link>
      <pubDate>Thu, 19 Jun 2008 17:16:53 +0900</pubDate>
      
      <guid>http://example.org/2008/000425.html</guid>
      <description>以下、Movable Type の管理画面内でタブ(同ウィンドウ内での一部画面の切り替え)を実現する場合のサンプルコードです。
以下コードを、ファイルに保存してalt-tmplディレクトリに「dashboard.tmpl」とかの名前で置くと動くと思います。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:setvarblock name=&amp;quot;page_title&amp;quot;&amp;gt;mt:tab test&amp;lt;/mt:setvarblock&amp;gt;
&amp;lt;mt:include name=&amp;quot;include/header.tmpl&amp;quot;&amp;gt;
 
&amp;lt;h2&amp;gt;サンプル1 : tab-container の骨格部分&amp;lt;/h2&amp;gt;
&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
#sample1 .hidden {
    display: inline !important;
    color: #aaa;
}
&amp;lt;/style&amp;gt;
&amp;lt;span id=&amp;quot;sample1&amp;quot; mt:delegate=&amp;quot;tab-container&amp;quot;&amp;gt;
    &amp;lt;span mt:tab=&amp;quot;foo&amp;quot; mt:command=&amp;quot;select-tab&amp;quot;&amp;gt;foo&amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab=&amp;quot;bar&amp;quot; mt:command=&amp;quot;select-tab&amp;quot;&amp;gt;bar&amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab=&amp;quot;buz&amp;quot; mt:command=&amp;quot;select-tab&amp;quot;&amp;gt;buz&amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab-content=&amp;quot;foo&amp;quot;&amp;gt;
        foofoofoo
    &amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab-content=&amp;quot;bar&amp;quot;&amp;gt;
        barbarbar
    &amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab-content=&amp;quot;buz&amp;quot;&amp;gt;
        buzbuzbuz
    &amp;lt;/span&amp;gt;
&amp;lt;/span&amp;gt;
&amp;lt;mt:include name=&amp;quot;include/footer.tmpl&amp;quot;&amp;gt;&lt;/pre&gt;

このサンプルは敢えてタブらしくない動きにしてます。見ての通り、JavaScriptは一切書かずに動きます。

&lt;form mt:asset-id=&#34;83&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;mttab.png&#34; src=&#34;http://blog.aklaswad.com/images/mttab.png&#34; width=&#34;354&#34; height=&#34;108&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/form&gt;

先頭の「foo bar buz」の部分をクリックすると、それに応じて後続の部分のstyle属性が変化し、見た目も変わると思います。firebugなどで各要素のclass属性の変化を追ってみてください。

大雑把な動作プロセスとしては、

&lt;ul&gt;
	&lt;li&gt;mt:delegate=&#34;tab-container&#34;が指定された要素の内側では&lt;/li&gt;
	&lt;li&gt;属性「mt:command=&#34;select-tab&#34;」が指定された要素がクリックされたら&lt;/li&gt;
	&lt;li&gt;その要素のmt:tab属性で指定されたタブのID(foo)を表示するように&lt;/li&gt;
	&lt;li&gt;mt:tab-content属性を持ち、そこに同じタブID(foo)が指定されている要素のclassから「hidden」を取り除き&lt;/li&gt;
	&lt;li&gt;mt:tab-content属性にタブID(foo)が指定されていない要素にはclass「hidden」を追加する&lt;/li&gt;
&lt;/ul&gt;

という動作になります。
MTの管理画面では事前に設定されているcssにより、「hidden」クラスは非表示となるので、タブらしい動作が実現できるというわけです。

以下、ちょっとだけcssを追加してみたバージョンです。お試し下さい。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:setvarblock name=&amp;quot;page_title&amp;quot;&amp;gt;mt:tab test&amp;lt;/mt:setvarblock&amp;gt;
&amp;lt;mt:include name=&amp;quot;include/header.tmpl&amp;quot;&amp;gt;
 
&amp;lt;h2&amp;gt;サンプル2 : css を加えてみる&amp;lt;/h2&amp;gt;
 
&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
#sample2 .tab {
    border: 1px solid #abc;
    cursor: pointer;
}
 
#sample2 .selected-tab {
    text-decoration: underline;
    color: #f00;
}
 
#sample2 .tab-container {
    border: 1px solid #678;
}
 
&amp;lt;/style&amp;gt;
&amp;lt;div id=&amp;quot;sample2&amp;quot; mt:delegate=&amp;quot;tab-container&amp;quot;&amp;gt;
    &amp;lt;span mt:tab=&amp;quot;foo&amp;quot; mt:command=&amp;quot;select-tab&amp;quot; class=&amp;quot;tab selected-tab&amp;quot;&amp;gt;foo&amp;lt;/span&amp;gt;
    &amp;lt;span mt:tab=&amp;quot;bar&amp;quot; mt:command=&amp;quot;select-tab&amp;quot; class=&amp;quot;tab&amp;quot;&amp;gt;bar&amp;lt;/span&amp;gt;
    &amp;lt;div class=&amp;quot;tab-container&amp;quot; mt:tab-content=&amp;quot;foo&amp;quot;&amp;gt;
        foofoofoo
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;tab-container hidden&amp;quot; mt:tab-content=&amp;quot;bar&amp;quot;&amp;gt;
        barbarbar
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
 
&amp;lt;mt:include name=&amp;quot;include/footer.tmpl&amp;quot;&amp;gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>TaggingHelperお試し版</title>
      <link>http://example.org/2008/000424.html</link>
      <pubDate>Thu, 29 May 2008 22:38:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000424.html</guid>
      <description>
Firefox限定ですが、プラグインをインストールせずに動作確認が出来るお試し版を用意してみました。
Movable Type のブログ記事を書く画面が開いている状態で、以下のコードを全選択コピーして、ブラウザのアドレスバーに直接貼り付けEnter、として実行してみてください。

MT4用。
&lt;textarea cols=&#34;80&#34;&gt;javascript:(function(){var th = document.createElement(&#39;div&#39;);th.id = &#39;tagging_helper_container&#39;;th.innerHTML = &#39;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://blog.aklaswad.com/tagginghelper.css&#34; type=&#34;text/css&#34; /&gt;&lt;script type=&#34;text/javascript&#34; src=&#34;http://blog.aklaswad.com/tagginghelper.js&#34;&gt;&lt;/script&gt;&lt;span id=&#34;taghelper_abc&#34; onclick=&#34;TaggingHelper.open(\&#39;abc\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;ABC&lt;/span&gt;&lt;span id=&#34;taghelper_count&#34; onclick=&#34;TaggingHelper.open(\&#39;count\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;freq&lt;/span&gt;&lt;span id=&#34;taghelper_match&#34; onclick=&#34;TaggingHelper.open(\&#39;match\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;match&lt;/span&gt;&lt;span id=&#34;taghelper_close&#34; onclick=&#34;TaggingHelper.close()&#34; class=&#34;taghelper_command&#34;&gt;close&lt;/span&gt;&lt;div id=&#34;tagging_helper_block&#34; style=&#34;display: none;&#34;&gt;&lt;/div&gt;&#39;;document.getElementById(&#39;tags-field&#39;).appendChild(th);})();&lt;/textarea&gt;

こちらはMT3用。
&lt;textarea cols=&#34;80&#34;&gt;javascript:(function(){var th = document.createElement(&#39;div&#39;);th.id = &#39;tagging_helper_container&#39;;th.innerHTML = &#39;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://blog.aklaswad.com/tagginghelper.css&#34; type=&#34;text/css&#34; /&gt;&lt;script type=&#34;text/javascript&#34; src=&#34;http://blog.aklaswad.com/tagginghelper3.js&#34;&gt;&lt;/script&gt;&lt;span id=&#34;taghelper_abc&#34; onclick=&#34;TaggingHelper.open(\&#39;abc\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;ABC&lt;/span&gt;&lt;span id=&#34;taghelper_count&#34; onclick=&#34;TaggingHelper.open(\&#39;count\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;freq&lt;/span&gt;&lt;span id=&#34;taghelper_match&#34; onclick=&#34;TaggingHelper.open(\&#39;match\&#39;)&#34; class=&#34;taghelper_command&#34;&gt;match&lt;/span&gt;&lt;span id=&#34;taghelper_close&#34; onclick=&#34;TaggingHelper.close()&#34; class=&#34;taghelper_command&#34;&gt;close&lt;/span&gt;&lt;div id=&#34;tagging_helper_block&#34; style=&#34;display: none;&#34;&gt;&lt;/div&gt;&#39;;document.getElementById(&#39;tag-field&#39;).appendChild(th);})();&lt;/textarea&gt;

動作が気に入ったら、是非プラグインをインストールして使ってみてください。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/tagginghelper.html&#34;&gt;プラグインのページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

ちなみに、IEでは上手く動きませんでした。残念。
というか、Firefoxはbody中にscript経由で突っ込まれたlinkタグも読み込んでしまうんですね。試してみたら動いたのでびっくりしました。
</description>
    </item>
    
    <item>
      <title>TaggingHelper0.3を公開します。</title>
      <link>http://example.org/2008/000423.html</link>
      <pubDate>Thu, 29 May 2008 16:15:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000423.html</guid>
      <description>
TaggingHelperの新しいバージョンを公開します。久しぶりの更新となりますね。

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;82&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/TaggingHelper.0.3.zip&#34;&gt;TaggingHelper.0.3.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/tagginghelper.html&#34;&gt;blog.aklaswad.com: TaggingHelper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

主な更新内容はこちら。

&lt;ul&gt;
	&lt;li&gt;タグ一覧を、使われている頻度順で表示するモードを追加した。&lt;/li&gt;
	&lt;li&gt;本文に含まれる文言のタグを抽出して表示するモードを追加した。&lt;/li&gt;
	&lt;li&gt;シングルクオートを含むタグが扱えない問題に対応した。指摘してくれたTrackback(774)さんありがとうございます。&lt;/li&gt;
        &lt;li&gt;タグの途中で改行してしまう問題に対応した。&lt;/li&gt;
&lt;/ul&gt;

&lt;ins datetime=&#34;2008-05-30T16:06:31+09:00&#34;&gt;内部構造をちょっと変更した結果、どうやらSafari、Operaなどのブラウザでも利用可能となっているようです。Windows版のSafari3.1.1、Opera
9.24で動作を確認しました。やったね!&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>CustomEditorButton2用ボタン追加プラグイン</title>
      <link>http://example.org/2008/000411.html</link>
      <pubDate>Fri, 02 May 2008 23:10:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000411.html</guid>
      <description>
拙作のCustomEditorButton2,使ってくれている方がいるみたいで大変嬉しいです。
以下のサイトでは、ボタン追加が出来るプラグインが配布されています。すばらしいですー。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://isly.sub.jp/kodaruma/2008/04/customeditorbutton2.html&#34;&gt;こだるま日和 - CustomEditorButton2 用のフォント色指定ボタンを作ってみた&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.tinybeans.net/blog/movabletypeplugin/ceb2-plusutility.html&#34;&gt;かたつむりくんのWWW | CEB2_plusUtility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

特に、「かたつむりくんのWWW」さんで配布されている&lt;a href=&#34;http://www.tinybeans.net/blog/movabletypeplugin/ceb2-plusutility.html&#34;&gt;CEB2_plusUtility&lt;/a&gt;はかなりゴージャスです。
dl/dt/ddタグの挿入や、引用元表示機能付きblockquoteボタンとかは、自分でも欲しくてそのうち作ろうと思っていたので、大変嬉しいです。

&lt;blockquote cite=&#34;http://www.tinybeans.net/blog/movabletypeplugin/ceb2-plusutility.html&#34;&gt;
&lt;p&gt;かたつむりくんのWWW | CEB2_plusUtility&lt;/p&gt;
&lt;p&gt;さらに、「引用元のURI + 改行 + 引用元のタイトル + 改行 + 引用文」という書式で書いて選択すると、引用元のURIをblockquote要素のcite属性に追加し、引用元のタイトルをblockquote要素のtitile属性に追加できます。&lt;/p&gt;
&lt;/blockquote&gt;

公開されているプラグインについては、&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;プラグインページ&lt;/a&gt;にも一覧を作って、適時アップデートしていきたいと思います。CEB2用プラグイン作ったよ公開するよ、という方は、トラックバックなどしていただけたら嬉しいです。

他にも、配布はしていないが、自分でボタン作って使っているよというエントリーもちらほら見かけました。
基本的には、そういう個人用にカスタマイズする使い方を想定しています。がんがん使ってくださいー。</description>
    </item>
    
    <item>
      <title>CustomEditorButton2用の追加プラグイン「EntryUtilButtons」作りました。</title>
      <link>http://example.org/2008/000410.html</link>
      <pubDate>Fri, 02 May 2008 22:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000410.html</guid>
      <description>
HTMLのマークアップ補助ではない系統のボタンもあれば便利だよな、と作ってみました。CustomEditorButton2プラグインと併用することで、ブログ記事編集画面に以下の3 つのボタンを追加します。

&lt;dl&gt;
&lt;dt&gt;&lt;form mt:asset-id=&#34;76&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;tag.png&#34; src=&#34;http://blog.aklaswad.com/images/tag.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;タギングボタン&lt;/dt&gt;
&lt;dd&gt;本文中から単語を選択した状態でこのボタンを使うと、選択部分をタグ欄に追加します。普段タグ入力補完ばかりに頼っていたら、タグクラウドの成長が止まってしまった、という症状に効きます。&lt;/dd&gt;
&lt;dt&gt;&lt;form mt:asset-id=&#34;77&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;now.png&#34; src=&#34;http://blog.aklaswad.com/images/now.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;時間あわせボタン&lt;/dt&gt;
&lt;dd&gt;エントリーの公開日欄を、現在の時刻に合わせます。エントリーを書いていたら日付が変わってしまった。しかし昨日の日付が公開日となるのは納得できない!という場合に便利です。&lt;/dd&gt;
&lt;dt&gt;&lt;form mt:asset-id=&#34;78&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;kill_tags.png&#34; src=&#34;http://blog.aklaswad.com/images/kill_tags.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;タグ削除ボタン&lt;/dt&gt;
&lt;dd&gt;選択範囲に含まれるHTMLタグっぽいもの(&lt;strong&gt;&amp;lt;&lt;/strong&gt;と&lt;strong&gt;&amp;gt;&lt;/strong&gt;で挟まれた部分)をごっそり削除します。MTデフォルトのリストボタンでリストを作成中、後から追加を行いたいが自分でliとか書きたくない、でもアンドゥも出来ない、なんて場合、このボタンを使って一度マークアップ無しの状態に戻し、行を追加した後に再度リストボタンを適用する、なんて使い道が考えられます。リッチテキストフォーマットでも各種の文字装飾の削除に利用できますが、改行まで消し飛んでしまうので諸刃の剣。&lt;/dd&gt;
&lt;/dl&gt;


このプラグインを利用するためには、同じ環境に&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;CustomEditorButton2&lt;/a&gt;がインストールされている必要があります。
ダウンロードする: &lt;form mt:asset-id=&#34;79&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/EntryUtilButtons0.1.zip&#34;&gt;EntryUtilButtons0.1.zip&lt;/a&gt;&lt;/form&gt;
</description>
    </item>
    
    <item>
      <title>Pure MTML で NabeAzz</title>
      <link>http://example.org/2008/000409.html</link>
      <pubDate>Sun, 13 Apr 2008 23:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000409.html</guid>
      <description>以下、解説。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:ignore&amp;gt;&amp;lt;!-- 単純な線形合同法で乱数を生成。 --&amp;gt;&amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvarblock name=&amp;quot;seed&amp;quot;&amp;gt;&amp;lt;mt:date format=&amp;quot;%S&amp;quot;&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
&amp;lt;mt:setvartemplate name=&amp;quot;rnd&amp;quot;&amp;gt;
    &amp;lt;mt:getvar setvar=&amp;quot;seed&amp;quot; name=&amp;quot;seed&amp;quot; op=&amp;quot;*&amp;quot; value=&amp;quot;13&amp;quot; /&amp;gt;
    &amp;lt;mt:getvar setvar=&amp;quot;seed&amp;quot; name=&amp;quot;seed&amp;quot; op=&amp;quot;+&amp;quot; value=&amp;quot;5&amp;quot; /&amp;gt;
    &amp;lt;mt:getvar setvar=&amp;quot;seed&amp;quot; name=&amp;quot;seed&amp;quot; op=&amp;quot;%&amp;quot; value=&amp;quot;24&amp;quot; /&amp;gt;
    &amp;lt;mt:getvar name=&amp;quot;seed&amp;quot;&amp;gt;
&amp;lt;/mt:setvartemplate&amp;gt;&lt;/pre&gt;

最初のこのブロックは、mt:setVarTemplateを使ってrndというルーチンを作成しています。
内容は、線形合同法という非常に素朴な乱数生成ルーチンです。

&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E7%B7%9A%E5%BD%A2%E5%90%88%E5%90%8C%E6%B3%95&#34;&gt;線形合同法 - Wikipedia&lt;/a&gt;

MTMLのみで乱数作れないかと思い立って調べてみたところ、なんだか簡単そうなので試してみました。今回のナベアツ問題なら精度の高い乱数は必要ないので、こんなのでも良いのではないかと思います。上限が24で最大周期も24、という貧弱貧弱なルーチンです。数字を調整すればもう少し良いものになるかもしれません。
乱数のシード(初期値)の値はmt:date(再構築が実行された時間を取得するタグ)からとっています。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:ignore&amp;gt;&amp;lt;!-- 配列の初期化はsetvar一発で。 --&amp;gt;&amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvar name=&amp;quot;aho&amp;quot; value=&amp;quot;www&amp;quot;:&amp;quot;ktkr&amp;quot;:&amp;quot;ぶーん&amp;quot;:&amp;quot;だわよのさ&amp;quot;:&amp;quot;へっぺふむーん&amp;quot;&amp;gt;
&amp;lt;mt:setvar name=&amp;quot;dog&amp;quot; value=&amp;quot;ダワン&amp;quot;:&amp;quot;キャイーン&amp;quot;:&amp;quot;キャンキャン&amp;quot;:&amp;quot;バウウウ&amp;quot;:&amp;quot;ガルルル&amp;quot;&amp;gt;
&lt;/pre&gt;

あらかじめ配列に、アホ発言と犬発言を準備しておきます。ちょっと変な記法の解説は&lt;a href=&#34;http://blog.aklaswad.com/2008/000358.html&#34;&gt;こちら&lt;/a&gt;。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:ignore&amp;gt;&amp;lt;!-- 指定された配列からランダムに要素をとってくる。 --&amp;gt;&amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvartemplate name=&amp;quot;get_suffix&amp;quot;&amp;gt;
    &amp;lt;mt:setvarblock name=&amp;quot;idx&amp;quot;&amp;gt;&amp;lt;mt:getvar name=&amp;quot;rnd&amp;quot; trim=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
    &amp;lt;mt:setvarblock name=&amp;quot;max&amp;quot;&amp;gt;&amp;lt;mt:getvar name=&amp;quot;$target&amp;quot; function=&amp;quot;count&amp;quot;&amp;gt;&amp;lt;/mt:setvarblock&amp;gt;
    &amp;lt;mt:getvar setvar=&amp;quot;idx&amp;quot; name=&amp;quot;idx&amp;quot; op=&amp;quot;%&amp;quot; value=&amp;quot;$max&amp;quot;&amp;gt;
    &amp;lt;mt:getvar name=&amp;quot;$target&amp;quot; index=&amp;quot;$idx&amp;quot;&amp;gt;
&amp;lt;/mt:setvartemplate&amp;gt;&lt;/pre&gt;

ここで、またmt:setVarTemplateを使ってルーチンを作成しています。
このルーチンでは、「target」という変数に指定された名前の変数から、要素を一つ取り出して出力する、という作業を行っています。
ポイントはここでしょうか。「mt:getvar name=&#34;$target&#34; index=&#34;$idx&#34;」。
MTのテンプレートエンジンでは、タグそのものの処理が行われる前の段階で、モディファイア内の「$」記法の変数の展開が行われます。そのため、一部のタグに対しては、変数の名前を別の変数に入れて渡す、ということが可能となっています。
この場合では、「target」変数に「aho」または「dog」という文字列を入れておくと、まずテンプレートのパーサーが「$target」を展開してahoなどの文字列に置き換え、それを更にmt:getVarタグが解釈して、aho変数の中身を参照しに行ってくれる、というカラクリです。
これが出来るのは、モディファイアとして変数名を受け取ることが出来る一部のタグのみですが、応用するとかなりパワフルなことが出来るのではないかと思います。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:ignore&amp;gt;&amp;lt;!-- 以下、出力用ループ --&amp;gt;&amp;lt;/mt:ignore&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;mt:for from=&amp;quot;1&amp;quot; to=&amp;quot;40&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;mt:getvar name=&amp;quot;__counter__&amp;quot;&amp;gt;
    &amp;lt;mt:unless name=&amp;quot;__counter__&amp;quot; op=&amp;quot;%&amp;quot; value=&amp;quot;5&amp;quot;&amp;gt;
        &amp;lt;mt:setvar name=&amp;quot;target&amp;quot; value=&amp;quot;dog&amp;quot;&amp;gt;
        &amp;lt;mt:getvar name=&amp;quot;get_suffix&amp;quot;&amp;gt;
    &amp;lt;/mt:unless&amp;gt;
    &amp;lt;mt:unless name=&amp;quot;__counter__&amp;quot; op=&amp;quot;%&amp;quot; value=&amp;quot;3&amp;quot;&amp;gt;
        &amp;lt;mt:setvar name=&amp;quot;target&amp;quot; value=&amp;quot;aho&amp;quot;&amp;gt;
        &amp;lt;mt:getvar name=&amp;quot;get_suffix&amp;quot;&amp;gt;
    &amp;lt;mt:elseif name=&amp;quot;__counter__&amp;quot; like=&amp;quot;3&amp;quot;&amp;gt;
        &amp;lt;mt:setvar name=&amp;quot;target&amp;quot; value=&amp;quot;aho&amp;quot;&amp;gt;
        &amp;lt;mt:getvar name=&amp;quot;get_suffix&amp;quot;&amp;gt;
    &amp;lt;/mt:unless&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/mt:for&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/pre&gt;

最後に出力用にループを回しています。条件分岐はそんなに変なことはしてません。testモディファイアを使うともっと短くなるんだろうけど、使い方がわからないので諦めました。

&lt;h3&gt;TechMemo&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;_math_operationに直接式をかけると良いと思った。op=&#34;($aho + $dog) * $rnd&#34;みたいな。駄目なら、配列で渡せるというのはどうだろう。op=&#34;+&#34;,&#34;*&#34; value=&#34;$aho&#34;,&#34;5&#34;のように。&lt;/li&gt;
	&lt;li&gt;配列orハッシュ変数の展開は今のところgetvarの機能となっているが、これはbuild側でやるべきじゃないだろうか。&lt;/li&gt;
	&lt;li&gt;mt:date format=&#34;%s&#34;って何で無いんだ?小文字で、0埋め無しの秒を取れると思ってたら取れなかった。ここで一番嵌った。需要が無いから?&lt;/li&gt;
        &lt;li&gt;&amp;lt;mt:getvar setvar=&#34;seed&#34; name=&#34;seed&#34; op=&#34;*&#34; value=&#34;13&#34;&amp;gt;ここのモディファイアの並べ方はちょっと悩んだ(動作的には関係ないが、読みやすさの意味で)が、最終的にはc、perl系の言語っぽく並べるのが一番わかり易いと思った。「$seed = $seed * 13」 と書くのと同じ並び。mt:var系列は複雑で把握しきれない。もっと短く書けた気がする。。。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mt.jsでタブを作る</title>
      <link>http://example.org/2008/000408.html</link>
      <pubDate>Wed, 09 Apr 2008 18:25:46 +0900</pubDate>
      
      <guid>http://example.org/2008/000408.html</guid>
      <description>
&lt;html&gt;
&lt;head&gt;
    &lt;script type=&#34;text/javascript&#34; src=&#34;http://grublo.rz/~asawada/cgi-bin/415b/working_copy/mt-static/js/mt_core_compact.js?v=4.15b1-en&#34;&gt;&lt;/script&gt;
    &lt;script type=&#34;text/javascript&#34; src=&#34;http://grublo.rz/~asawada/cgi-bin/415b/working_copy/mt-static/js/tc.js&#34;&gt;&lt;/script&gt;
    &lt;script type=&#34;text/javascript&#34; src=&#34;http://grublo.rz/~asawada/cgi-bin/415b/working_copy/mt-static/mt.js&#34;&gt;&lt;/script&gt;

    &lt;script type=&#34;text/javascript&#34;&gt;
        /* &lt;![CDATA[ */
        CMSScriptURI = &#39;/~asawada/cgi-bin/415b/working_copy/mt.cgi&#39;;
        ScriptURI = &#39;/~asawada/cgi-bin/415b/working_copy/mt.cgi&#39;;
        ScriptBaseURI = &#39;&#39;;
        StaticURI = &#39;/~asawada/cgi-bin/415b/working_copy/mt-static/&#39;;
        HelpBaseURI = &#39;http://www.movabletype.org/documentation/&#39;;
        /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div mt:delegate=&#34;tab-container&#34;&gt;
    &lt;ul&gt;
        &lt;li class=&#34;tab selected-tab&#34;&#34; mt:tab=&#34;aaaa&#34; mt:command=&#34;select-tab&#34;&gt;&lt;a href=&#34;javascript:void(0)&#34;&gt;&lt;span&gt;aaaa&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li class=&#34;tab&#34; mt:tab=&#34;bbbb&#34; mt:command=&#34;select-tab&#34;&gt;&lt;a href=&#34;javascript:void(0)&#34;&gt;&lt;span&gt;bbbb&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div id=&#34;aaaa-panel&#34; class=&#34;control-panel&#34; mt:tab-content=&#34;aaaa&#34;&gt;
        aoiuaoiuaoiua
    &lt;/div&gt;
    &lt;div id=&#34;bbbb-panel&#34; class=&#34;control-panel hidden&#34; mt:tab-content=&#34;bbbb&#34;&gt;
        boubuoiuboiub
    &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
    /* &lt;![CDATA[ */
        App.bootstrapInline( false );
    /* ]]&gt; */
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title>MT4LP5に参加してきました。</title>
      <link>http://example.org/2008/000406.html</link>
      <pubDate>Sun, 06 Apr 2008 14:20:27 +0900</pubDate>
      
      <guid>http://example.org/2008/000406.html</guid>
      <description>
非常に楽しく、また有意義な時間を過ごせました。&lt;a href=&#34;http://www.koikikukan.com/&#34;&gt;小粋空間&lt;/a&gt;さんの最適化話が特に興味深かったです。
アフターパーティーでも、色々な方から貴重なお話を沢山聞くことができました。
またこのような機会があれば参加したいですねー。

以下、役に立たない雑感

&lt;ul&gt;
	&lt;li&gt;アフターパーティーが手羽先屋なのに手羽先の登場が遅く、俺の手羽先スキルが全く注目されなかったのが心残り&lt;/li&gt;
	&lt;li&gt;タイトルのMT4LP5と開催日の4月5日がシンクロしていたことにさっき気づいた&lt;br /&gt;via &lt;a href=&#34;http://www.tohdamikio.com/2008/04/mt41mt4lp5mt41c_a127.html&#34;&gt;http://www.tohdamikio.com/2008/04/mt41mt4lp5mt41c_a127.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;名刺は絶対に必要&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>遺言状が簡単に作成できるMTプラグイン「TestameMT」</title>
      <link>http://example.org/2008/000405.html</link>
      <pubDate>Tue, 01 Apr 2008 12:00:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000405.html</guid>
      <description>
遺言状の作成を簡単に行えるMTプラグイン「TestameMT」を開発しました!

&lt;h3&gt;主な機能&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;遺言状作成機能&lt;/dt&gt;
&lt;dd&gt;&lt;form mt:asset-id=&#34;72&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/images/testament1.png&#34;&gt;&lt;img alt=&#34;testament1.png&#34; src=&#34;http://blog.aklaswad.com/assets_c/2008/04/testament1-thumb-100x134.png&#34; width=&#34;100&#34; height=&#34;134&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/a&gt;&lt;/form&gt;
簡単なフォームを埋めるだけで遺言状の文面を自動作成します。
もちろん、文面は豊富なテンプレートタグでカスタマイズ可能です。&lt;br clear=&#34;both&#34; /&gt;
&lt;/dd&gt;
&lt;dt&gt;遺産カート機能&lt;/dt&gt;
&lt;dd&gt;
Movable Type のアイテム機能と連携。遺産一覧をアイテムとして登録し、ドラッグ&amp;ドロップで簡単に分配を行えます。Paypalとの連携も可能です。
&lt;/dd&gt;
&lt;dt&gt;弁護士Approval機能&lt;/dt&gt;
&lt;dd&gt;弁護士Approval機能を使えば、作成した遺言状の弁護士による確認も半径ワンクリックで行えます。&lt;/dd&gt;
&lt;dt&gt;死亡日投稿機能&lt;/dt&gt;
&lt;dd&gt;
ご臨終に際して、自動的に遺言状がインターネット経由で全世界に公開されます。これにより、不逞の輩による改竄の心配が無くなります。
&lt;form mt:asset-id=&#34;73&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;testamemt2.png&#34; src=&#34;http://blog.aklaswad.com/images/testamemt2.png&#34; width=&#34;259&#34; height=&#34;216&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/form&gt; 
&lt;/dd&gt;
&lt;dt&gt;斎場予約機能&lt;/dt&gt;
&lt;dd&gt;
GoogleMapと連携し、最寄りの斎場や焼き場を予約可能。案内状の作成も簡単です。
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;
&lt;del datetime=&#34;2008-04-02T00:11:05+09:00&#34;&gt;現在、ダウンロードサイトを準備中です。急なご利用が必要な方はご相談ください。&lt;/del&gt;
やんごとなき事情のため公開を無期延期します。
</description>
    </item>
    
    <item>
      <title>CustomEditorButton2.0.21 でIE7に対応しました。</title>
      <link>http://example.org/2008/000404.html</link>
      <pubDate>Wed, 12 Mar 2008 23:36:48 +0900</pubDate>
      
      <guid>http://example.org/2008/000404.html</guid>
      <description>
IE7に対応しました。わりと上手く出来ました。mt_core.jsは良く出来てますね。ふう。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;blog.aklaswad.com: CustomEditorButton2&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>CustomEditorButton2 0.2 を公開します。</title>
      <link>http://example.org/2008/000402.html</link>
      <pubDate>Sun, 09 Mar 2008 18:15:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000402.html</guid>
      <description>
とりあえずバージョンアップです。ダウンロードは以下のページからお願いします。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;blog.aklaswad.com: CustomEditorButton2&lt;/a&gt;

変更点は、

&lt;ul&gt;
	&lt;li&gt;利用頻度の低いボタンを退避させる「ポケット」を追加した&lt;/li&gt;
	&lt;li&gt;ボタンのドラッグ時などの見た目の改善&lt;/li&gt;
&lt;/ul&gt;

など。また、ボタン作成用の機能として、以下の拡張を行いました。

&lt;ul&gt;
	&lt;li&gt;画像を用意しなくてもボタンを作成できるようにした&lt;/li&gt;
	&lt;li&gt;ボタン作成時に利用可能なオプション引数を追加&lt;/li&gt;
	&lt;li&gt;コールバックの戻り値の処理の拡張&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Writting Custom Button Plugins</title>
      <link>http://example.org/2008/000399.html</link>
      <pubDate>Sun, 02 Mar 2008 15:38:49 +0900</pubDate>
      
      <guid>http://example.org/2008/000399.html</guid>
      <description>プラグインを作成することで、CustomEditorButton2に任意のボタンを追加できます。
プラグインは通常の Movable Type のプラグインとして作成します。
といっても、ボタンの画像と簡単なyamlファイルを用意するだけですので、MTのプラグイン作成の知識はほとんど必要ありません。
ここでは、ボタンをクリックすると「Hello!」という文字列を追加するボタンを例として、作成の流れを見ていきます。
まずはyamlファイルの作成から始めましょう。

&lt;h3&gt;yamlファイルを作成する&lt;/h3&gt;

&lt;h4&gt;プラグイン情報を書く&lt;/h4&gt;

適当なテキストエディタで、新規ファイルを作成します。
最初に書くのは、プラグインとしての情報です。ここで書いた内容が、MTの管理画面のプラグイン一覧に表示されます。

&lt;pre class=&#34;code&#34;&gt;name: Hello Button
id: Hello Button
key: HelloButton
author_link: http://blog.aklaswad.com/
author_name: Aklaswad
description: Say hello.
version: 0.1
plugin_link: http://blog.aklaswad.com/mtplugins/hellobutton/&lt;/pre&gt;

あちこち省略しても問題ありませんが、せっかくだからきちんと書いておきましょう。

&lt;h4&gt;ボタンを追加する&lt;/h4&gt;

次に、ボタンを追加します。

&lt;pre class=&#34;code&#34;&gt;buttons:
    hello:
        image: hello.png
        title: say hello!
        code: |
            function ceb_hello ( text ) {
                return &#39;Hello! &#39; + text;
            }&lt;/pre&gt;

一つのプラグインで、複数のボタンを追加することも出来ます。

&lt;h4&gt;ボタンの名前を指定する&lt;/h4&gt;

&lt;pre class=&#34;code&#34;&gt;buttons:
    hello:&lt;/pre&gt;

この部分です。ここからボタンの指定が続きますよ、という指定の「butons:」の次の行に、半角スペース4つ分字下げしてボタンの名前を指定します。今回は「hello」という名前にします。
名前には半角スペースなどを含めないようにしてください。

&lt;h4&gt;image: ボタンの画像を指定する&lt;/h4&gt;

用意した画像ファイルのファイル名を指定します。詳しくは後述します。

&lt;h4&gt;title: ボタンの動作の説明を書いておきましょう&lt;/h4&gt;

ボタンの上にマウスのカーソルを置いたときに、ここに指定したものが表示されます。

&lt;h4&gt;code: javascriptでボタンの動作を作る&lt;/h4&gt;

javascriptでコードの動作を指定します。字下げ幅をきちんと守るようにしてください。
ここからは、少しだけjavascriptの知識が必要となります。
ボタンがクリックされたときには、先ほど決めたボタンの名前に、「ceb_」という接頭辞をくっつけた
関数がコールされます。
この関数に対して、現在エディタ上で選択している文字列が第一引数として渡されます。
ほとんどの場合、この引数「text」に対して何らかの加工をすることが目的となるでしょう。

加工した結果の文字列を、関数の戻り値として返却してください。エディタの選択部分に挿入されます。

&lt;pre class=&#34;code&#34;&gt;            function ceb_hello ( text ) {
                return &#39;Hello! &#39; + text;
            }&lt;/pre&gt;

「code」ブロックには、呼び出される関数以外の関数も記述できます。

&lt;h4&gt;改行して保存する&lt;/h4&gt;

yamlファイルの仕様で、最後の行の後ろに改行が必要です。忘れないようにしてください。
編集が完了したら、改行コードを「LF」にして保存します。名前は「config.yaml」としてください。

&lt;h3&gt;ボタンの画像を作成する&lt;/h3&gt;

&lt;form mt:asset-id=&#34;66&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;hello.png&#34; src=&#34;http://blog.aklaswad.com/images/hello.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;画像は22px x 22px の大きさで作成します。画像ファイルの種類は、ブラウザが表示可能な種類なら何でもOKです。

もし、画像を用意するのが面倒なら、単にテキストを表示させることも出来ます。
「image」は指定せず、代わりに「face_text」という項目に、表示させたいテキストを指定してください。あまり長いと、ボタンからはみ出してしまうので気をつけましょう。

&lt;pre class=&#34;code&#34;&gt;buttons:
    bye:
        face_text: bye
        title: say bye!
        code: |
            function ceb_bye ( text ) {
                return &#39;bye &#39; + text;
            }&lt;/pre&gt;

&lt;h3&gt;作成したプラグインのインストール&lt;/h3&gt;

MTのpluginsディレクトリに、作成したプラグイン用の名前のディレクトリを作成し、その中に先ほど作成したyamlファイルを「config.yaml」という名前で保存します。
同様に、MTのmt-staticディレクトリにもpluginsというディレクトリがありますので、その中にプラグインの名前のディレクトリを作成し、画像ファイルを置きます。

ファイルの設置が完了したら、プラグイン一覧画面を開いて、インストールを確認してみましょう。

&lt;form mt:asset-id=&#34;65&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;hello_pluginconfig.png&#34; src=&#34;http://blog.aklaswad.com/images/hello_pluginconfig.png&#34; width=&#34;222&#34; height=&#34;136&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/form&gt;

成功です!
 ･･･もしプラグインが一覧に表示されていない場合は、アップロード先のディレクトリが正しいか見てみましょう。
また、以下のようなエラーが出て管理画面にアクセスできなくなってしまった場合

&lt;blockquote&gt;Got an error: Error reading /home/foo/public_html/cgi-bin/mt/plugins/HelloButton/config.yaml: Stream does not end with newline character (YAML_PARSE_ERR_NO_FINAL_NEWLINE) at lib/MT/Component.pm line 150.&lt;/blockquote&gt;

yamlファイルの改行コードが間違っている場合や、yaml形式の字下げがおかしくなっている場合、最後の改行が足りない場合が考えられます。修正してみてください。

&lt;form mt:asset-id=&#34;67&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;hello_on_editor.png&#34; src=&#34;http://blog.aklaswad.com/images/hello_on_editor.png&#34; width=&#34;121&#34; height=&#34;67&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;さて、無事にインストールできたら、早速ブログ記事編集画面を開いてみましょう。自動的にボタンが追加されているはずです。&lt;br clear=&#34;both&#34; /&gt;

&lt;h3&gt;作成したプラグインを配布する&lt;/h3&gt;

&lt;form mt:asset-id=&#34;63&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;hello_directory_tree.png&#34; src=&#34;http://blog.aklaswad.com/images/hello_directory_tree.png&#34; width=&#34;167&#34; height=&#34;140&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;作成したプラグインを配布する場合、MTの一般的なディレクトリ構成に併せてパッケージングしましょう。画像のようになると思います。&lt;br clear=&#34;both&#34; /&gt;

完成したプラグインはこちらになります。

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;68&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/HelloButton.zip&#34;&gt;HelloButton.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;その他、細かい仕様&lt;/h3&gt;

&lt;h4&gt;コールバックに渡される引数&lt;/h4&gt;
選択文字列「text」のあとに、ヘルパーオブジェクトが渡されます。

&lt;pre class=&#34;code&#34;&gt;function ceb_foo(text, args) {
    //do something
}&lt;/pre&gt;

このヘルパーオブジェクトから、いくつかのプロパティやメソッドを利用できます。
現在用意されているのは以下の物です。

&lt;dl&gt;
&lt;dt&gt;innerHTML()&lt;/dt&gt;
&lt;dd&gt;選択範囲をHTML文字列で返します。
第一引数の「text」では、エディタがiframeで表示されているときも、見えている文字列の取得になりますが、innerHTML()を利用すると、iframeでの選択範囲のマークアップを含めた内容をHTMLで取得することが出来ます。
&lt;/dd&gt;
&lt;dt&gt;iframe&lt;/dt&gt;
&lt;dd&gt;エディタがiframeで表示されているかをbool値で確認できます。&lt;/dd&gt;
&lt;dt&gt;editor&lt;/dt&gt;
&lt;dd&gt;MT.App.editorオブジェクトの参照を取得できます。&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4&gt;コールバックの戻り値について&lt;/h4&gt;
コールバック関数が未定義値を返却した場合、CustomEditorButtonは、エディタに対して一切の変更を加えません。</description>
    </item>
    
    <item>
      <title>CustomEditorButton2 出来ました。</title>
      <link>http://example.org/2008/000398.html</link>
      <pubDate>Sun, 02 Mar 2008 15:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000398.html</guid>
      <description>
以前に公開していた(今もしている)CustomEditorButtonというプラグインを、ようやくMT4に対応させることが出来ました。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;blog.aklaswad.com: CustomEditorButton2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

以前のバージョンとは異なり、ボタンは別プラグインの形で追加していきます。この辺はActionStreamsと同じ感覚ですね。
しばらく使ってみて不便であれば、以前のように、管理画面からもボタンの追加が出来るようにしてみます。

当面のToDo:

&lt;ul&gt;
	&lt;li&gt;ボタンが増えすぎたときの対処。至急。&lt;/li&gt;
	&lt;li&gt;画像なしでもボタンを作れるように。まあまあ急ぎ。&lt;/li&gt;
	&lt;li&gt;プラグイン側から、ブログにスタイル定義を追加できるようにする。ちょっとしたタグを書けば実現できそう。プラグインをインストールしてタグ一個書くだけでスーパーpreが使えるようになったりすると良いですね。&lt;/li&gt;
        &lt;li&gt;L10N&lt;/li&gt;
&lt;/ul&gt;

javascriptまわりでヒントをくださった&lt;a href=&#34;http://www.luckypines.com/mt/&#34;&gt;Yoshimatsuさん&lt;/a&gt;に感謝します。

使ってみて何かあったらコメントかtwitterで教えてください。では。</description>
    </item>
    
    <item>
      <title>CustomEditorButton2</title>
      <link>http://example.org/2008/000397.html</link>
      <pubDate>Sun, 02 Mar 2008 15:00:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000397.html</guid>
      <description>&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;form mt:asset-id=&#34;89&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2_0_3.zip&#34;&gt;CustomEditorButton2_0_3.zip&lt;/a&gt;&lt;/form&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;使い方&lt;/h3&gt;

&lt;form mt:asset-id=&#34;64&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;ceb_screen1.png&#34; src=&#34;http://blog.aklaswad.com/images/ceb_screen1.png&#34; width=&#34;149&#34; height=&#34;188&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;インストールが成功すると、自動的にブログ記事編集画面にボタンが追加されます。MTのデフォルトのボタンと同様に、エディタで範囲選択をした状態でボタンをクリックしてください。&lt;br clear=&#34;both&#34; /&gt;

&lt;h4&gt;ボタンの並び順を変更する&lt;/h4&gt;

カスタムボタンは、ドラッグ&amp;ドロップで簡単に並び替えることが出来ます。
&lt;del datetime=&#34;2008-08-21T02:29:15+09:00&#34;&gt;今のところ、見た目ドラッグしている感じが無いのでわかりづらいかもしれませんが、本当に変更できます。&lt;/del&gt;

&lt;form mt:asset-id=&#34;61&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;save_pref.png&#34; src=&#34;http://blog.aklaswad.com/images/save_pref.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;並び順を変更したら、右端のフロッピーディスクのアイコンをクリックしてください。変更結果が保存され、次回に編集画面を開いたときにもこの並び順で作業を再開できます。&lt;br clear=&#34;both&#34; /&gt;

&lt;form mt:asset-id=&#34;70&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;ceb_box.png&#34; src=&#34;http://blog.aklaswad.com/images/ceb_box.png&#34; width=&#34;22&#34; height=&#34;22&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;「ポケット」をクリックすると、ポケットが開き、格納されたボタンを表示できます。使いたいボタンをドラッグして、現在使用中のボタンの列に並べてあげてください。当面使わないボタンなどは、「ポケット」にしまっておくことも出来ます。ボタンを「ポケット」にしまいたいときは、「ポケット」ボタンの上か、開いたポケットにドラッグしてください。&lt;br clear=&#34;both&#34; /&gt;

&lt;h4&gt;ボタンを追加する&lt;/h4&gt;

CustomEditorButton2用のプラグインを追加することで、新しいボタンをインストールすることが出来ます。自分でもポリポリ頑張って作っていきたいと思います。

プラグインの作成は、なるべく簡単に出来るようにしてあります。皆さんも挑戦してみてください。
作成方法は、以下のページにまとめてあります。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/writting-custom-button-plugins.html&#34;&gt;blog.aklaswad.com: Writting Custom Button Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;公開されているボタン追加プラグイン&lt;/h3&gt;
以下のサイトでも、CustomEditorButton2で利用可能な追加ボタンプラグインが公開されています。ありがとうございます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://isly.sub.jp/kodaruma/2008/04/customeditorbutton2.html&#34;&gt;こだるま日和 - CustomEditorButton2 用のフォント色指定ボタンを作ってみた&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.tinybeans.net/blog/movabletypeplugin/ceb2-plusutility.html&#34;&gt;かたつむりくんのWWW | CEB2_plusUtility&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;http://www.markdiary.com/archives/2008/05-06154648.php&#34;&gt;maRkのMyOwn - Custom Editor Buttonで記事作成の効率アップ&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;http://ke-i-s.com/archives/2008/08/06-091214.php&#34;&gt;Pure Kei - PLUGINS（Custom Editor Button 2）&lt;/a&gt; 20080821追加 トラックバックありがとうございます!&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;http://www.apstars.com/blog/211movable_type4/mt41_21.php&#34;&gt;MT4.1：CustomEditorButton2 プラグイン&lt;/a&gt; via &lt;a href=&#34;http://www.apstars.com/blog/&#34;&gt;Under the Bridge&lt;/a&gt; 掲載忘れてました。超サンクス＞＜&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.net-arcadia.net/plug-in/amazon-quick-link.php&#34;&gt;Amazonクイックリンク用ボタンwith CEB２ - ネット×PC＝Web交差点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;必要環境&lt;/h3&gt;

MT4.1 以降専用です。MT3.xではまったく動きません。
MT4.0については、今のところ検証してません。一通りの機能追加が終わってから検証したいと思います。

&lt;h3&gt;ブラウザ&lt;/h3&gt;

&lt;ins datetime=&#34;2008-03-12T23:46:41+09:00&#34;&gt;Firefox2およびInternetExplorer7で動作します。&lt;/ins&gt;
&lt;del datetime=&#34;2008-03-12T22:43:52+09:00&#34;&gt;基本的にFirefoxでの利用を想定しています。
現時点では、IEでの動作は見ていません。一通りの機能追加が終わってから検証します。
IE7では動くと思いますが、IE6はかなり危ないと思います。&lt;/del&gt;
IE6で動かなくても、多分直しません。

&lt;h3&gt;ライセンス&lt;/h3&gt;

GPLv2

&lt;h3&gt;チェンジログ&lt;/h3&gt;

&lt;dl&gt;
    &lt;dt&gt;0.3(20080821)&lt;/dt&gt;
    &lt;dd&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;form mt:asset-id=&#34;89&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2_0_3.zip&#34;&gt;CustomEditorButton2_0_3.zip&lt;/a&gt;&lt;/form&gt;
        &lt;/li&gt;
        &lt;li&gt;MT4.2に対応した&lt;/li&gt;
        &lt;li&gt;デフォルトのボタンを、同梱の別プラグインに移動した&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
    &lt;dt&gt;0.21(20080312)&lt;/dt&gt;
    &lt;dd&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;form mt:asset-id=&#34;71&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2.0.21.zip&#34;&gt;CustomEditorButton2.0.21.zip&lt;/a&gt;&lt;/form&gt;
        &lt;/li&gt;
        &lt;li&gt;IE7に対応した&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
    &lt;dt&gt;0.2(20080309)&lt;/dt&gt;
    &lt;dd&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;form mt:asset-id=&#34;69&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2.0.2.zip&#34;&gt;CustomEditorButton2.0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
	&lt;li&gt;利用頻度の低いボタンを退避させる「ポケット」を追加した&lt;/li&gt;
	&lt;li&gt;ボタンのドラッグ時などの見た目の改善&lt;/li&gt;
	&lt;li&gt;画像を用意しなくてもボタンを作成できるようにした&lt;/li&gt;
	&lt;li&gt;ボタン作成時に利用可能なオプション引数を追加&lt;/li&gt;
	&lt;li&gt;コールバックの戻り値の処理の拡張&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
    &lt;dt&gt;0.1 (20080302)&lt;/dt&gt;
    &lt;dd&gt;
    &lt;ul&gt;
        &lt;li&gt;最初のリリース&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;62&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/CustomEditorButton2.0.1.zip&#34;&gt;CustomEditorButton2.0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>バージョン表記がひどすぎる件について</title>
      <link>http://example.org/2008/000396.html</link>
      <pubDate>Wed, 27 Feb 2008 21:01:06 +0900</pubDate>
      
      <guid>http://example.org/2008/000396.html</guid>
      <description>
&lt;a href=&#34;http://www.zelazny.mydns.jp/&#34;&gt;wolawola&lt;/a&gt;の中の人に指摘していただいて初めて気がついたのですが、拙作プラグイン「BuildTracer」のバージョン番号がめちゃくちゃでした。
正しくは以下の通りになります。

&lt;table&gt;
&lt;tr&gt;&lt;th&gt;管理画面での表示&lt;/th&gt;&lt;th&gt;特徴&lt;/th&gt;&lt;th&gt;本当のバージョン&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;0.1&lt;/td&gt;
    &lt;td&gt;上部パネルが無い&lt;br /&gt;stashを選択できない&lt;/td&gt;
    &lt;td&gt;0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;0.1&lt;/td&gt;
    &lt;td&gt;上部パネルが無い&lt;br /&gt;stashを選択できる&lt;/td&gt;
    &lt;td&gt;0.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;0.1&lt;/td&gt;
    &lt;td&gt;上部パネルがある&lt;br /&gt;オートランが無い&lt;/td&gt;
    &lt;td&gt;0.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;0.4&lt;/td&gt;
    &lt;td&gt;上部パネルがある&lt;br /&gt;オートランがある&lt;/td&gt;
    &lt;td&gt;0.31&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

0.1以外全部一致していないってどういうことでしょうか。ということで、次のバージョンは0.4をスキップして0.5にしようかなと思います。</description>
    </item>
    
    <item>
      <title>BuildTracer0.31をリリースします</title>
      <link>http://example.org/2008/000395.html</link>
      <pubDate>Sun, 24 Feb 2008 20:22:47 +0900</pubDate>
      
      <guid>http://example.org/2008/000395.html</guid>
      <description>
今回は大きな機能追加などはありません。主に内部的な修正を行いました。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/buildtracer.html&#34;&gt;blog.aklaswad.com: Build Tracer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;59&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.31.zip&#34;&gt;BuildTracer0.31.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BuildTracer 0.3 出来ました。</title>
      <link>http://example.org/2008/000392.html</link>
      <pubDate>Sun, 17 Feb 2008 02:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000392.html</guid>
      <description>
&lt;form mt:asset-id=&#34;58&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.3.zip&#34;&gt;BuildTracer0.3.zip&lt;/a&gt;&lt;/form&gt;

ちょっと気合入れてインターフェイスを改造してみました。

&lt;form mt:asset-id=&#34;54&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/images/bt0.3-screen.png&#34;&gt;&lt;img alt=&#34;bt0.3-screen.png&#34; src=&#34;http://blog.aklaswad.com/images/bt0.3-screen-thumb-450x161.png&#34; width=&#34;450&#34; height=&#34;161&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/a&gt;&lt;/form&gt;

なんだかデバッガぽくなってきた気がします。

使い方はこんな感じ。

&lt;form mt:asset-id=&#34;56&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/images/bt0.3-screen-inst.png&#34;&gt;&lt;img alt=&#34;bt0.3-screen-inst.png&#34; src=&#34;http://blog.aklaswad.com/images/bt0.3-screen-inst-thumb-450x161.png&#34; width=&#34;450&#34; height=&#34;161&#34; class=&#34;mt-image-none&#34; style=&#34;&#34; /&gt;&lt;/a&gt;&lt;/form&gt;

ちょっと重いのが難点です。</description>
    </item>
    
    <item>
      <title>BuildTracer0.2をリリースします。</title>
      <link>http://example.org/2008/000391.html</link>
      <pubDate>Mon, 11 Feb 2008 14:21:41 +0900</pubDate>
      
      <guid>http://example.org/2008/000391.html</guid>
      <description>
BuildTracer0.1で問題だった、トレースの実行時に実際にファイルが置き換えられてしまう問題に対応しました。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/buildtracer.html&#34;&gt;blog.aklaswad.com: Build Tracer&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;53&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.2.zip&#34;&gt;BuildTracer0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>はてなブックマークを取得するActionStreamsプラグイン公開します。</title>
      <link>http://example.org/2008/000390.html</link>
      <pubDate>Sat, 09 Feb 2008 00:27:56 +0900</pubDate>
      
      <guid>http://example.org/2008/000390.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/2008/000382.html&#34;&gt;以前の記事&lt;/a&gt;でほとんど完成していたのですが、改めてパッケージングしました。
リンク先がおかしかった点などが修正されています。また、タグを取得するようにしてあります。

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;51&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/HatenaBookmarkAS0.1.zip&#34;&gt;HatenaBookmarkAS0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/hatenabookmarkas.html&#34;&gt;blog.aklaswad.com: HatenaBookmarkAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

ほとんど見たまんまのyamlファイル一発勝負なので、好きに弄ってください。

ブログ公開時にアイコン表示する場合は、ActionStreams本体のテンプレートセットのスタイルシートを参考にすれば良いです。プロフィール追加プラグインを一括で指定できるようになっています。
</description>
    </item>
    
    <item>
      <title>HatenaBookmarkAS</title>
      <link>http://example.org/2008/000388.html</link>
      <pubDate>Fri, 08 Feb 2008 23:47:45 +0900</pubDate>
      
      <guid>http://example.org/2008/000388.html</guid>
      <description>
ActionStreamプラグインに、はてなブックマークのプロファイルを追加するプラグインです。

&lt;a href=&#34;http://bulknews.net/me/&#34;&gt;miyagawaさんのActionStreams&lt;/a&gt;を見るとわかるように、他にも実装はあるようですが、とりあえず公開しておきます。

ActionStreamsはプラグイン側で、収集する情報やフィールドを自由に追加できるので、それぞれの実装で個性が出ると面白いのではないかと思います。
自分の場合は、はてぶのコメントとタグも収集できるようにしてみました。

&lt;h3&gt;ダウンロード&lt;/h3&gt;

&lt;form mt:asset-id=&#34;51&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/HatenaBookmarkAS0.1.zip&#34;&gt;HatenaBookmarkAS0.1.zip&lt;/a&gt;&lt;/form&gt;

</description>
    </item>
    
    <item>
      <title>ハード月別アーカイブ</title>
      <link>http://example.org/2008/000387.html</link>
      <pubDate>Thu, 07 Feb 2008 18:08:55 +0900</pubDate>
      
      <guid>http://example.org/2008/000387.html</guid>
      <description>
指定した期間(または最古のエントリーの月から最新のエントリーの月まで)エントリーが無くてもアーカイブを作成するアーカイバは作れるだろうか。</description>
    </item>
    
    <item>
      <title>MTタグの書き方を調べてみました。</title>
      <link>http://example.org/2008/000358.html</link>
      <pubDate>Wed, 06 Feb 2008 12:55:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000358.html</guid>
      <description>
&lt;p&gt;&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar foo value=&#34;fizz&#34;,&#34;buzz&#34;&amp;gt;&lt;/pre&gt;
こんなMTタグの書き方はありでしょうか!?実はありなんです!&lt;/p&gt;

&lt;p&gt;というわけで、MT4.1で利用可能なMTタグの書式を調べてみました。&lt;/p&gt;

&lt;h3&gt;全般編&lt;/h3&gt;

&lt;dl&gt;
&lt;dt&gt;基本形&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;$MTBlogName$&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;$マークは省略出来る&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;MTBlogName&amp;gt;&lt;/pre&gt;
かたっぽだけというのもOK。ただしかっこ悪い。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;$MTBlogName&amp;gt;&lt;/pre&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;MTBlogName$&amp;gt;&lt;/pre&gt;
これはMT3から省略できました。ちなみに、ブロックタグでは$マークをつけること自体出来ません。ブロックの閉じタグの頭のスラッシュ「/」と$マークが両立できないためです。
&lt;/dd&gt;
&lt;dt&gt;末尾に/を付けられる&lt;/dt&gt;
&lt;dd&gt;
これはMT4からの機能。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;MTBlogName /&amp;gt;&lt;/pre&gt;
XMLの空タグ風に記述できます。これもブロックタグでは使えないかと思われます。
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;タグ名編&lt;/h3&gt;

&lt;dl&gt;
&lt;dt&gt;大文字小文字は問わない&lt;/dt&gt;
&lt;dd&gt;
MT4より。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mtblogname&amp;gt;&lt;/pre&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mtBlogName&amp;gt;&lt;/pre&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mTblOgnAme&amp;gt;&lt;/pre&gt;
すべてOKです
&lt;/dd&gt;
&lt;dt&gt;「MT」とタグ名の間にコロンを挟める&lt;/dt&gt;
&lt;dd&gt;
MT4より。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:blogname&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;モディファイア編&lt;/h3&gt;

&lt;dl&gt;
&lt;dt&gt;基本&lt;/dt&gt;
&lt;dd&gt;
キー=&#34;値&#34;の形で指定します。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar name=&#34;foo&#34; value=&#34;fizz&#34;&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;値の括りはシングルクオートでも可&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar name=&#39;foo&#39;&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;クオートを省略しても可&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar name=foo&amp;gt;&lt;/pre&gt;
ただし、半角スペースのような、単語の区切りとみなされる物を値に含む場合はダメです。つまり、これはOKですが
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar name=fizzbuzz value=15&amp;gt;
&amp;lt;mt:getvar name=fizzbuzz&amp;gt;&lt;/pre&gt;
これはNGです。&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar name=fizz buzz&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;イコールの前後やアトリビュートの前後にスペースや改行を挟める&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar name = &#34;boo&#34; value = &#34; fizz buzz &#34;&amp;gt;&lt;/pre
&lt;pre class=&#34;tmpl&#34;&gt;
&amp;lt;mt:getvar name       = &#34;boo&#34;
           capitalize = &#34;1&#34;
           strip      = &#34;-&#34; /&amp;gt;
&lt;/pre&gt;
&lt;/dd&gt;

&lt;dt&gt;値には小なり「&amp;lt;」大なり「&amp;gt;」記号を含めることが出来る&lt;/dt&gt;
&lt;dd&gt;
実はMT4.1から。それ以前は大なり「&amp;gt;」を含めることが出来ませんでした。
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar name=&#34;goo&#34; value=&#34;&amp;lt;fizz&amp;gt;&amp;lt;buzz&amp;gt;&#34;&amp;gt;&lt;/pre&gt;
&lt;/dd&gt;

&lt;dt&gt;nameキーは省略可能&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar goo&amp;gt;&lt;/pre&gt;
これは、
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar name=&#34;goo&#34;&amp;gt;&lt;/pre&gt;
と同じ意味となります。
&lt;/dd&gt;
&lt;dt&gt;カンマ区切りで配列を渡せる&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:setvar moo value=&#34;fizz&#34;,&#34;buzz&#34;&amp;gt;&lt;/pre&gt;
区切りはコロンでもOKです。

&lt;pre class=&#34;tmpl&#34;&gt;
&amp;lt;mt:setvar weekdays value=&#34;sun&#34;:&#34;mon&#34;:&#34;tue&#34;:&#34;wed&#34;:&#34;thu&#34;:&#34;fry&#34;:&#34;sat&#34;&amp;gt;
&lt;/pre&gt;

なお、配列を指定する場合は、クオート(&#39;&#39;や&#34;&#34;の括り)が必須となります。&lt;br /&gt;
実際にモディファイアに直接配列を指定できるケースというのはそう多くは無いのですが、Entriesのidモディファイアや、regex_replaceグローバルモディファイアで利用することが出来ます。

&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:entries id=&#34;1&#34;:&#34;3&#34;:&#34;5&#34;&amp;gt;
    &amp;lt;mt:entrytitle&amp;gt;
&amp;lt;/mt:entries&amp;gt;&lt;/pre&gt;

&lt;pre class=&#34;tmpl&#34;&gt;&amp;lt;mt:getvar boo regex_replace=&#34;/z/g&#34;,&#34;k&#34;&amp;gt;&lt;/pre&gt;

&lt;/dd&gt;
&lt;dt&gt;$記号で変数展開&lt;/dt&gt;
&lt;dd&gt;
&lt;pre class=&#34;tmpl&#34;&gt;
&amp;lt;mt:setvar doo value=&#34;foo&#34;&amp;gt;
&amp;lt;mt:getvar name=&#34;$doo&#34;&amp;gt;
&lt;/pre&gt;
これは、変数「foo」の値が出力されます。&lt;br /&gt;
この変数展開は、配列に対しても有効です。

&lt;pre class=&#34;tmpl&#34;&gt;
&amp;lt;mt:setvars&amp;gt;
pattern=/z/g
replace=p
&amp;lt;/mt:setvars&amp;gt;
&amp;lt;mt:getvar boo regex_replace=&#34;$pattern&#34;,&#34;$replace&#34;&amp;gt;&lt;/pre&gt;

なお、[]や{}による配列やハッシュへのアクセスは、あくまで「mt:setvar」「mt:getvar」のタグに固有の機能となりますので、今回は調べませんでした。

&lt;/dd&gt;
&lt;/dl&gt;

おわり。

</description>
    </item>
    
    <item>
      <title>Build Tracer</title>
      <link>http://example.org/2008/000380.html</link>
      <pubDate>Mon, 04 Feb 2008 01:30:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000380.html</guid>
      <description>&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;59&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.31.zip&#34;&gt;BuildTracer0.31.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;何をするプラグインか&lt;/h3&gt;

Movable Type の再構築の動作を表示します。
表示は、以下のような形で行われます。

&lt;form mt:asset-id=&#34;48&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;buildtracer_tracer.png&#34; src=&#34;http://blog.aklaswad.com/images/buildtracer_tracer.png&#34; width=&#34;550&#34; height=&#34;198&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/form&gt;

現在の所、以下のようなことが出来ます。

&lt;ul&gt;
	&lt;li&gt;ブロック構造の可視化&lt;/li&gt;
	&lt;li&gt;&amp;lt;mt:if&amp;gt;などの判定の確認&lt;/li&gt;
	&lt;li&gt;変数の変化の追跡&lt;/li&gt;
	&lt;li&gt;処理時間の表示&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;動作環境&lt;/h3&gt;

このプラグインは、Movable Type 4.1 専用です。
もしかしてMT4.0xでも動作するかもしれませんが、コードのベースとして4.1のものを利用しているため、トレース結果が信頼できなくなります。

また、ダイナミックパブリッシングを利用している場合も、実際に公開されるブログとトレース結果が異なる場合は考えられます。

ブラウザについて、Firefox での利用をお勧めします。IE7での動作は確認しておりますが、どうもパフォーマンスが良くないようです。IE6では動作しません。

&lt;h3&gt;インストール&lt;/h3&gt;

パッケージには、「plugins」「mt-static」の二つのディレクトリが含まれています。
&lt;em&gt;plugins/BuildTracer&lt;/em&gt;ディレクトリを、お使いのMTのpluginsディレクトリに、また、&lt;em&gt;mt-static/plugins/BuildTracer&lt;/em&gt;ディレクトリを、お使いのMTのmt-static/pluginsディレクトリにそれぞれアップロードしてください。

&lt;h3&gt;利用方法&lt;/h3&gt;

Build Tracer のトレース画面は、以下の方法で呼び出すことが出来ます。

&lt;h4&gt;Fileinfo一覧から呼び出す&lt;/h4&gt;

BuildTracerがインストールされると、管理画面の「一覧」メニューの中に「Fileinfo」という項目が追加されます。
ここから、該当のブログが生成しているファイルのURL一覧を表示できます。

&lt;form mt:asset-id=&#34;47&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;buildtracer_fileinfos.png&#34; src=&#34;http://blog.aklaswad.com/images/buildtracer_fileinfos.png&#34; width=&#34;550&#34; height=&#34;254&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/form&gt;

一覧表示から、トレース画面を開きたいファイルを選択してください。

&lt;h4&gt;ブックマークレットから呼び出す&lt;/h4&gt;

トレース画面の右下のほうにブックマークレットを用意しました。これをブラウザのお気に入りに登録しておけば、実際のブログ画面から直接トレース画面を開くことが出来ます。
URLのチェックをしていないため、関係ないウェブページから呼び出した場合には変なエラーが表示されます。

&lt;h3&gt;ライセンス&lt;/h3&gt;

GPLv2
MIT License (since 20130716)

&lt;h3&gt;既知の問題&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;del&gt;アーカイブテンプレートのトレース時にstash-&gt;templateがチェックされているとエラーが発生してトレースできない。将来のバージョンでインターフェース自体を変更予定です。&lt;/del&gt;&lt;ins&gt;現在、stashのトレース自体が削除されています。&lt;/ins&gt;&lt;/li&gt;
    &lt;li&gt;
&lt;del&gt;
現在の実装では、トレースを行う際に、実際にファイルを再構築しています。
そのため、場合によっては実際のブログのファイルが置き換わってしまう場合があります。
ファイルの内容に変化が無い場合には、基本的に、実際のファイルが書き換えられることはありません。しかし、例えばテンプレート中で&amp;lt;mt:date&amp;gt;タグを利用して最終更新日を表示している場合など、再構築ごとに内容が変化する箇所がある場合、ファイルがトレースを行った時点のものに書き換えられます。&lt;br /&gt;また、ダイナミックパブリッシングの動作では、静的ファイルが存在しないことが前提となっているため、上記副作用でファイルが出力された場合、(そのファイルだけが)ダイナミックパブリッシングの対象から外れてしまうということが考えられます。ご注意下さい。
&lt;/del&gt;&lt;ins&gt;ver.0.2で対応しました。&lt;/ins&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;チェンジログ&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;0.31 (20080224)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;form mt:asset-id=&#34;59&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.31.zip&#34;&gt;BuildTracer0.31.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
    &lt;li&gt;IE7でJSONの読み込みに失敗する問題に対応した&lt;/li&gt;
    &lt;li&gt;オートラン機能を追加した&lt;/li&gt;
    &lt;li&gt;配列やハッシュの変数をJSONで表示するようにした&lt;/li&gt;
    &lt;li&gt;インターフェイスの見た目の改善&lt;/li&gt;
    &lt;li&gt;ブックマークレットが表示されていなかった問題を修正&lt;/li&gt;
    &lt;li&gt;(内部的な変更)変数の変化をキャッシュするようにした&lt;/li&gt;
    &lt;li&gt;(内部的な変更)ファイルを分割した&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.3 (20080217)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;58&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.3.zip&#34;&gt;BuildTracer0.3.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
    &lt;li&gt;
    &lt;li&gt;インターフェイスを刷新&lt;/li&gt;
    &lt;li&gt;機能的にはやや後退(stashの観察が出来なくなったなど)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dl&gt;
&lt;dt&gt;0.2 (20080211)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;53&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.2.zip&#34;&gt;BuildTracer0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
	&lt;li&gt;トレース実行時にファイルが上書きされる問題に対応&lt;/li&gt;
	&lt;li&gt;stashの観察が出来るようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.1 (20080204)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;最初のリリース&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;46&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/BuildTracer0.1.zip&#34;&gt;BuildTracer0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>BuildTracer0.1</title>
      <link>http://example.org/2008/000383.html</link>
      <pubDate>Mon, 04 Feb 2008 01:28:57 +0900</pubDate>
      
      <guid>http://example.org/2008/000383.html</guid>
      <description>
ハッカソンからこっち、すっかりMT三昧の日々です。
中でも、ちょこちょこ作ってきたプラグインが形になってきたので、公開してみます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/buildtracer.html&#34;&gt;blog.aklaswad.com: Build Tracer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;form mt:asset-id=&#34;49&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;buildtracer_tracer2.png&#34; src=&#34;http://blog.aklaswad.com/images/buildtracer_tracer2.png&#34; width=&#34;550&#34; height=&#34;300&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34; /&gt;&lt;/form&gt;

MTの再構築の結果を構造化して表示します。
自分で言うのもなんですが、MTerの方はなんとなく見るだけでも面白いと思うのでお試し下さい。

あ、ちょっとですが副作用があるので、気をつけてお使い下さい。</description>
    </item>
    
    <item>
      <title>ActionStreamsではてなブックマーク</title>
      <link>http://example.org/2008/000382.html</link>
      <pubDate>Sat, 02 Feb 2008 14:37:33 +0900</pubDate>
      
      <guid>http://example.org/2008/000382.html</guid>
      <description>
アイコンの設置とcssでのli要素への表示が上手くいかずごり押しした。追加サービスの配布を考えるとこれから、て感じかしら。

あと、タグの取得もまだです。
ちょっとお出かけするのでパッケージングともども、あとで考えます。

config.yamlは大体こんな感じ。
あちこち変なので、もう少し手を入れる予定。

&lt;pre class=&#34;code&#34;&gt;
name: Hatena Bookmark
id: hatenabookmark
key: Hatebu
author_link: http://blog.aklaswad.com/
author_name: aklaswad
description: Adds profile service and activity stream for Hatena Bookmark.
version: 1.0
plugin_link: http://blog.aklaswad.com/
profile_services:
    hatenabookmark:
        name: Hatena Bookmark
        url: http://b.hatena.ne.jp/%s
        icon: images/b.png
action_streams:
    hatenabookmark:
        bookmarks:
            name: Bookmarks
            description: Hatena Bookmark
            fields:
                - note
            html_form: &#39;[_1] bookmarked &amp;lt;a href=&#34;[_2]&#34;&amp;gt;[_3]&amp;lt;/a&amp;gt; [_4]&#39;
            html_params:
                - url
                - title
                - note
            url: &#39;http://b.hatena.ne.jp/{{ident}}/atomfeed&#39;
            identifier: url
            atom:
                note: summary/child::text()
                created_on: issued/child::text()
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Action Streams!</title>
      <link>http://example.org/2008/000381.html</link>
      <pubDate>Sat, 02 Feb 2008 11:22:32 +0900</pubDate>
      
      <guid>http://example.org/2008/000381.html</guid>
      <description>
SixApartから登場した新しいプラグイン、Action Streams がステキすぎます。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://plugins.movabletype.org/action-streams/&#34;&gt;Action Streams | Plugin Directory | movabletype.org&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.sixapart.jp/pressroom/2008/01/mtaction_stream.html&#34;&gt;Six Apart - 広報ブログ: 自分の行動履歴を自分で管理できるMTプラグイン「Action Streams」&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.goodpic.com/mt/archives2/2008/02/action_stream_m.html&#34;&gt;Action Stream をインストール : MTで、FlickrやTwitterなど色々なサービスの更新状況を表示：Goodpic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

自分もいくつか似た様なものを作っていましたが、こっちのほうがよさそうですね。

さて、&lt;a href=&#34;http://blog.aklaswad.com/actionstreams/&#34;&gt;早速導入してみた&lt;/a&gt;のですが、導入に関して何箇所かつまずいたところがあったので、注意点をまとめておきます。

&lt;h3&gt;文字コードは UTF-8 で!&lt;/h3&gt;

現在のバージョンでは文字コードの変換を行ってくれないようです。このブログは euc-jp で公開していたのですが、見事に取得したActionが文字化けしてくれました。
多分何も文字コードを操作していないと思うのですが、twitterやvoxに日本語をポストしている場合はutf-8で返ってくるようですので、MT側もutf-8なら問題ないようです。
文字コードが異なる状態でActionStreamsが動作してしまった場合、文字化けした状態のActionやタグが登録されてしまい、後の作業での障害になる場合があります。特に文字化けしたタグは削除することが容易ではないので、必ず事前に、導入する MT の文字コードがutf-8であることを確認しましょう。

&lt;del&gt;
自分の場合は、かねてからutf-8にしたいと考えていたので、無理やり文字コードを変更しました。こちらの記事が参考になりました。&lt;/del&gt;
&lt;ins&gt;追記: あー、どうもあちこちおかしいと思ったら、Storableされてるメタデータやプラグインデータがぶっ壊れたかも。ふむう。DBのダンプをnkfではダメみたい。なにか違うやり方を考えないと。&lt;/ins&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://yusukebe.com/tech/archives/20070829/002145.html&#34;&gt;sqliteのdbの文字コードを変換する (Yusukebe::Tech)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;テンプレートセットを適用するときはユーザーの言語設定を英語に!&lt;/h3&gt;

ActionStreamsプラグインは、専用のテンプレートセットを提供してくれます。が。こちらもローカライズが一部問題あるようです。
以下の手順で、テンプレートが中途半端に日本語化されないようにしましょう。

&lt;ol&gt;
	&lt;li&gt;プロフィール画面を開く。管理画面右上の「こんにちは(ログイン名)さん」から開けます。&lt;/li&gt;
	&lt;li&gt;使用言語を英語にして保存&lt;/li&gt;
	&lt;li&gt;テンプレートセット「ActionStream」を使って新規ブログを作成&lt;/li&gt;
&lt;/ol&gt;

テンプレートセットの適用後は、言語設定を日本語に戻してしまっても問題ありません。

&lt;h3&gt;Actionが少ないと寂しい!&lt;/h3&gt;

えー。
･･････頑張ってついったりヴぉくすったりします。


ではでは。</description>
    </item>
    
    <item>
      <title>[error] mod_mime_magic: can&#39;t read `***.cgi&#39; は多分無視して構わない気がします。</title>
      <link>http://example.org/2008/000379.html</link>
      <pubDate>Fri, 01 Feb 2008 11:46:57 +0900</pubDate>
      
      <guid>http://example.org/2008/000379.html</guid>
      <description>
mod_mime_magicというのは、ファイルの拡張子に頼らずにMIMEタイプを推測するApacheモジュール。
Apacheは通常、拡張子を見て「.mp3」なら「audio/mpeg」です、というようにファイルの種類(MIMEタイプ)を返している。だがmod_mime_magicを利用すると、実際のファイルを読み取って、たとえば先頭のnバイトが特定のパターンになっていたら、これはmp3に違いない、と判断して自動的に「audio/mpeg」を返してくれるようになる。たとえばXMLの場合、ファイルの先頭からの文字列が「&amp;lt;?xml」なら「text/xml」を返却する、という具合。以下、実際のmod_mime_magicの設定ファイルの一部。

&lt;blockquote&gt;0       string          \&amp;lt;?xml                  text/xml&lt;/blockquote&gt;

こんな感じでいろんなファイルの種類が指定してあるので、いちいち拡張子ごとの設定を行ったりしなくても済むようになって便利だよね、というモジュールです。

さて。suExec環境でCGI を設置したときに、「mod_mime_magic: can&#39;t read `***.cgi&#39;」というエラーがエラーログに山ほど残る場合がある。これはmod_mime_magicが、MIMEタイプ推測の際のファイルの読み取りに失敗した場合に出るらしい。

suExec 環境下では、CGI の実行自体はファイルのオーナーとして行われるため、オーナーの権限が設定されていればOK。0700、なんてパーミッションでもきちんと動作する。
しかし、mod_mime_magic がファイルを読みに来るときには、Apache ユーザーで読みに来てしまうため、ここでワールドのパーミッションが必要となってしまう。お馬鹿。

で、まあ、エラーログに「mod_mime_magic: can&#39;t read `***.cgi&#39;」がたくさん出てウザイという場合は、cgiファイルのパーミッションを0704とかにしてみるととりあえず回避できると思います。

また、メッセージ自体は単に「MIMEタイプの推測に失敗した」と言う警告なだけで、実際のCGIの実行には問題が無いので、そのまま放置しても構わないはず。(CGI側できちんとMIMEtypeをヘッダに含めて返しているはずなので。)

一番良いのはmod_mime_magicを使わない、かな。</description>
    </item>
    
    <item>
      <title>ダイナミックパブリッシングとPHPを併用してはならぬ</title>
      <link>http://example.org/2008/000375.html</link>
      <pubDate>Tue, 29 Jan 2008 00:34:13 +0900</pubDate>
      
      <guid>http://example.org/2008/000375.html</guid>
      <description>
MTのPHP化(各ファイルを拡張子*.phpとして出力する手法)と、MTのデフォルトのPHPによるダイナミックパブリッシングを併用する事は、かなりリスクが高いです。

例えとして、以下のようなテンプレートを考えます。

&lt;mt:setvar name=&#34;var1&#34; value=&#34;print&#34;&gt;
&lt;?php &lt;mt:getvar name=&#34;var1&#34;&gt;(&#34;hello?&#34;) ?&gt;

これは、通常のMTのテンプレートエンジンによる処理では以下のように2段階に処理されます。

&lt;mt:setvar name=&#34;var1&#34; value=&#34;print&#34;&gt;
&lt;?php &lt;mt:getvar name=&#34;var1&#34;&gt;(&#34;hello?&#34;) ?&gt;
↓
(MTのテンプレートエンジンの処理:MTタグの部分だけが処理される。)
↓
&lt;?php print(&#34;hello?&#34;) ?&gt;
↓
(一旦ファイルとして保存された後、ページへのアクセス時に再度phpのエンジンで処理される)
↓
hello?

しかし、MTのダイナミックパブリッシングのテンプレートエンジンは、基本的にPHPの処理をそのまま流用しています。テンプレートの中に含まれているMTタグをPHPのコードに置き換えて、それをPHPコードとして実行する、そんな流れになっています。

&lt;mt:setvar name=&#34;var1&#34; value=&#34;print&#34;&gt;
&lt;?php &lt;mt:getvar name=&#34;var1&#34;&gt;(&#34;hello?&#34;) ?&gt;
↓
(MTのエンジンの前処理:MTタグの部分がphpコードに置き換えられる。)
↓
&lt;?php $var1 = &#34;print&#34;; ?&gt;
&lt;?php &lt;?php $var1 ?&gt;(&#34;hello?&#34;) ?&gt;
↓
(MTのエンジンがphpとして処理する)
↓
???</description>
    </item>
    
    <item>
      <title>AssetThumbnailPlus</title>
      <link>http://example.org/2008/000372.html</link>
      <pubDate>Mon, 28 Jan 2008 22:04:17 +0900</pubDate>
      
      <guid>http://example.org/2008/000372.html</guid>
      <description>
「MTAssetThumbnailLink」「MTAssetThumbnailURL」のテンプレートタグが生成するサムネイルは、基本的に元画像の縦横比を維持した形で出力されます。これを、不要な部分をトリムして、正方形にするモディファイア「square」を追加するプラグインです。

ちょっと名前が大袈裟ですが、ほんとにそれだけの小さなプラグインです。

&lt;h3&gt;動作条件&lt;/h3&gt;

MT4.1でしか動作確認していません。多分MT4.0以上で動きます。
通常のパブリッシングでは、MTが利用できる画像ライブラリ(ImageMagickかNetPBM)が必要になります。ひょっとしたらNetPBMでは動かないかもしれません。何かありましたらご報告下さい。
ダイナミックパブリッシングで利用する場合、phpのGDライブラリが必要となります。

&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;form mt:asset-id=&#34;43&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/AssetThumbnailPlus.0.1.zip&#34;&gt;AssetThumbnailPlus.0.1.zip&lt;/a&gt;&lt;/form&gt;

&lt;h3&gt;動作&lt;/h3&gt;

テンプレートタグ「MTAssetThumbnailLink」「MTAssetThumbnailURL」でモディファイア「square」が有効になります。
「square=&#34;1&#34;」を指定すると、モディファイア「width」または「height」で指定したサイズにリサイズした後、さらに正方形になるように中央部分を残して余計な箇所をカットします。
「square」を指定しない場合や、「square=&#34;0&#34;」とした場合は、MT標準と同じ動作になります。

&lt;h3&gt;ライセンス&lt;/h3&gt;

GPLです。デュアルライセンスではありません。ご注意下さい。</description>
    </item>
    
    <item>
      <title>hack-a-thonに行って来ました。</title>
      <link>http://example.org/2008/000373.html</link>
      <pubDate>Mon, 28 Jan 2008 21:50:56 +0900</pubDate>
      
      <guid>http://example.org/2008/000373.html</guid>
      <description>前回は変なところでつまずいて成果物なしだったのですが、今回は一応動くところまで行き、皆さんの前で発表してきました。発表風景は&lt;a href=&#34;http://www.movabletype.jp/blog/report_mt_hack-a-thon_080126.html&#34;&gt;こんな感じ&lt;/a&gt;です。120%男前に撮ってくださった&lt;a href=&#34;http://2xup.org/&#34;&gt;2xup&lt;/a&gt;のkaminogoyaさんに超感謝です。今度フルサイズで下さい。

帰宅後、phpで動かなかった箇所を修正した(というか、次の日起きて試したらなぜか動いていた)のが、以下のプラグインです。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/assetthumbnailplus.html&#34;&gt;blog.aklaswad.com: AssetThumbnailPlus&lt;/a&gt;

以下、TechMemo。
なぜか、MT本体のコードにすでにそのままの動作が組み込まれており、やることは、テンプレートタグが呼ばれた際に、必要なフラグを右から左に渡してやることだけ。
タグのハンドラ関数をこぴぺして一行加えて、それを、&lt;a href=&#34;http://www.sixapart.jp/movabletype/news/2007/09/18-1400.html&#34;&gt;コアタグをオーバーライドする形で実行する&lt;/a&gt;だけでした。超楽勝。

だかしかし、それはPerlでのお話。
ダイナミックパブリッシングのコードにはこれは含まれておらず、その辺はゴニョゴニョしました。また、phpでのコアタグのオーバーライドについてはほとんど資料が無く、smartyのリファレンスを適当に見ながら動くようにしました。
init.HOGEHOGE.phpという形でphpディレクトリの中においておくと初期化時にロードしてくれるので、その中でregister_functionとしてみました。一応動いてはいるのですが、これでいいのか良くわかりません＞＜
また、一行、絶対に必要だと思われるrequireOnceの行が最後まで動かず、コメントアウトしたままです。プラグインをロードするタイミングについて勘違いしているのかしら。よくわかりません＞＜

&lt;a href=&#34;http://www.luckypines.com/mt/&#34;&gt;fumiakiy&lt;/a&gt;さんにもその辺を伺ったところ、phpでのコアタグの上書きはあまり例が無いので、手法を確立するかMT.phpにAPIを追加してコミットしてくれとの事。
だがしかし、俺はPHPは全然わからないので、誰かお願いします＞＜


唐突なまとめ。
ハッカソンって本当に良いものですね。普段はコード書く時間が仕事中/オフ中問わずあまり取れないので、がりがりコード書けてすげえ楽しかったです。今後は4半期に一度開催したいとの事。超楽しみです。</description>
    </item>
    
    <item>
      <title>MT4.1リリース</title>
      <link>http://example.org/2008/000368.html</link>
      <pubDate>Thu, 24 Jan 2008 21:05:32 +0900</pubDate>
      
      <guid>http://example.org/2008/000368.html</guid>
      <description>
RC2が公開されたと思うまもなく、MT4.1の正式版が公開されました。早速アップグレードして記事を書いています。
このタイミングでリリースしたという事は、&lt;a href=&#34;http://wiki.movabletype.org/Japan_Hackathon&#34;&gt;あさってのhackathon&lt;/a&gt;で新機能祭りをやろうということですね。僕も参加します。楽しみです。

全体的な印象として、がっつり変化したMT4.0の時よりも、ちょっとした管理画面のレイアウトの変化など、細部までこだわった観が感じられます。すばらしい。

夏のMT4公開時の技術者カンファレンスで&lt;a href=&#34;http://bradchoate.com/&#34;&gt;Brad Choate&lt;/a&gt;は、MT4.1or2で「カスタムフィールド」「テンプレートセット」「リビジョンログ機能」を追加したいと語っていましたが、このうちの二つが早くも実現したことになります。すばらしい。

これからもすばらしいソフトを作り続けてください。開発チームのみなさま、お疲れ様でした!

</description>
    </item>
    
    <item>
      <title>映画「アース」を見てきました。</title>
      <link>http://example.org/2008/000364.html</link>
      <pubDate>Mon, 21 Jan 2008 00:06:48 +0900</pubDate>
      
      <guid>http://example.org/2008/000364.html</guid>
      <description>
&lt;a href=&#34;http://earth.gyao.jp/&#34;&gt;アース&lt;/a&gt;を見てきました。

北極から南極まで、動物の生き様を最新の撮影技術で追った、動物ドキュメンタリー映画です。
出だしは冬の北極圏。闇の世界を雄のホッキョクグマがえさを求めてさまようシーンから、これまで見たことのない映像で圧倒されます。
最新の技術による空撮、高速、高感度撮影は見ごたえ十分。bullet-timeに匹敵するような映像体験でした。サメのハンティングの瞬間などは、本当にすばらしかったです。(全体的には、「決定的瞬間」はあえて避けていた編集でしたが。)

また、印象に残ったのはホッキョクグマやオシドリの子供のありえないかわいさ。頬が緩みっぱなしでした。
だって飛べないのに初飛行とか。落ちてるだけ。なのに兄弟みんな続いていく。全員落下。落ち葉がなければ死ぬって。現代の日本人が失ってしまった真の家族愛を感じました。

ストーリーはほとんど無いのでうっかり眠りかけましたが、いい映画でした。映画館でみてよかったと思いました。
</description>
    </item>
    
    <item>
      <title>MTのテンプレートタグで素数判定をやってみた。</title>
      <link>http://example.org/2008/000362.html</link>
      <pubDate>Sun, 20 Jan 2008 15:50:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000362.html</guid>
      <description>
MT4.1ではopモディファイアが導入されて、かなりプログラムチックなことが出来るようになっています。
そこで、なにかMTでやる意味のまったくない作業をテンプレートで作ってみたくなり、とりあえず素数判定を行うテンプレートを書いてみました。

現在のMTのテンプレートエンジンでは、MTForなどのループから任意のタイミングで抜け出すことが出来ないため、MTSetVarTemplateを再帰的に呼び出すことでループの代用をしています。
そのため、大きな数の判定を行うと馬鹿みたいにメモリを喰いまくります・・・
速度を度外視してアルゴリズムを簡潔にした事もあいまって、実用には耐えられない出来になってしまいました。
家のローカル環境では、大体1000くらいの数までなら耐えられますが、それ以上の素数を判定しようとすると戻ってこなくなります。
まあ、こんなことも出来る、というサンプルになればと思い公開してみます。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:ignore&amp;gt; #setvartemplateを使って関数定義 &amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvartemplate name=&#34;is_prime&#34;&amp;gt;
    &amp;lt;mt:if name=&#34;num&#34; op=&#34;%&#34; value=&#34;$check&#34;&amp;gt;
        &amp;lt;mt:ignore&amp;gt; #試し割りで余りが出た場合&amp;lt;/mt:ignore&amp;gt;
        &amp;lt;mt:setvar name=&#34;check&#34; op=&#34;++&#34;&amp;gt;
        &amp;lt;mt:if name=&#34;num&#34; eq=&#34;$check&#34;&amp;gt;
            &amp;lt;mt:getvar name=&#34;num&#34;&amp;gt; は素数だった!
        &amp;lt;mt:else&amp;gt;
            &amp;lt;mt:ignore&amp;gt; #再帰!!&amp;lt;/mt:ignore&amp;gt;
            &amp;lt;mt:getvar name=&#34;is_prime&#34;&amp;gt;
        &amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:else&amp;gt;
        &amp;lt;mt:ignore&amp;gt; #試し割りで割り切れた場合&amp;lt;/mt:ignore&amp;gt;
        &amp;lt;mt:getvar name=&#34;num&#34;&amp;gt; は &amp;lt;mt:getvar name=&#34;check&#34;&amp;gt; で割り切れたので素数じゃなかった!
    &amp;lt;/mt:if&amp;gt;
&amp;lt;/mt:setvartemplate&amp;gt;
 
&amp;lt;mt:ignore&amp;gt; #ここに判定したい数字を指定 &amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvar name=&#34;num&#34; value=&#34;71&#34;&amp;gt;
 
&amp;lt;mt:ignore&amp;gt; #チェック用変数の初期化。変更不可!&amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:setvar name=&#34;check&#34; value=&#34;2&#34;&amp;gt;
 
&amp;lt;mt:ignore&amp;gt;
    #setvartemplateで設定したテンプレートを呼び出す。
    #ついでに余分な空白を削除。 
&amp;lt;/mt:ignore&amp;gt;
&amp;lt;mt:getvar name=&#34;is_prime&#34; regex_replace=&#34;/(^\s*|\s*$)/mg&#34;:&#34;&#34;&amp;gt;
 
&amp;lt;mt:ignore&amp;gt; #続けていくつか試してみる。 &amp;lt;/mt:ignore&amp;gt;
 
&amp;lt;mt:setvar name=&#34;num&#34; value=&#34;109&#34;&amp;gt;
&amp;lt;mt:setvar name=&#34;check&#34; value=&#34;2&#34;&amp;gt;
&amp;lt;mt:getvar name=&#34;is_prime&#34; regex_replace=&#34;/(^\s*|\s*$)/mg&#34;:&#34;&#34;&amp;gt;
 
&amp;lt;mt:setvar name=&#34;num&#34; value=&#34;111&#34;&amp;gt;
&amp;lt;mt:setvar name=&#34;check&#34; value=&#34;2&#34;&amp;gt;
&amp;lt;mt:getvar name=&#34;is_prime&#34; regex_replace=&#34;/(^\s*|\s*$)/mg&#34;:&#34;&#34;&amp;gt;
 
&amp;lt;mt:setvar name=&#34;num&#34; value=&#34;113&#34;&amp;gt;
&amp;lt;mt:setvar name=&#34;check&#34; value=&#34;2&#34;&amp;gt;
&amp;lt;mt:getvar name=&#34;is_prime&#34; regex_replace=&#34;/(^\s*|\s*$)/mg&#34;:&#34;&#34;&amp;gt;
&lt;/pre&gt;

実行結果は以下のようになりました。

&lt;blockquote&gt;

71 は素数だった!
109 は素数だった!
111 は 3 で割り切れたので素数じゃなかった!
113 は素数だった!

&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>regex_replaceの話</title>
      <link>http://example.org/2008/000357.html</link>
      <pubDate>Thu, 17 Jan 2008 19:27:10 +0900</pubDate>
      
      <guid>http://example.org/2008/000357.html</guid>
      <description>
ブログ記事に直接HTMLやPerlのコードを表示させたい場合、

MT4.0から、「regex_replace」グローバルモディファイアが追加されました。これを利用して、ブログ記事に、サンプルとしてHTMLをに「」引数にとるのは配列
サンプルとしてxhtmlの/&gt;を&gt;にする
「&gt;」はタグの終わり

&lt;mt:setvarblock name=&#34;foo&#34;&gt;

&lt;mt:ignore&gt;ココの内容のXMLふう空タグ表記をhtml風に置き換える。&lt;/mt:ignore&gt;



&lt;/mt:setvarblock&gt;&lt;mt:setvarblock name=&#34;pat&#34;&gt;/ \/&gt;/g&lt;/mtsetvarblock&gt;&lt;mtsetvarblock name=&#34;rep&#34;&gt;&gt;&lt;/mtsetvarblock&gt;&lt;mtgetvar name=&#34;foo&#34; regex_replace=&#34;$pat&#34;,&#34;$rep&#34;&gt;</description>
    </item>
    
    <item>
      <title>解説MTEntries</title>
      <link>http://example.org/2008/000353.html</link>
      <pubDate>Mon, 14 Jan 2008 02:38:31 +0900</pubDate>
      
      <guid>http://example.org/2008/000353.html</guid>
      <description>
ええー、前回のエントリーはちょっと独りよがりだったかの、と反省をいたしまして。
MTEntriesの動作についてもう少しポイントを抑えてまとめてみたいと思います。


キャッシュが使われるとき

日付範囲は強い

MTEntriesで利用できるモディファイア一覧

</description>
    </item>
    
    <item>
      <title>MTのテンプレートタグでFizzBuzz、SetVarTemplateを使ってやってみた。</title>
      <link>http://example.org/2008/000351.html</link>
      <pubDate>Sat, 12 Jan 2008 02:26:09 +0900</pubDate>
      
      <guid>http://example.org/2008/000351.html</guid>
      <description>
&lt;p&gt;&lt;a href=&#34;http://junnama.alfasado.net/online/2008/01/_mtse.html&#34;&gt;junnamaさんが面白いことやってた&lt;/a&gt;ので脊髄反射で反応。MT4.01が前提で。&lt;/p&gt;

&lt;p&gt;カウントをインクリメントするルーチンをSetVarTemplateを使って外に出してみました。&lt;br /&gt;
まっすぐにやると出来ないのでちょっとかっこ悪い書き方になってしまいました・・・&lt;br /&gt;
この辺は&lt;a href=&#34;http://www.movabletype.jp/documentation/designer/enhanced_templatetags.html#op_modifier&#34;&gt;MT4.1 で追加される op モディファイア&lt;/a&gt;を使えばよりスマートに書けるようになるでしょう。&lt;/p&gt;

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:setvartemplate name=&#34;count_up&#34;&amp;gt;
    &amp;lt;mt:setvar name=&#34;count_3_original&#34; value=&#34;$count_3&#34;&amp;gt;
    &amp;lt;mt:setvar name=&#34;count_5_original&#34; value=&#34;$count_5&#34;&amp;gt;

    &amp;lt;mt:if name=&#34;count_3&#34; eq=&#34;2&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_3&#34; value=&#34;0&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_3&#34; eq=&#34;1&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_3&#34; value=&#34;2&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_3_original&#34; eq=&#34;0&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_3&#34; value=&#34;1&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;

    &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;4&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;0&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;3&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;4&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;2&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;3&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;1&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;2&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_5_original&#34; eq=&#34;0&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;1&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
&amp;lt;/mt:setvartemplate&amp;gt;

&amp;lt;mt:setvar name=&#34;count_3&#34; value=&#34;1&#34;&amp;gt;
&amp;lt;mt:setvar name=&#34;count_5&#34; value=&#34;1&#34;&amp;gt;

&amp;lt;mt:entries lastn=&#34;100&#34;&amp;gt;
    &amp;lt;mt:setvar name=&#34;output_line&#34; value=&#34;$__counter__&#34;&amp;gt;
    &amp;lt;mt:if name=&#34;count_3&#34; eq=&#34;0&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;output_line&#34; value=&#34;fizz&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;0&#34;&amp;gt;&amp;lt;mt:setvar name=&#34;output_line&#34; value=&#34;buzz&#34;&amp;gt;&amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:if name=&#34;count_3&#34; eq=&#34;0&#34;&amp;gt;
        &amp;lt;mt:if name=&#34;count_5&#34; eq=&#34;0&#34;&amp;gt;
            &amp;lt;mt:setvar name=&#34;output_line&#34; value=&#34;fizzbuzz&#34;&amp;gt;
        &amp;lt;/mt:if&amp;gt;
    &amp;lt;/mt:if&amp;gt;
    &amp;lt;mt:getvar name=&#34;output_line&#34;&amp;gt;
    &amp;lt;mt:getvar name=&#34;count_up&#34;&amp;gt;
&amp;lt;/mt:entries&amp;gt;
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>詳説MTEntries</title>
      <link>http://example.org/2008/000346.html</link>
      <pubDate>Thu, 10 Jan 2008 03:00:00 +0900</pubDate>
      
      <guid>http://example.org/2008/000346.html</guid>
      <description>&lt;h3&gt;概観&lt;/h3&gt;

&lt;h4&gt;コンテキスト&lt;/h4&gt;

MTEnriesの行う重要な動作の一つに、モディファイアやコンテキストの指定をもとに、表示するべきエントリーを絞り込むことがあります。
コンテキストから読み取る情報については、以下の2種類に分類することが出来ます。

&lt;dl&gt;
	&lt;dt&gt;具体的なエントリー一覧として設定されているもの(キャッシュ)&lt;/dt&gt;
        &lt;dd&gt;アーカイブに含まれるエントリーや、MTEntriesの外側のブロックタグで絞り込み済みのエントリーなど、直近の物が$ctx-&gt;{stash}{entries}に格納されています。
ロード済みの(メモリに格納された)エントリーの実体がある場合と、MT::Promiseによって、ロード内容をコードとして持っているが実行していない場合があります。&lt;/dd&gt;
	&lt;dt&gt;日付の範囲やカテゴリーなど、絞込みの条件指定&lt;/dt&gt;
        &lt;dd&gt;たとえば月別アーカイブでは、月の始まり 20071101000000 と月の終わり 20071130235959 が設定されています。&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4&gt;class&lt;/h4&gt;

MT4から導入された「ウェブページ」機能で作成されたページは、内部的にはエントリーとして保存されています。そのため、MTEntriesで扱おうとしているエントリーが、本当にエントリーなのか、それともウェブページとして作成されたものなのかを判別するためにclassという概念が導入されています。MTEntriesにはclassを判断するためのルーチンが含まれています。

&lt;h4&gt;フィルタ&lt;/h4&gt;

各種絞込み条件は、「フィルタ」という形で適用されます。
フィルタは各種の条件に合わせて作成され、フィルタ一覧に格納されます。
そして、事前に用意された、表示候補となるエントリー一覧をフィルタリングします。候補中の各エントリーそれぞれに対してテストを行い、全てのフィルタを通過したエントリーのみを、実際に表示するエントリーとして登録する仕組みになっています。


&lt;h3&gt;動作の流れと詳細&lt;/h3&gt;

大まかな動作の流れとしては、以下のようになります。

&lt;ul&gt;
	&lt;li&gt;コンテキストとモディファイアを調整&lt;/li&gt;
	&lt;li&gt;フィルタを作成&lt;/li&gt;
	&lt;li&gt;エントリーの読み込み&lt;/li&gt;
	&lt;li&gt;フィルタリング&lt;/li&gt;
	&lt;li&gt;ソート&lt;/li&gt;
	&lt;li&gt;ブロック内部をビルド&lt;/li&gt;
&lt;/ul&gt;

ではいきます。

&lt;h4&gt;コンテキストとモディファイアを調整&lt;/h4&gt;

いわゆる事前準備ですね。枝葉末節までだーっと箇条書きにしておきます。

&lt;ul&gt;
	&lt;li&gt;最初に、sort_byモディファイアにscoreが指定されているにも関わらず、namespaceモディファイアが無い場合、エラーを発生させて終了する、という処理があります。&lt;/li&gt;
	&lt;li&gt;続いて、複数ブログの指定を展開します。blog_id、blog_ids、include_blogs、exclude_blogsなどのモディファイアが絞込み条件に適用されます。問題があった場合はエラーを発生させて終了します。&lt;/li&gt;
	&lt;li&gt;以下の条件を満たしている場合、キャッシュを破棄します。
&lt;ul&gt;
	&lt;li&gt;class_typeモディファイアでのclassの指定と、キャッシュされているエントリーのclassが異なっている場合&lt;/li&gt;
	&lt;li&gt;次のモディファイアのうちのいずれかが指定されている場合(&#39;category&#39;, &#39;categories&#39;, &#39;tag&#39;, &#39;tags&#39;, &#39;author&#39;, &#39;id&#39;, &#39;days&#39;, &#39;recently_commented_on&#39;, &#39;include_subcategories&#39;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;ここで内部動作的な処理として、テンプレート上でのoffset指定がautoで、かつ再構築実行時のCGIのクエリにoffsetという指定があったら、cgiのクエリを反映させるという処理が入ります。&lt;/li&gt;
	&lt;li&gt;モディファイア「limit」の値がautoなら、ブログの設定にある「ブログ記事の表示数」を絞込み条件に反映させます。また、limitにauto以外の指定があった場合は、モディファイアlastnをlimitの値で上書きします。&lt;/li&gt;
	&lt;li&gt;この時点でキャッシュが存在しない、かつモディファイア「category」が設定されていない場合、コンテキストにカテゴリーの設定があると絞込条件に反映されます。(モディファイア「categories」は見ない)&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;フィルターの作成&lt;/h4&gt;

&lt;h5&gt;カテゴリ&lt;/h5&gt;

カテゴリのフィルタを作成します。以下の優先順位で指定が存在するかを検査していき、最初に見つかった指定に基づいてカテゴリーのフィルタが作成されます。

&lt;ol&gt;
	&lt;li&gt;モディファイアcategory の指定&lt;/li&gt;
	&lt;li&gt;コンテキストの mt_categories の指定&lt;/li&gt;
	&lt;li&gt;コンテキストの archive_category の指定&lt;/li&gt;
	&lt;li&gt;モディファイア categories の指定&lt;/li&gt;
&lt;/ol&gt;

モディファイア「category」「categories」には「AND」「OR」「NOT」を使った複数の条件が指定できます。


&lt;h5&gt;タグ&lt;/h5&gt;

続いてタグによるフィルタの作成です。
モディファイア「tag」または「tags」の指定があれば、タグフィルタを作成します。重複して指定がある場合は「tag」の指定のみが有効になります。
モディファイア「tag」または「tags」には、「AND」「OR」「NOT」を使った複数の条件が指定できます。

&lt;h5&gt;投稿者&lt;/h5&gt;

モディファイア「author」によるフィルタを作成します。これはまあ、そのままです。

&lt;h5&gt;id&lt;/h5&gt;

モディファイア「id」によるフィルタを作成します。・・・あれ、こんなの何時の間に出来たんでしょうか。

普通にテンプレートからモディファイアを指定する場合は、現在のところ、単独のidを数字で指定することしか出来ません。
しかし、おそらくは内部利用を目的として、配列へのリファレンスも受け取ることが出来るようになっています。ここに、MTSetVarで作成した配列を渡すことで、複数のidを指定した絞込みが可能になっています。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:setvar name=&#34;my_id_array[0]&#34; value=&#34;343&#34;&amp;gt;
&amp;lt;mt:setvar name=&#34;my_id_array[1]&#34; value=&#34;314&#34;&amp;gt;
&amp;lt;mt:entries id=&#34;$my_id_array&#34;&amp;gt;
    &amp;lt;mt:entrytitle&amp;gt;
&amp;lt;/mt:entries&amp;gt;
&lt;/pre&gt;

idによる指定で直接エントリーをリストアップする、というのは、MT3では手が届かない痒い場所だったので、嬉しい機能ですね。

&lt;h5&gt;unique&lt;/h5&gt;

続いてモディファイア「unique」によるフィルタを作成します。
おそらくは、unique=&#34;1&#34;のように指定すると、エントリーが重複しないように監視してくれるフィルタが作成されるのだと思うのですが、使用例を思いつきませんでした＞＜

&lt;h5&gt;そしてboomerへ&lt;/h5&gt;

今回は詳細については触れませんが、MTOS/MT4.1の最新リビジョンではここでさらに、以下のモディファイアを組み合わせてフィルタを作成出来るようにコードが追加されています。怒涛ですね。

&lt;ul&gt;
	&lt;li&gt;scored_by&lt;/li&gt;
	&lt;li&gt;min_score&lt;/li&gt;
	&lt;li&gt;max_score&lt;/li&gt;
	&lt;li&gt;min_rate&lt;/li&gt;
	&lt;li&gt;max_rate&lt;/li&gt;
	&lt;li&gt;min_count&lt;/li&gt;
	&lt;li&gt;max_count&lt;/li&gt;
&lt;/ul&gt;

以上でフィルタ作成編は終了です。

&lt;h4&gt;エントリーの読み込み&lt;/h4&gt;

フィルタリングを行うもととなる、エントリーの母集団を作成します。
この時点でキャッシュが有効ならキャッシュが利用され、このステップは省略されます。キャッシュが無い場合には、ここまでの処理で作成された日付情報を元に、データベースからエントリーがロードされます。

日付情報を、フィルタとして適用するのではなく、ロード時に直接適用するのは、おそらく高速化を目的とした処置かと思われます。
また、この辺りからソートに関する処理も入ってくるのですが、これも高速化のために可能な限りデータベースの機能を利用しようと、複雑なフラグ管理が行われています。

日付情報の優先順位ですが、モディファイア「days」が指定されている場合、これが最優先で使われます。日付アーカイブ内であらかじめコンテキストに設定されている日付範囲よりも優先されると思います。

次に、以下のモディファイアのいずれも指定されていない場合、ブログの設定にある「ブログ記事の表示数」の設定が参照されます。この条件に当てはまる場合、これもコンテキストに設定されている日付範囲よりも優先されるような気がします。
スイッチとなるモディファイアは以下の通りです。

&#39;lastn&#39;, &#39;category&#39;, &#39;categories&#39;, &#39;tag&#39;, &#39;tags&#39;, &#39;author&#39;, &#39;days&#39;, &#39;recently_commented_on&#39;

これらのうちのいくつかは、MTEntries内部で自動的にセットされる場合もあるので、必ずしもテンプレートの記述とは一致しません。

最後に、この一覧のいずれかのモディファイアが設定されている場合には、コンテキストに設定されている日付範囲が適用されます。

こうして設定された日付範囲と、classの指定に基づいて、データベースからエントリーのロードを行い、フィルタリングに備えます。

&lt;h4&gt;フィルタリング&lt;/h4&gt;

作成されたフィルタが適用されます。全てのフィルタを通過しない限り、エントリーが実際に出力されることはありません。また、同時に、limit/offsetによるエントリー数の足切りも行われます。(フィルタが一つも存在しない場合、データベースからのロード時に足切りされています。)
また、フィルタリング後に、モディファイア「recently_commented_on」が有効な場合には専用のソートが行われます。

&lt;h4&gt;ソート&lt;/h4&gt;

基本的にソートはデータベースからのロード時に行うようになっているのですが、モディファイア「sort_by」や「sort_order」の設定内容によっては、この時点でソートを行う必要があるようです。

&lt;h4&gt;ブロック内部をビルド&lt;/h4&gt;

ここから先は、一般的なMTのブロックタグの定型処理となるので、特筆すべきことはあまり無いです。
最終的に選ばれたエントリーについて、それぞれコンテキストを設定した上でブロック内部のテンプレートをビルド、結果を連結して返却、終了、という流れです。

アンドキュメンテッドな動作としては、モディファイア「glue」による区切りの挿入が可能なことと、最終的に出力するエントリー数が0だった場合にMTElseを呼べるようになっていること、くらいでしょうか。

&lt;h3&gt;終わり&lt;/h3&gt;

最後まで読まれた方、お疲れ様でした。

これまでも細かい点の確認のためにチラッとコードを見ることはよくあったのですが、一つのルーチンを上から下につぶさに読んで全部メモをとる、というのは初めての経験で、途中で心が骨折しそうになりました。ていうか折れました。
実際後半はだいぶはしょってしまいました。ソートについてはほとんどスルー状態ですし。日付範囲の条件の優先順位あたりも、あまりに複雑でちょっと自信ないです。

まあ、基本的には自分用ドキュメントなので、後で勝手に直したり追記したりします。

ではおやすみなさい。</description>
    </item>
    
    <item>
      <title>entries動作メモ</title>
      <link>http://example.org/2008/000344.html</link>
      <pubDate>Tue, 08 Jan 2008 13:37:45 +0900</pubDate>
      
      <guid>http://example.org/2008/000344.html</guid>
      <description>
MT4.01のentries

sort_by=&#34;score&#34;でかつnamespaceが無ければエラー終了

stash{entries}があっても
    期待したクラスと一致しなければentriesを削除
    以下のモディファイアが指定されていればentriesを削除
        &#39;category&#39;, &#39;categories&#39;, &#39;tag&#39;, &#39;tags&#39;, &#39;author&#39;, &#39;id&#39;, &#39;days&#39;, &#39;recently_commented_on&#39;, &#39;include_subcategories&#39;

limit,offsetのautoを処理

stash(entries)が無い場合、カテゴリーコンテキストの中にいて、モディファイア「category」が指定されていない場合、コンテキストからカテゴリーを持ってくる。
カテゴリフィルタをコンパイルしてフィルタリストにpush
(カテゴリフィルタのソースの優先順位は モディファイア「category」 &gt; コンテキスト &gt; モディファイア「categories」かな)
モディファイアを元にtagフィルタをコンパイルしてpush
モディファイアを元にauthorフィルタをコンパイルしてpush
モディファイアidが有効ならidフィルタをコンパイルしてpush
モディファイアuniqueが有効ならuniqueフィルタをコンパイルしてpush

stash(entries)が無い場合
    モディファイア「days」があれば
        日付を設定
    無ければ
        他に有効な設定が無い場合、ブログの設定から日付の設定を行う

    フィルタ設定が無い場合
        limit設定をしてロード
    フィルタ設定がある場合
        load_iter
        フィルタリングに引っかかったら無視
        フィルタリングを通ったエントリーがオフセット数に達するまでは無視
        @entriesにpush
        pushしたエントリー数がlastnに達したらたら終了
    recentrly_commented_onがあったらソート
stash(entries)がある場合
    モディファイアやブログ設定を元にソート
    フィルタ設定がある場合
        load_iter
        フィルタリングに引っかかったら無視
        フィルタリングを通ったエントリーがオフセット数に達するまでは無視
        @entriesにpush
        pushしたエントリー数がlastnに達したらたら終了
    フィルタ設定が無い場合
        offsetを適用
        lastnを適用</description>
    </item>
    
    <item>
      <title>MTSetHashVarとMTSetVarsを組み合わせて使いたい。</title>
      <link>http://example.org/2008/000343.html</link>
      <pubDate>Tue, 08 Jan 2008 00:56:29 +0900</pubDate>
      
      <guid>http://example.org/2008/000343.html</guid>
      <description>
&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/tags/sethashvar.html&#34;&gt;MTSetHashVar | テンプレートタグリファレンス&lt;/a&gt;

MTSetHashVarというブロックタグが追加されるらしい。
ブロックタグ内でのMTSetVarタグの振る舞いが、特定のハッシュのキーに対する代入に相当する動作になる、という便利そうなタグだ。詳しくは上のリンク先のドキュメント参照してください。

しかし、現在のリポジトリ上の最新のコードで、&lt;a href=&#34;http://www.movabletype.jp/documentation/appendices/tags/setvars.html&#34;&gt;MTSetVars&lt;/a&gt;と組み合わせて使うことが出来ない。

これは今のところダメ↓

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:SetHashVar name=&#34;zep&#34;&amp;gt;
    &amp;lt;mt:SetVars&amp;gt;
        vocal=plant
        guitar=page
        bass=jones
        drums=bonzo
    &amp;lt;/mt:SetVars&amp;gt;
&amp;lt;/mt:SetHashVar&amp;gt;
...
&amp;lt;mt:var name=&#34;zep{drums}&#34;&amp;gt;   #うまく代入できておらず、出力が空文字列になってしまう
&lt;/pre&gt;

こういった書き方が出来る事を期待して、後輩の前でかっこよさげに月の表示を陰暦で書き出すというカスタマイズを「かんなづきいー」とか叫びながらやってみたところ出来なかったので色々となっかりした。

そういえば、各種日付フォーマットも外から弄れないので、何とかしたいですなあ。</description>
    </item>
    
    <item>
      <title>GregPacker&#39;sPublishingを試してみた。</title>
      <link>http://example.org/2007/000323.html</link>
      <pubDate>Fri, 21 Dec 2007 13:26:27 +0900</pubDate>
      
      <guid>http://example.org/2007/000323.html</guid>
      <description>
&lt;a href=&#34;http://junnama.alfasado.net/online/2007/12/post_153.html&#34;&gt;再構築なんてこわくない! (Junnama Online (Mirror))&lt;/a&gt;でRebuildAt1stViewプラグインの最新版が公開されていたので、インストールしてみた。

&lt;a href=&#34;http://japanese.engadget.com/2007/06/29/iphone-iloser/&#34;&gt;&lt;form mt:asset-id=&#34;41&#34; class=&#34;mt-enclosure mt-enclosure-image&#34; style=&#34;display: inline;&#34;&gt;&lt;img alt=&#34;waiting_for_iphone.png&#34; src=&#34;http://blog.aklaswad.com/images/waiting_for_iphone.png&#34; width=&#34;300&#34; height=&#34;484&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34; /&gt;&lt;/form&gt;&lt;/a&gt;

実は記事中の「GregPacker&#39;sPublishing」という名称は&lt;a href=&#34;http://blog.aklaswad.com/2007/000166.html&#34;&gt;自分が考えた&lt;/a&gt;のだが、そのくせこれまでプラグインを使ったことは無かった。すみません。

で、今回インストールしてみた感想。すっげえ良い。ここまで快適だとは思っていなかった。
このブログはSQLiteで運用しているのだが、MT標準のダイナミックパブリッシングはSQLite環境では利用できない。(PHPの標準ライブラリが非対応のため。SQLite2では利用可能。詳しくは&lt;a href=&#34;http://as-is.net/blog/archives/001270.html&#34;&gt;MT 4.0をpdo_sqliteに対応 (ただし非公開) - Ogawa::Memoranda&lt;/a&gt;を参照。)
そのため、これまでずっと長時間の再構築に耐えてきたわけですが、その呪縛からも開放されました。再構築に要する時間が10秒以下とはどういうことか。今までの苦難の日々はなんだったのか、と言いたいです。
そのうえ、Perlで再構築されるので、プラグインのphp対応を考慮する必要も無い。
良い事ずくめですねー。

ただ、インストールがちと難しいので、手順について後でまとめてみるつもりです。

新しく追加されたというタスクでの物理再構築については、ちょっと疑問。製作現場的な視点での機能追加との事ですが、一般ユーザーはむしろサイトを最新の状態に保つために、定期的にファイルを削除したいんじゃないかしら。その辺は選択できるようになると良いですね。

何はともあれすばらしいプラグインをありがとうございます。</description>
    </item>
    
    <item>
      <title>test</title>
      <link>http://example.org/2007/000316.html</link>
      <pubDate>Mon, 17 Dec 2007 11:31:42 +0900</pubDate>
      
      <guid>http://example.org/2007/000316.html</guid>
      <description>
山田サトウ</description>
    </item>
    
    <item>
      <title>MT4.1b1aにアップグレードしてみた。</title>
      <link>http://example.org/2007/000314.html</link>
      <pubDate>Sun, 16 Dec 2007 23:11:42 +0900</pubDate>
      
      <guid>http://example.org/2007/000314.html</guid>
      <description>
とりあえず後先考えずに入れ替えてみた。巷で言われていたようなアップグレードでのエラーも無く、すんなり。

色々弄りたいけど、鼻炎止めのクスリが効いてやたらと眠いので今日はこれまで。ぐー。</description>
    </item>
    
    <item>
      <title>MTOS4.1Boomerで追加されたテンプレートタグ調べました。</title>
      <link>http://example.org/2007/000310.html</link>
      <pubDate>Thu, 13 Dec 2007 14:30:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000310.html</guid>
      <description>&lt;dl&gt;
    &lt;dt&gt;MTFor&lt;/dt&gt;
    &lt;dd&gt;&lt;p&gt;指定した回数繰り返すブロックです。あると間違いなく便利なタグですねー。&lt;/p&gt;
        &lt;p&gt;次のようなモディファイアが利用できるようです。「|」で区切ったものは、同じ動作と思われる物です。&lt;/p&gt;
        &lt;ul&gt;
	&lt;li&gt;        from | start&lt;/li&gt;
	&lt;li&gt;        to | end&lt;/li&gt;
	&lt;li&gt;        increment | step&lt;/li&gt;
	&lt;li&gt;        glue&lt;/li&gt;
	&lt;li&gt;        var &lt;/li&gt;
        &lt;/ul&gt;
    &lt;/dd&gt;

以下のようなテンプレートの出力は、
&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:for start=&#34;2&#34; end=&#34;10&#34; step=&#34;2&#34; var=&#34;loopnumber&#34;&amp;gt;
&amp;lt;mt:getvar name=&#34;__counter__&#34;&amp;gt;番目のループ、数字は&amp;lt;mt:getvar name=&#34;loopnumber&#34;&amp;gt;です。&amp;lt;/mt:for&amp;gt;
&lt;/pre&gt;
このようになります。
&lt;blockquote&gt;1 番目のループ、数字は2です。&lt;br /&gt;
2 番目のループ、数字は4です。&lt;br /&gt;
3 番目のループ、数字は6です。&lt;br /&gt;
4 番目のループ、数字は8です。&lt;br /&gt;
5 番目のループ、数字は10です。&lt;/blockquote&gt;
    &lt;dt&gt;MTIncludeBlock&lt;/dt&gt;
    &lt;dd&gt;&lt;p&gt;ちょっと難しそうなブロックタグ。どうやらブロックの内側のテンプレートをビルドした結果を、contentsという変数に設定した上で、モジュールやファイルのインクルードを実行するようです。&lt;/p&gt;
&lt;p&gt;たとえば、以下の内容で、「staybold」という名前のモジュールテンプレートを作成します。
&lt;pre class=&#34;code&#34;&gt;&amp;lt;b&amp;gt;&amp;lt;mt:getvar name=&#34;contents&#34;&amp;gt;&amp;lt;/b&amp;gt;&lt;/pre&gt;

で、テンプレート中で以下のように利用すると
&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:includeblock module=&#34;staybold&#34;&amp;gt;
    &amp;lt;mt:blogname&amp;gt;
&amp;lt;/mt:includeblock&amp;gt;
&lt;/pre&gt;
こう出力されます。
&lt;blockquote&gt;
&amp;lt;b&amp;gt;
    My First Blog
&amp;lt;/b&amp;gt;
&lt;/blockquote&gt;
これまた新機能のグローバルテンプレートと組み合わせると便利かもしれません。&lt;/p&gt;
&lt;p&gt;右側のインクルードモジュールへのショートカットにリストされないですね。フィードバックしまっせ。&lt;/p&gt;

    &lt;dt&gt;MTSetVars&lt;/dt&gt;
    &lt;dd&gt;複数の変数を一括で設定できるブロックタグです。一行に一つずつ、「変数名」=「値」と言う形で記述します。ブロックの中に書かれたMTタグも展開される模様です。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:setvars&amp;gt;
blogname=&amp;lt;mt:blogname&amp;gt;
version=&amp;lt;mt:version&amp;gt;
&amp;lt;/mt:setvars&amp;gt;
&amp;lt;mt:getvar name=&#34;blogname&#34;&amp;gt;は&amp;lt;mt:getvar name=&#34;version&#34;&amp;gt;で作成されています。
&lt;/pre&gt;
上記テンプレートの出力は次のようになります。
&lt;blockquote&gt;My First Blogはboomerで作成されています。&lt;/blockquote&gt;

    &lt;/dd&gt;
    &lt;dt&gt;MTBlogTemplateSetID&lt;/dt&gt;
    &lt;dd&gt;&lt;a href=&#34;http://www.sixapart.jp/news/2007/07/11-1350.html&#34;&gt;MT4.0リリース時の開発者向けカンファレンス&lt;/a&gt;でも触れられていた、テンプレートの一括操作に関するタグでしょうか。詳細不明。いまのところ、管理画面からテンプレートセットを操作できる箇所は見あたりません。coreのレジストリにもTemplateSetについての記載があるのですが、登録されているのはデフォルトのテンプレートセットひとつのみでした。これから機能が追加されていくのでしょう。夢がひろがりんぐですね。&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;以下、その他追加されたと思われるテンプレートタグの一覧です。適当にdiffをとっただけなので間違ってたらごめんなさい。&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;MTIfBlog?&lt;/li&gt;
	&lt;li&gt;MTIfAuthor?&lt;/li&gt;
	&lt;li&gt;MTAuthorHasEntry?&lt;/li&gt;
	&lt;li&gt;MTAuthorHasPage?&lt;/li&gt;
	&lt;li&gt;MTAuthorUserpicAsset&lt;/li&gt;
	&lt;li&gt;MTEntryAuthorUserpicAsset&lt;/li&gt;
	&lt;li&gt;MTCommenterUserpicAsset&lt;/li&gt;
	&lt;li&gt;MTNotifyScript&lt;/li&gt;
	&lt;li&gt;MTCommenterUsername&lt;/li&gt;
	&lt;li&gt;MTCommenterUserpic&lt;/li&gt;
	&lt;li&gt;MTCommenterUserpicURL&lt;/li&gt;
	&lt;li&gt;MTCommenterID&lt;/li&gt;
	&lt;li&gt;MTCommenterURL&lt;/li&gt;
	&lt;li&gt;MTAuthorUserpic&lt;/li&gt;
	&lt;li&gt;MTAuthorUserpicURL&lt;/li&gt;
	&lt;li&gt;MTEntryClassLabel&lt;/li&gt;
	&lt;li&gt;MTEntryAuthorUserpic&lt;/li&gt;
	&lt;li&gt;MTEntryAuthorUserpicURL&lt;/li&gt;
	&lt;li&gt;MTCommentLink&lt;/li&gt;
	&lt;li&gt;MTCategoryCommentCount&lt;/li&gt;
	&lt;li&gt;wrap_text&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;記事中の記述については、執筆時点の開発版に基づいています。将来的には色々変更があると思います。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mtosがベータテスト開始</title>
      <link>http://example.org/2007/000309.html</link>
      <pubDate>Thu, 13 Dec 2007 02:06:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000309.html</guid>
      <description>
&lt;form mt:asset-id=&#34;36&#34; class=&#34;mt-enclosure mt-enclosure-image&#34;&gt;&lt;img alt=&#34;boomer20071212_2.png&#34; src=&#34;http://blog.aklaswad.com/images/boomer20071212_2.png&#34; width=&#34;265&#34; height=&#34;355&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34;/&gt;&lt;/form&gt;ついにMTOS(オープンソース版のMovable Type)のベータテストが始まった模様です。
早速インストールしてみましたが、新規のインストールでは、特に致命的な問題も無く動いている模様。

&lt;a href=&#34;http://www.movabletype.org/opensource/nightlies/&#34;&gt;ナイトリービルド&lt;/a&gt;をダウンロードすると英語版となりますが、&lt;a href=&#34;http://code.sixapart.com/svn/movabletype/branches/boomer/&#34;&gt;subversionのリポジトリ&lt;/a&gt;からexportして自前でmakeすれば日本語版のパッケージを入手することも可能です(もともとログインユーザーごとに言語設定できるので、大きな違いではないのですが)。MTのパッケージのmakeについては、&lt;a href=&#34;http://www.sixapart.jp/techtalk/2006/11/movable_type_wheeljack.html&#34;&gt;こちら&lt;/a&gt;に解説があります。

&lt;br clear=&#34;both&#34; /&gt;

&lt;form mt:asset-id=&#34;37&#34; class=&#34;mt-enclosure mt-enclosure-image&#34;&gt;&lt;img alt=&#34;boomer20071212_1.png&#34; src=&#34;http://blog.aklaswad.com/images/boomer20071212_1.png&#34; width=&#34;433&#34; height=&#34;132&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34;/&gt;&lt;/form&gt;

&lt;a href=&#34;http://www.movabletype.org/2007/12/movable_type_open_source.html&#34;&gt;Movable Type Open Source - MovableType.org - Home for the MT Community&lt;/a&gt;
Anil Dashの、これまでのMovable Typeの歩みと、オープンソースにいたるまでの経緯についての記事が公開されています。興味深いので、あとでゆっくり読みたいと思います。英語ですが頑張ります。&lt;a href=&#34;http://www.iknow.co.jp/user/aklaswad&#34;&gt;iKnow&lt;/a&gt;。

記事の最後、MTOSについての簡単なFAQがあったので、雑ですが訳してみました。

&lt;ul&gt;
	&lt;li&gt;MTOSには、Movable Type 4.0 の全ての機能が含まれています。さらに、細かい追加機能やバグフィックスを含みます。&lt;/li&gt;
	&lt;li&gt;MT4で動作する全ての&lt;a href=&#34;http://plugins.movabletype.org/&#34;&gt;プラグイン&lt;/a&gt;、テーマ、テンプレート、デザイン、そしてAPIは、MTOSで動作します。MTOSは、また、&lt;a href=&#34;http://www.danga.com/memcached/&#34;&gt;memcached&lt;/a&gt;のような他のSix Apart製のオープンソース技術と連携します。&lt;/li&gt;
	&lt;li&gt;MTOSは、ビルトインの機能だけで、無制限のブログの運用、無制限のユーザーの登録、OpenIDでのサインインが可能です。MTOSは、プラグインを必要とせずこれらの要件を満たせる、唯一のオープンソースのブログツールの一つです。&lt;/li&gt;
	&lt;li&gt;商用ライセンスのMovable Type にお金を払った人には、技術サポートや、プラグインやテーマなどのカスタムのアドオンを通じて、更なる利益を還元していきます。&lt;/li&gt;
	&lt;li&gt;MTOSは、私たちが販売するMTプラットフォームの上位にあたる、Enterprise SolutionやCommunity Solution、個人、商用ライセンスのような、技術サポートを含む&lt;a href=&#34;http://www.movabletype.com/products/&#34;&gt;有償のソフトウェア製品&lt;/a&gt;に補完されています。&lt;/li&gt;
	&lt;li&gt;MTOSのコードを取得するための&lt;a href=&#34;http://movabletype.org/opensource/getting-the-source.html&#34;&gt;公開のSubversionリポジトリ&lt;/a&gt;と、&lt;a href=&#34;http://www.movabletype.org/opensource/nightlies/&#34;&gt;ナイトリービルド&lt;/a&gt;があります。&lt;/li&gt;
	&lt;li&gt;公式の安定版がリリースされれば、movabletype.orgでも公開されるでしょう。&lt;/li&gt;
	&lt;li&gt;あなたがMTOSプロジェクトとMTのコミュニティに貢献する手段は、movabletype.orgで見つけられるでしょう。&lt;/li&gt;
	&lt;li&gt;MTOSのサポートは、コミュニティのメンバーによって提供されます(&lt;a href=&#34;http://wiki.movabletype.org/&#34;&gt;新しい Movable Type Wiki&lt;/a&gt;は、良いスタート地点です)。Six Apartからのプロフェッショナルなサポートを希望する場合、既存のMovable Type 製品の&lt;a href=&#34;http://www.movabletype.com/download/&#34;&gt;有償標準ライセンス&lt;/a&gt;を購入することが可能です。&lt;/li&gt;
	&lt;li&gt;Movable Type Open Sourceは標準GPLライセンスの下にリリースされています。&lt;/li&gt;
	&lt;li&gt;私たちは、他のオープンソースプロジェクトでの、MTOSの全体または一部の再配布と再利用を、歓迎し、また、応援します。あなたが一緒に仕事をしたいなら、コンタクトください。&lt;/li&gt;
&lt;/ul&gt;

詳細は、&lt;a href=&#34;http://www.movabletype.org/opensource/&#34;&gt;こちら&lt;/a&gt;で確認してください、とのこと。</description>
    </item>
    
    <item>
      <title>tracにticketを作成するブックマークレットを自作する</title>
      <link>http://example.org/2007/000302.html</link>
      <pubDate>Fri, 07 Dec 2007 18:06:52 +0900</pubDate>
      
      <guid>http://example.org/2007/000302.html</guid>
      <description>
tracにチケットを書くのって、やたら色々書く場所があってめんどくさくね?
ブックマークレットからtracのチケット作成画面を開けたら便利かのう、と作ってみました。

tracで新規チケットを開いたときの初期値は、URLに指定することが出来ます。ちゃんとマニュアルにも書いてありますね。
</description>
    </item>
    
    <item>
      <title>TagMan 0.1</title>
      <link>http://example.org/2007/000301.html</link>
      <pubDate>Fri, 07 Dec 2007 01:58:51 +0900</pubDate>
      
      <guid>http://example.org/2007/000301.html</guid>
      <description>名前は、今適当につけたのですが、中々気に入ってます。タグ-マニュアル、の意味ですよ。タグ男、じゃないですよ。

嘘です。タグ男の意味でつけました。僕は昔から何でもマンをつければかっこいいと信じてるんです(告白)。ライダーマンとか戦うマンとか。</description>
    </item>
    
    <item>
      <title>TagMan</title>
      <link>http://example.org/2007/000300.html</link>
      <pubDate>Fri, 07 Dec 2007 01:44:48 +0900</pubDate>
      
      <guid>http://example.org/2007/000300.html</guid>
      <description>&lt;h3&gt;インストール&lt;/h3&gt;

解凍して出てきたファイル中から、「plugins/TagMan」を、お使いのmtのpluginsディレクトリにアップロードしてください。

&lt;h3&gt;動作環境&lt;/h3&gt;

MT4で動作します。MT3.x以前のバージョンでは動きません。

&lt;h3&gt;設定&lt;/h3&gt;

特になし。

&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;form mt:asset-id=&#34;33&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TagMan0.1.zip&#34;&gt;TagMan0.1.zip&lt;/a&gt;&lt;/form&gt;

&lt;h3&gt;チェンジログ&lt;/h3&gt;
&lt;dt&gt;0.1 (20071206)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;最初のリリース&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;33&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TagMan0.1.zip&#34;&gt;TagMan0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>OpenIDでログインできない問題をFoafファイルの設置によって回避する</title>
      <link>http://example.org/2007/000251.html</link>
      <pubDate>Wed, 17 Oct 2007 11:11:45 +0900</pubDate>
      
      <guid>http://example.org/2007/000251.html</guid>
      <description>test</description>
    </item>
    
    <item>
      <title> web activities on October 14, 2007 </title>
      <link>http://example.org/2007/000247.html</link>
      <pubDate>Mon, 15 Oct 2007 00:13:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000247.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:41:39&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://labaq.com/archives/50790495.html&#34;&gt;らばQ : ライオンと虎の交配種「ライガー」は珍しさよりも見た目のインパクトが凄まじい&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=science&amp;amp;blog_id=2&#34;&gt;science&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%E9%A4%D0Q&amp;amp;blog_id=2&#34;&gt;らばQ&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C6%B0%CA%AA&amp;amp;blog_id=2&#34;&gt;動物&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;7m! 見た目はすごい。でもちょっと悲しいね。獣神。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October 12, 2007 </title>
      <link>http://example.org/2007/000246.html</link>
      <pubDate>Sat, 13 Oct 2007 00:13:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000246.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:07:09&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://urasoku.blog106.fc2.com/blog-entry-150.html&#34;&gt;ハムスター速報　２ろぐ ここ１週間で起きた修羅場&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=2ch&amp;amp;blog_id=2&#34;&gt;2ch&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C3%CB%BD%F7&amp;amp;blog_id=2&#34;&gt;男女&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;はやく・・・続きを・・・&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:13:23&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://jp.techcrunch.com/archives/and-the-walls-came-tumbling-down-madonna-dumps-record-industry/&#34;&gt;TechCrunch Japanese アーカイブ ? そして壁は崩れはじめた—マドンナ、レコード業界を捨てる&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%D3%A5%B8%A5%CD%A5%B9&amp;amp;blog_id=2&#34;&gt;ビジネス&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B2%BB%B3%DA&amp;amp;blog_id=2&#34;&gt;音楽&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;napsterとmp3.comによって予言された、来るべき世界。/「今の流通モデルがWikipediaの脚注に書かれる日も近い。」&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:28:36&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://blog.tkmr.org/tatsuya/show/399-fooo-name-web&#34;&gt;ソーシャルグラフ共有サイトと言うかなんと言うか、Fooo.name!!というWebサービスを作った:TKMR.blog.show&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=web%A5%B5%A1%BC%A5%D3%A5%B9&amp;amp;blog_id=2&#34;&gt;webサービス&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%BD%A1%BC%A5%B7%A5%E3%A5%EB%A5%B0%A5%E9%A5%D5&amp;amp;blog_id=2&#34;&gt;ソーシャルグラフ&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/329561772&#34;&gt;10:47:18&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;会社。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/329873422&#34;&gt;13:54:14&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;助六でつけ麺食べたー。うーん今日はイマイチな出来。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;14:02:46&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://alfalfa.livedoor.biz/archives/51142887.html&#34;&gt;かわいそうな奴らだな、アンチ亀田って。:アルファルファモザイク&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=2ch&amp;amp;blog_id=2&#34;&gt;2ch&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%CD%A4%B3%A4%C0%A4%A4%A4%B9%A4%AD&amp;amp;blog_id=2&#34;&gt;ねこだいすき&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CD%A5%BF&amp;amp;blog_id=2&#34;&gt;ネタ&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;感動した!&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:49:31&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.technobahn.com/cgi-bin/news/read2?f=200710121610&#34;&gt;Technobahn ニュース : ボルトガル、壁の中からローマ時代の貨幣がざっくざく&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;ボボボ?ボルトガル&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October 11, 2007 </title>
      <link>http://example.org/2007/000245.html</link>
      <pubDate>Fri, 12 Oct 2007 00:13:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000245.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:31:24&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://d.hatena.ne.jp/amachang/20071010/1192012056&#34;&gt;IT戦記 - 一行で IE の JavaScript を高速化する方法&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=hack&amp;amp;blog_id=2&#34;&gt;hack&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October 10, 2007 </title>
      <link>http://example.org/2007/000244.html</link>
      <pubDate>Thu, 11 Oct 2007 00:13:06 +0900</pubDate>
      
      <guid>http://example.org/2007/000244.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm1241482&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm1241482&#34;&gt;ニコニコ動画(RC)‐ベンチャー指向プログラマ - 伊藤直也さん&lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;14:25:08&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm1241482&#34;&gt;ニコニコ動画(RC)‐ベンチャー指向プログラマ - 伊藤直也さん&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=naoya&amp;amp;blog_id=2&#34;&gt;naoya&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%A2%A4%C8%A4%C7%B8%AB%A4%EB&amp;amp;blog_id=2&#34;&gt;あとで見る&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%CF%A4%C6%A4%CA&amp;amp;blog_id=2&#34;&gt;はてな&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CB%A5%B3%A5%CB%A5%B3%C6%B0%B2%E8&amp;amp;blog_id=2&#34;&gt;ニコニコ動画&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/324573432&#34;&gt;14:40:05&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;カップラーメンで出さなきゃいけない内袋は必ず一覧をわかりやすい場所に明記するべし!法律作れ!&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:20:57&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://blog.livedoor.jp/dankogai/archives/50928160.html&#34;&gt;404 Blog Not Found:ニコニコ動画(RC2)発表会にオレが来ましたよ&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=nicovideo&amp;amp;blog_id=2&#34;&gt;nicovideo&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;「日本発のネットサービス→ジャパネット」ふいた&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/324811752&#34;&gt;17:08:21&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;暴力的な睡魔が襲ってきた&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/324850062&#34;&gt;17:32:09&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E7%A9%BA%E6%B8%AF%E3%82%B3%E3%83%BC%E3%83%89&#34;&gt;http://ja.wikipedia.org/wiki/%E7%A9%BA%E6%B8%AF%E3%82%B3%E3%83%BC%E3%83%89&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;twitter で暗号が飛び交っていたら確認するページ  *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/325015662&#34;&gt;19:10:23&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;きたくまん *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  9, 2007 </title>
      <link>http://example.org/2007/000243.html</link>
      <pubDate>Wed, 10 Oct 2007 00:13:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000243.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:16:49&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://anond.hatelabo.jp/20071008194604&#34;&gt;裸眼&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C1%FD%C5%C4&amp;amp;blog_id=2&#34;&gt;増田&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C6%C9%A4%DF%CA%AA&amp;amp;blog_id=2&#34;&gt;読み物&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;シュレーディンガーの乳首・・・か。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:32:20&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://zero.s10.xrea.com/archives/2007/10/post.php&#34;&gt;やっとできたぜ。。 - 因果の螺旋&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=xrea&amp;amp;blog_id=2&#34;&gt;xrea&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;CMSへの自動広告挿入対策&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;12:12:44&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://jp.techcrunch.com/archives/yahoos-ian-rogers-to-music-industry-inconvenience-doesnt-scale/&#34;&gt;TechCrunch Japanese アーカイブ ? YahooのIan Rogers、音楽産業に苦言— 「不便の押し付けはいいかげんにしろ」&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=drm&amp;amp;blog_id=2&#34;&gt;drm&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=yahoo%21&amp;amp;blog_id=2&#34;&gt;yahoo!&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B2%BB%B3%DA&amp;amp;blog_id=2&#34;&gt;音楽&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/321878282&#34;&gt;13:56:38&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;油そばを eat it! *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  8, 2007 </title>
      <link>http://example.org/2007/000242.html</link>
      <pubDate>Tue, 09 Oct 2007 00:13:11 +0900</pubDate>
      
      <guid>http://example.org/2007/000242.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:10:40&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.milkstand.net/fsgarage/archives/001099.html&#34;&gt;F&#39;s Garage：HPのサーバーが１万円台から！&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=pc&amp;amp;blog_id=2&#34;&gt;pc&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;後で検討する&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm1217294&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm1217294&#34;&gt;ニコニコ動画(RC)‐ニコニコランキングSP?γ開始から半年だよスペシャル！ part1&lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:57:59&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm1217294&#34;&gt;ニコニコ動画(RC)‐ニコニコランキングSP?γ開始から半年だよスペシャル！ part1&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%A2%A4%C8%A4%C7%B8%AB%A4%EB&amp;amp;blog_id=2&#34;&gt;あとで見る&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%DE%A4%C8%A4%E1&amp;amp;blog_id=2&#34;&gt;まとめ&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CB%A5%B3%A5%CB%A5%B3%C6%B0%B2%E8&amp;amp;blog_id=2&#34;&gt;ニコニコ動画&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;01:12:23&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://d.hatena.ne.jp/zoot32/20071006#p1&#34;&gt;空中キャンプ - かごの中の欲望&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%EC%A5%B8&amp;amp;blog_id=2&#34;&gt;レジ&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;買う側としては良く分かる。/実際にレジ打ちしていた経験から言えば、平凡すぎて印象に残らないよ。よく覚えてるのは、弁当二個+ポテチx3+ダイエット発泡酒500mlx4とか・・・&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  6, 2007 </title>
      <link>http://example.org/2007/000241.html</link>
      <pubDate>Sun, 07 Oct 2007 00:13:13 +0900</pubDate>
      
      <guid>http://example.org/2007/000241.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/B00005QGAV/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00005QGAV.09._THUMBZZZ_.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/315890832&#34;&gt;16:26:49&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/dp/B00005QGAV/&#34;&gt;http://www.amazon.co.jp/dp/B00005QGAV/&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;部屋の掃除しながらデンジャラス。踊る掃除夫現る。　&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  5, 2007 </title>
      <link>http://example.org/2007/000240.html</link>
      <pubDate>Sat, 06 Oct 2007 00:13:06 +0900</pubDate>
      
      <guid>http://example.org/2007/000240.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:14:39&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://anond.hatelabo.jp/20071004214154&#34;&gt;俺がテレビ・映画を見られない理由は、リア充を見るのが辛いから。&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%BF%CD%C0%B8&amp;amp;blog_id=2&#34;&gt;人生&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C1%FD%C5%C4&amp;amp;blog_id=2&#34;&gt;増田&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;二桁のブックマークを集めたはてなカースト上位のこの増田に激しく劣等感を増幅された。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  4, 2007 </title>
      <link>http://example.org/2007/000239.html</link>
      <pubDate>Fri, 05 Oct 2007 00:13:54 +0900</pubDate>
      
      <guid>http://example.org/2007/000239.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;13:13:53&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://awasete.com/bar.phtml?u=http%3A%2F%2Fstudiomd.jp%2F&amp;p=http%3A%2F%2Fblog.aklaswad.com%2F&#34;&gt;青森、八戸のホームページ作成代行、ウェブ制作-studio md&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/311021792&#34;&gt;14:32:19&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;石焼きぴびんば食べた。イマイチだった。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;14:39:27&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://wiredvision.jp/news/200710/2007100319.html&#34;&gt;WIRED VISION / 価格は購入者が決定：『レディオヘッド』の戦略は成功の模様&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=radiohead&amp;amp;blog_id=2&#34;&gt;radiohead&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%DE%A1%BC%A5%B1%A5%C6%A5%A3%A5%F3%A5%B0&amp;amp;blog_id=2&#34;&gt;マーケティング&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/311413312&#34;&gt;18:55:01&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;そそくさと帰宅。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  3, 2007 </title>
      <link>http://example.org/2007/000238.html</link>
      <pubDate>Thu, 04 Oct 2007 00:13:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000238.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:16:52&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://subtech.g.hatena.ne.jp/antipop/20071002/1191329729&#34;&gt;subtech - subpop - 環境再構築、インストールしたもの&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B3%AB%C8%AF%B4%C4%B6%AD&amp;amp;blog_id=2&#34;&gt;開発環境&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;今度参考にする&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/308768142&#34;&gt;15:17:51&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ホッテントリ読みながら爪切りしてたら深爪した。デンジャラス。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;15:30:39&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://sukebeningen.blog46.fc2.com/blog-entry-82.html&#34;&gt;SUKEBENINGENSUKEBENINGEN オタクが上手いという絵は大抵の場合、上手い絵じゃない。&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%CC%A1%B2%E8&amp;amp;blog_id=2&#34;&gt;漫画&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;わかるようなわからないような。とりあえず美大出身で「絵のうまい」作家の実例を挙げてほしいとこ。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;15:35:51&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://urasoku.blog106.fc2.com/blog-entry-140.html&#34;&gt;ハムスター速報　２ろぐ こんにゃくで尻をペチン、ペチンと叩いてるのが彼氏にバレタ…&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%A2%A4%C8%A4%C7%C6%C9%A4%E0&amp;amp;blog_id=2&#34;&gt;あとで読む&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/309084342&#34;&gt;19:01:07&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;かえるです&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  2, 2007 </title>
      <link>http://example.org/2007/000237.html</link>
      <pubDate>Wed, 03 Oct 2007 00:13:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000237.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/306473132&#34;&gt;14:24:53&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;コンビニの肉うどん食べた。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/306479112&#34;&gt;14:30:26&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;最近米食べてないな。君は米を食べているのか?日本の米を食べているのか?&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on October  1, 2007 </title>
      <link>http://example.org/2007/000236.html</link>
      <pubDate>Tue, 02 Oct 2007 00:13:08 +0900</pubDate>
      
      <guid>http://example.org/2007/000236.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/304031782&#34;&gt;12:06:46&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;引き続き体調テラ悪ろし。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;13:11:31&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.takosuke.net/~seraphis/archives/2007/07/mt4.html&#34;&gt;MT4 コメントポストでエラーになる場合 - チラシの裏&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/304267322&#34;&gt;14:51:13&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ラーメンブーム終了。パスタブームがやってきた。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/B000FGR99E/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B000FGR99E.09._THUMBZZZ_.jpg&#34; alt=&#34;Amazon.co.jp： エースコンバットX スカイズ・オブ・デセプション: ゲーム&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;17:50:39&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/B000FGR99E&#34;&gt;Amazon.co.jp： エースコンバットX スカイズ・オブ・デセプション: ゲーム&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=amazon&amp;amp;blog_id=2&#34;&gt;amazon&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%B2%A1%BC%A5%E0&amp;amp;blog_id=2&#34;&gt;ゲーム&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%CD%DF%A4%B7%A4%A4&amp;amp;blog_id=2&#34;&gt;欲しい&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;今更ながらnamcoのps以降の路線好きとして。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 30, 2007 </title>
      <link>http://example.org/2007/000235.html</link>
      <pubDate>Mon, 01 Oct 2007 00:13:08 +0900</pubDate>
      
      <guid>http://example.org/2007/000235.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:55:36&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://d.hatena.ne.jp/kaien/20071001/p1&#34;&gt;Something Orange - 　似非オタでもＯＫ！&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%AA%A5%BF%A5%AF&amp;amp;blog_id=2&#34;&gt;オタク&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;「そしてそのことを非難されても困る。」知識が半端で困るのは消費者ではなくコミュニティ。スポーツの場合ははっきりしているよね。オタク界隈については良く分からん。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;19:25:48&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://blog.livedoor.jp/dankogai/archives/50922070.html&#34;&gt;404 Blog Not Found:tips - sshでパスワード無しログイン&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=dankogai&amp;amp;blog_id=2&#34;&gt;dankogai&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=ssh&amp;amp;blog_id=2&#34;&gt;ssh&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=tips&amp;amp;blog_id=2&#34;&gt;tips&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 29, 2007 </title>
      <link>http://example.org/2007/000234.html</link>
      <pubDate>Sun, 30 Sep 2007 00:13:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000234.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:55:14&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Laaq_ch0hsY&#34;&gt;YouTube - から笑う孤島の鬼　by 筋少&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B6%DA%C6%F9%BE%AF%BD%F7%C2%D3&amp;amp;blog_id=2&#34;&gt;筋肉少女帯&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;この曲こんなにかっこよかったのか。。。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Wk6wCSp1Hco&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/Wk6wCSp1Hco/default.jpg&#34; width=&#34;112&#34; alt=&#34;YouTube - 空手バカボン - ケラ＆大槻モヨコ［TV Live/1988年］&#34; title=&#34;YouTube - 空手バカボン - ケラ＆大槻モヨコ［TV Live/1988年］&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;10:27:07&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Wk6wCSp1Hco&#34;&gt;YouTube - 空手バカボン - ケラ＆大槻モヨコ［TV Live/1988年］&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B6%F5%BC%EA%A5%D0%A5%AB%A5%DC%A5%F3&amp;amp;blog_id=2&#34;&gt;空手バカボン&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;動いている空手バカボンをはじめて見た。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;11:50:04&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://labaq.com/archives/50781519.html&#34;&gt;らばQ : 化粧というより特殊メイクなコンテストのビフォーアフターを見た人の反応&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CD%A5%BF&amp;amp;blog_id=2&#34;&gt;ネタ&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%CA%D1%BF%C8&amp;amp;blog_id=2&#34;&gt;変身&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;「かけ離れた所で見れば綺麗、綺麗からはかけ離れている」&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/300341052&#34;&gt;12:21:25&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;相変わらずノドが痛い。。。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 28, 2007 </title>
      <link>http://example.org/2007/000233.html</link>
      <pubDate>Sat, 29 Sep 2007 01:13:12 +0900</pubDate>
      
      <guid>http://example.org/2007/000233.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298374732&#34;&gt;15:51:26&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;皆さん、バルタン星人出来ますか？&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298375592&#34;&gt;15:52:29&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;人差し指と中指、薬指と小指をくっつけて、中指と薬指の間だけ広げるってやつ。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298376142&#34;&gt;15:53:09&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;はい。右手も左手も出来ますね。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298376522&#34;&gt;15:53:37&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;では、両手をぴったりと合わせてやってみましょう。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298377592&#34;&gt;15:54:44&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;いきなり出来なくなりましたね。以上、今日の発見マンでした。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298388012&#34;&gt;16:02:41&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;あれー。俺だけなのかな。きっとギタリストは特別なんですよ。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;16:38:17&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://portal.nifty.com/2007/09/28/a/&#34;&gt;@nifty：デイリーポータルZ：桃にパンツを履かせる&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=dpz&amp;amp;blog_id=2&#34;&gt;dpz&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;氷結ピーチふいた&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/298629702&#34;&gt;18:47:26&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;帰るぜ。週末を走り抜ける、いや、眠り抜けるぜ ! *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 27, 2007 </title>
      <link>http://example.org/2007/000232.html</link>
      <pubDate>Fri, 28 Sep 2007 00:13:12 +0900</pubDate>
      
      <guid>http://example.org/2007/000232.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:41:42&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://japanese.engadget.com/2007/09/26/optimus-maximus/&#34;&gt;Optimus Maximus、グラフィックの表示に成功 - Engadget Japanese&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=keyboard&amp;amp;blog_id=2&#34;&gt;keyboard&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;夢のキーボード(ラブゲイツ的な意味で)&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4063725707/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4063725707.09._THUMBZZZ_.jpg&#34; alt=&#34;Amazon.co.jp： ムーたち 1 (1): 本: 榎本 俊二&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;12:50:35&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4063725707&#34;&gt;Amazon.co.jp： ムーたち 1 (1): 本: 榎本 俊二&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=books&amp;amp;blog_id=2&#34;&gt;books&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=manga&amp;amp;blog_id=2&#34;&gt;manga&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B1%DD%CB%DC%BD%D3%C6%F3&amp;amp;blog_id=2&#34;&gt;榎本俊二&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;昨日買った。危うく、電車の中で「ね」と「む」の似て非なる感を全身で表現するところだった。ゴッド・ブレス・ユー。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/295992172&#34;&gt;14:52:52&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ラーメン喫茶で野菜ラーメン。麺が ・・・ *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/296002072&#34;&gt;15:00:45&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;向かいの席から聞こえて来た IT 起業家の会話にスープふいた。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 26, 2007 </title>
      <link>http://example.org/2007/000231.html</link>
      <pubDate>Thu, 27 Sep 2007 00:13:06 +0900</pubDate>
      
      <guid>http://example.org/2007/000231.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;09:20:47&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://portal.nifty.com/2007/09/22/c/&#34;&gt;@nifty：デイリーポータルZ：「トーストを両手に持つとダメになる」に関する考察&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%C7%A5%A4%A5%EA%A1%BC%A5%DD%A1%BC%A5%BF%A5%EBz&amp;amp;blog_id=2&#34;&gt;デイリーポータルz&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;氷結ふいた&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293293372&#34;&gt;09:22:11&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;皆様おはようございます。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293623182&#34;&gt;12:56:03&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ぺこり病は生活習慣病だろうか。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293728742&#34;&gt;14:13:25&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;油そば食べた。すっかり常連扱いでござい。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4798112461/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798112461.09._THUMBZZZ_.jpg&#34; alt=&#34;Amazon.co.jp： Movable Type WEBデザインの新しいルール: 本: 荒木 勇次郎/松永 英明&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;14:46:09&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4798112461&#34;&gt;Amazon.co.jp： Movable Type WEBデザインの新しいルール: 本: 荒木 勇次郎/松永 英明&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;ほほう。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;15:33:10&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://seoi.net/sokan/&#34;&gt;相関図ジェネレータ&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%AA%A4%E2%A4%B7%A4%ED%A4%A4&amp;amp;blog_id=2&#34;&gt;おもしろい&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%B8%A5%A7%A5%CD%A5%EC%A1%BC%A5%BF&amp;amp;blog_id=2&#34;&gt;ジェネレータ&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C1%EA%B4%D8%BF%DE&amp;amp;blog_id=2&#34;&gt;相関図&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;後で大いに利用させていただこう&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293876972&#34;&gt;16:03:29&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;激しく仕事を片付ける前の静けさ。 *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293878762&#34;&gt;16:04:49&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;7-11 のなめらかパンプリン。 UMAI! *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4873113296/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873113296.09._THUMBZZZ_.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/293928212&#34;&gt;16:38:55&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/JavaScript-%E7%AC%AC5%E7%89%88-David-Flanagan/dp/4873113296/ref=sr_1_1/249-4153720-3245119?ie=UTF8&amp;s=books&amp;qid=1190792184&amp;sr=1-1&#34;&gt;http://www.amazon.co.jp/JavaScript-%E7%AC%AC5%E7%89%88-David-Flanagan/dp/4873113296/ref=sr_1_1/249-4153720-3245119?ie=UTF8&amp;s=books&amp;qid=1190792184&amp;sr=1-1&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;そうだこれ買わなきゃ  *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/294140412&#34;&gt;19:01:13&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://usokomaker.com/calendar/?a=Maker&amp;oo=aklaswad&#34;&gt;http://usokomaker.com/calendar/?a=Maker&amp;oo=aklaswad&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;ま ・・・ る ・・・ さ ・・・ 俺はそんなに丸いのか ・・・  *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 25, 2007 </title>
      <link>http://example.org/2007/000230.html</link>
      <pubDate>Wed, 26 Sep 2007 00:13:27 +0900</pubDate>
      
      <guid>http://example.org/2007/000230.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:48:19&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://templete.soul-drop.com/MovableType%E3%81%AE%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%81%AEURL%E3%82%92%E8%87%AA%E5%8B%95%E7%9A%84%E3%81%AB%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%8C%96/&#34;&gt;MovableTypeのフォルダとファイル名のURLを自動的に日本語化:上級ＭＴテンプレートカスタム&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=mt&amp;amp;blog_id=2&#34;&gt;mt&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;mod_rewriteを使って、カテゴリのlabelをbasenameにマップするハック。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:52:32&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://bogusne.ws/article/57045426.html&#34;&gt;【オピニオン】突然仕事辞めて友だち代役に…非常識な若者にNo！ : bogusnews&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CD%A5%BF&amp;amp;blog_id=2&#34;&gt;ネタ&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;油断してたら、オチのリンク見るまで何の話だか分からなかった。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;08:14:17&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://junnama.alfasado.net/online/2007/09/mt_mtsearchcgi.html&#34;&gt;MTからデータベースへのクエリの発行回数を減らす (mt-search.cgiを例にとって)。 (Junnama Online (Mirror))&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=mysql&amp;amp;blog_id=2&#34;&gt;mysql&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%CA%D9%B6%AF%A4%CB%A4%CA%A4%EB&amp;amp;blog_id=2&#34;&gt;勉強になる&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/291120002&#34;&gt;09:24:25&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ノドが凄く痛い。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/291258562&#34;&gt;10:51:44&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;出社したー *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;11:08:00&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://anond.hatelabo.jp/20070924211422&#34;&gt;反省文&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%A4%A4%A4%CF%C3&amp;amp;blog_id=2&#34;&gt;いい話&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%BF%CD%C0%B8&amp;amp;blog_id=2&#34;&gt;人生&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C1%FD%C5%C4&amp;amp;blog_id=2&#34;&gt;増田&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;こういう話には弱いなあ。なんだか申し訳ない気持ちになる。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/291291132&#34;&gt;11:11:09&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://japanese.engadget.com/2007/09/24/psp-ds-lite/&#34;&gt;http://japanese.engadget.com/2007/09/24/psp-ds-lite/&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;時代は PSP  *Tw*&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;12:59:58&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.h-fj.com/blog/archives/2007/09/25-123904.php&#34;&gt;The blog of H.Fujimoto：画像を挿入したときにformタグがつく理由&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=movable%20type&amp;amp;blog_id=2&#34;&gt;movable type&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;知らなかった・・・&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;15:02:51&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://teahut.sakura.ne.jp/b/2007-09-24-1.html&#34;&gt;たけまる / OAuth - リソースへのアクセスを代行するプロトコル&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=oauth&amp;amp;blog_id=2&#34;&gt;oauth&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;OAuthのわかりやすい解説。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 24, 2007 </title>
      <link>http://example.org/2007/000229.html</link>
      <pubDate>Tue, 25 Sep 2007 00:13:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000229.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/288859402&#34;&gt;10:19:25&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;起きた。一人で。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;10:55:45&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.flickr.com/photos/kaminogoya/1427500477/&#34;&gt;upside down on Flickr - Photo Sharing!&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=flickr&amp;amp;blog_id=2&#34;&gt;flickr&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;いい写真&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/289724662&#34;&gt;20:44:59&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;変な時間に昼寝した。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 23, 2007 </title>
      <link>http://example.org/2007/000228.html</link>
      <pubDate>Mon, 24 Sep 2007 01:13:10 +0900</pubDate>
      
      <guid>http://example.org/2007/000228.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/287573532&#34;&gt;18:17:49&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;帰宅しました。一人で。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;19:34:15&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://d.hatena.ne.jp/y_arim/20070922/1190500201&#34;&gt;Je n’avais pas l’intention d’aller ? la mer.-en mani?re de Haruphilie - だがちょっと待ってほしい。初音ミクはそんなに音楽業界の脅威だろうか。&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B8%E5%A4%C7%BD%F1%A4%AF&amp;amp;blog_id=2&#34;&gt;後で書く&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B9%CD%BB%A1&amp;amp;blog_id=2&#34;&gt;考察&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%BD%E9%B2%BB%A5%DF%A5%AF&amp;amp;blog_id=2&#34;&gt;初音ミク&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;ニコ動関連の現状分析は良いまとめ。人口音声に関連して色々思うところのある話題。後でどこかで言及したい。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;20:17:02&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://alfalfa.livedoor.biz/archives/51126110.html&#34;&gt;アルファルファモザイクより「Life with UNIX 名言集」&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=2ch&amp;amp;blog_id=2&#34;&gt;2ch&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=unix&amp;amp;blog_id=2&#34;&gt;unix&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%CC%BE%B8%C0&amp;amp;blog_id=2&#34;&gt;名言&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/287714832&#34;&gt;20:31:03&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://urasoku.blog106.fc2.com/blog-entry-124.html&#34;&gt;http://urasoku.blog106.fc2.com/blog-entry-124.html&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;明日全部読む。一人で。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/287918422&#34;&gt;23:05:40&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;今日の晩御飯。生ソーセージ4本。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/287958142&#34;&gt;23:33:19&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/2007/000224.html&#34;&gt;http://blog.aklaswad.com/2007/000224.html&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;いろんなつぶやき系サイトでの呟きをまとめてMTに毎日投稿するプラグイン作りました *ptt* (&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>いろんなつぶやき系サイトでの呟きをまとめてMTに毎日投稿するプラグイン作りました</title>
      <link>http://example.org/2007/000224.html</link>
      <pubDate>Sun, 23 Sep 2007 23:33:33 +0900</pubDate>
      
      <guid>http://example.org/2007/000224.html</guid>
      <description>Twitterに代表されるような呟き系のサービスや、はてなブックマークのようなSBMって、一行コメントを投稿するサイト、という観点で一つに括れると思うんですよ。
つまり、これらのサービスは大雑把に考えて、以下の要素を持つ小さなエントリーを多数ポストしていくサービス、と捉えることが出来るのでは無いでしょうか。

&lt;ol&gt;
	&lt;li&gt;数十〜数百字程度の短いテキスト&lt;/li&gt;
	&lt;li&gt;言及先のリンク&lt;/li&gt;
	&lt;li&gt;タグ&lt;/li&gt;
&lt;/ol&gt;

エントリーよりも小さくて、呟きだったりブックマークだったりするこいつを、とりあえず「Jot」と名づけてみました。少し、とか手早くメモする、とかいう意味みたいです。

で、各サービスに投稿されている内容を、「Jot」という形に落とし込んでしまえば、各サービスを統一的に扱うことが出来るのではないかと考えて、Movable Typeのプラグインとしての実装を試行錯誤しています。
プラグインの名前は「JotLine」といいます。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/jotline/&#34;&gt;JotLine&lt;/a&gt;

この「JotLine」プラグインの目標は以下の通りです。

&lt;ul&gt;
	&lt;li&gt;「Jot」をMTのオブジェクトとして作成し、均質に扱えるようにする&lt;/li&gt;
	&lt;li&gt;上記オブジェクトの作成や編集、保存を行えるようにする&lt;/li&gt;
	&lt;li&gt;各サービスからのフィード経由での情報の取得や、API経由での投稿を行うための定義をプラッガブルに追加できるようにする&lt;/li&gt;
&lt;/ul&gt;

「JotLine」自体は、特に何をするプラグインというわけでも無いので、応用的な作業は別のプラグインとして作成し追加していきます。(サブプラグインも全部まとめてインストールされるので、インストールで気にする必要などはありません。)
第一弾として今回は、タイトル通り、日々のログをまとめてMTに投稿するプラグインを実装してみました。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/jotline/daylog.html&#34;&gt;JotLine - DayLog&lt;/a&gt;

現在の所、ベータまでも行かないアルファ版という感じです。このプラグインを利用することで何らかの問題が発生しても、責任は持てません。
多分山ほどバグが残っているので、真面目に運用しているMTにいきなりインストールするのはやめたほうが良いかもです。人柱募集中です。
また、結構動作が重いです。スケジュールタスクの実行ごとに、自宅のサーバー(athlon64)で15秒前後プロセスが走りっぱなしになります。今のところこのブログでお借りしているXREAさんでは動かせていますが、ホスティングによっては、プロセス実行時間の制限などにより実運用が難しいかも知れません。

で、今後の目論見として、いったん基本部分が出来てしまえば、後は割りと簡単に扱うサイトの追加や機能の追加が出来るかなと思っています。
近日中に、各ソーシャルブックマークサービスでの、自分のブログへの言及を取得してダッシュボードで確認できるようなプラグインを作るつもりです。


</description>
    </item>
    
    <item>
      <title> web activities on September 22, 2007 </title>
      <link>http://example.org/2007/000227.html</link>
      <pubDate>Sun, 23 Sep 2007 03:49:21 +0900</pubDate>
      
      <guid>http://example.org/2007/000227.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;08:51:13&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.future-planning.net/x/modules/news/article.php?storyid=2689&#34;&gt;FPN-クリエイティブ・コモンズが使われない三つの理由&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A4%B3%A4%EC%A4%CF%A4%D2%A4%C9%A4%A4&amp;amp;blog_id=2&#34;&gt;これはひどい&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%C3%F8%BA%EE%B8%A2&amp;amp;blog_id=2&#34;&gt;著作権&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;いきなり徹頭徹尾CCが尊重されるとは誰も思っていないだろう。それでも、より望ましいと考える著作物のあり方に向けて意思表示をすることが大事なわけであって。/でも同人界隈についての見かたは面白い。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/285059112&#34;&gt;08:56:05&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;起きたような、まだ寝てるような。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/285062142&#34;&gt;08:58:54&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/2007/000226.html&#34;&gt;http://blog.aklaswad.com/2007/000226.html&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;今作ってるプラグインでは、こんな風に諸々のログをMTに投稿してくれる予定。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/285111572&#34;&gt;09:35:54&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;my $holidays = $mt-&amp;gt;BBQ-&amp;gt;BBF-&amp;gt;FJQ;&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/285131562&#34;&gt;09:51:58&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;でっぱつ!!!&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 21, 2007 </title>
      <link>http://example.org/2007/000226.html</link>
      <pubDate>Sat, 22 Sep 2007 00:27:12 +0900</pubDate>
      
      <guid>http://example.org/2007/000226.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm423058&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm423058&#34;&gt;ニコニコ動画(RC)‐SIREN 屍人観察 理沙&lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://del.icio.us/aklaswad&#34;&gt;00:23:19&lt;/a&gt; on del.icio.us&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm423058&#34;&gt;ニコニコ動画(RC)‐SIREN 屍人観察 理沙&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=niconico&amp;amp;blog_id=2&#34;&gt;niconico&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=siren&amp;amp;blog_id=2&#34;&gt;siren&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;タックルタックル&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm433496&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm433496&#34;&gt;ニコニコ動画(RC)‐SIREN 屍人観察 前田一家&lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;00:33:16&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm433496&#34;&gt;ニコニコ動画(RC)‐SIREN 屍人観察 前田一家&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=niconico&amp;amp;blog_id=2&#34;&gt;niconico&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=siren&amp;amp;blog_id=2&#34;&gt;siren&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;このステージはマジで怖かった。こうして見ると愉快な一家だな。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/281917992&#34;&gt;01:18:10&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;UserAgentが”MovableType”だと、del.icio.usからユーザーごとのフィードを取れないっぽい。。。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;03:27:35&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://ton4soku.blog84.fc2.com/blog-entry-346.html&#34;&gt;豚速（｀・∞・?） ネズミーランドの着ぐるみの中身だけど質問ある？&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=2ch&amp;amp;blog_id=2&#34;&gt;2ch&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%C7%A5%A3%A5%BA%A5%CB%A1%BC&amp;amp;blog_id=2&#34;&gt;ディズニー&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%CD%A5%BF&amp;amp;blog_id=2&#34;&gt;ネタ&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;オチが怖い&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;13:00:12&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://d.hatena.ne.jp/pyopyopyo/20070920/p1&#34;&gt;ぴょぴょぴょ？ - Linuxとかプログラミングの覚え書き - - Changelogのための英文テンプレート集&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=changelog&amp;amp;blog_id=2&#34;&gt;changelog&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=tips&amp;amp;blog_id=2&#34;&gt;tips&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0&amp;amp;blog_id=2&#34;&gt;プログラミング&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%B1%D1%B8%EC&amp;amp;blog_id=2&#34;&gt;英語&lt;/a&gt;]&lt;/span&gt;
            
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;14:57:52&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://shibuya.pm.org/blosxom/techtalks/200710.html&#34;&gt;Shibuya Perl Mongers : Shibuya Perl Mongers テクニカルトーク #8&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=shibuya.pm&amp;amp;blog_id=2&#34;&gt;shibuya.pm&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;時間が許せば行きたい。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://twitter.com/aklaswad/statuses/283441212&#34;&gt;17:09:52&lt;/a&gt; on Twitter&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            
            
            &lt;span class=&#34;jot-text&#34;&gt;ノートのバッテリーが完全死んだー。ACアダプタも接触が不安定で時々即死する。あうあう。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://jp.youtube.com/watch?v=SZ36dbvnY-Y&amp;mode=related&amp;search=&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/SZ36dbvnY-Y/default.jpg&#34; width=&#34;112&#34; alt=&#34;YouTube - まるでコメディのようなサッカーハプニング集 CheeZ チーズ&#34; title=&#34;YouTube - まるでコメディのようなサッカーハプニング集 CheeZ チーズ&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;23:25:25&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://jp.youtube.com/watch?v=SZ36dbvnY-Y&amp;mode=related&amp;search=&#34;&gt;YouTube - まるでコメディのようなサッカーハプニング集 CheeZ チーズ&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=football&amp;amp;blog_id=2&#34;&gt;football&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=youtube&amp;amp;blog_id=2&#34;&gt;youtube&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;何個か見たことの無い映像があった&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=c1rjBJJQHRc&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/c1rjBJJQHRc/default.jpg&#34; width=&#34;112&#34; alt=&#34;YouTube - Buffon On Scherzi A Parte&#34; title=&#34;YouTube - Buffon On Scherzi A Parte&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;23:38:54&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=c1rjBJJQHRc&#34;&gt;YouTube - Buffon On Scherzi A Parte&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=Scherzi%20A%20Parte&amp;amp;blog_id=2&#34;&gt;Scherzi A Parte&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=football&amp;amp;blog_id=2&#34;&gt;football&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%D6%A5%C3%A5%D5%A5%A9%A5%F3&amp;amp;blog_id=2&#34;&gt;ブッフォン&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;フェイエ戦でもポスト蹴ってたなあ。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/410215972X/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/410215972X.09._THUMBZZZ_.jpg&#34; alt=&#34;Amazon.co.jp： 暗号解読 上巻 (1) (新潮文庫 シ 37-2): 本: サイモン・シン,青木 薫&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://del.icio.us/aklaswad&#34;&gt;23:56:44&lt;/a&gt; on del.icio.us&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E8%A7%A3%E8%AA%AD-%E4%B8%8A%E5%B7%BB-%E6%96%B0%E6%BD%AE%E6%96%87%E5%BA%AB-%E3%82%B7-37-2/dp/410215972X/ref=pd_bbs_sr_1/250-4530726-4941834?ie=UTF8&amp;s=books&amp;qid=1190386411&amp;sr=8-1&#34;&gt;Amazon.co.jp： 暗号解読 上巻 (1) (新潮文庫 シ 37-2): 本: サイモン・シン,青木 薫&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=books&amp;amp;blog_id=2&#34;&gt;books&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://blog.aklaswad.com/cgi-bin/blog/mt-search.cgi?tag=%A5%B5%A5%A4%A5%E2%A5%F3%A1%A6%A5%B7%A5%F3&amp;amp;blog_id=2&#34;&gt;サイモン・シン&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;最近読み終わった。下巻末の読者向け問題の解読ドキュメントが良かった。単行本より文庫で読んだほうが良いかも。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title> web activities on September 20, 2007 </title>
      <link>http://example.org/2007/000225.html</link>
      <pubDate>Fri, 21 Sep 2007 19:28:33 +0900</pubDate>
      
      <guid>http://example.org/2007/000225.html</guid>
      <description>

    &lt;div class=&#34;jot-container&#34;&gt;
        
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?1fa505ffc13b75454dc8040a94464a4189c8a6be89e261&#34;&gt;02:00:52&lt;/a&gt; on Timelog&lt;/h4&gt;
        &lt;p class=&#34;jot-item &#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.din.or.jp/%7Eohzaki/perl.htm#httpURL&#34;&gt; Perlメモ &lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;役に立つなあ。&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm422885&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm422885&#34;&gt;ニコニコ動画(γ)‐SIREN 屍人観察 1/2&lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://b.hatena.ne.jp/aklaswad/&#34;&gt;23:13:21&lt;/a&gt; on Hatena Bookmark&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm422885&#34;&gt;ニコニコ動画(γ)‐SIREN 屍人観察 1/2&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            &lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://example.org/cgi-bin/blog/mt-search.cgi?tag=niconico&#34;&gt;niconico&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;jot-tag&#34;&gt;[&lt;a href=&#34;http://example.org/cgi-bin/blog/mt-search.cgi?tag=siren&#34;&gt;siren&lt;/a&gt;]&lt;/span&gt;
            &lt;span class=&#34;jot-text&#34;&gt;koeeeee&lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&#34;jot-container&#34;&gt;
        &lt;p class=&#34;jot-embed&#34;&gt;&lt;iframe width=&#34;112&#34; height=&#34;96&#34; src=&#34;http://www.nicovideo.jp/thumb/sm422966&#34; scrolling=&#34;no&#34; style=&#34;border:solid 1px #CCC;&#34; frameborder=&#34;0&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm422966&#34;&gt; ニコニコ動画(RC)‐SIREN 屍人観察 2/2 &lt;/a&gt;&lt;/iframe&gt;
&lt;/p&gt;
        &lt;h4 class=&#34;jot-date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?e46badaa40b12dd37a1eabba94464a4189c8a6be89e261&#34;&gt;23:18:50&lt;/a&gt; on Timelog&lt;/h4&gt;
        &lt;p class=&#34;jot-item jot-item-with-embed&#34;&gt;
            &lt;span class=&#34;jot-link&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm422966&#34;&gt; ニコニコ動画(RC)‐SIREN 屍人観察 2/2 &lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
            
            &lt;span class=&#34;jot-text&#34;&gt;こわい &lt;/span&gt;
        &lt;/p&gt;
    &lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>DayLog</title>
      <link>http://example.org/2007/000222.html</link>
      <pubDate>Thu, 20 Sep 2007 23:50:22 +0900</pubDate>
      
      <guid>http://example.org/2007/000222.html</guid>
      <description>&lt;h2&gt;インストール&lt;/h2&gt;

JotLine プラグインに同梱されています。&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/jotline/&#34;&gt;JotLine プラグイン&lt;/a&gt;のインストール手順に従ってください。

プラグインのインストールが終了したら、まず、自動収集を行うためにMovable Typeがスケジュールタスクを実行できているか、cronの設定などを確認してください。詳細はMTのマニュアルなどを参考にしてください。

次に、システムメニュー &gt; プラグインから、DayLogプラグイン以下の設定項目の内、必須項目の設定を行ってください。
また、JotLineプラグインの各サービスの設定も、必要な箇所を埋めておく必要があります。

最後に、設定項目のbody templateをデフォルトのまま使う場合、このページ内の「エントリーの設定」の節を参考にして、スタイルシートを設定して下さい。

&lt;h2&gt;設定&lt;/h2&gt;

&lt;dl&gt;
    &lt;dt&gt;blog id&lt;/dt&gt;
    &lt;dd&gt;収集したメッセージを投稿するブログのIDを数字で指定してください。この設定は必須です。&lt;/dd&gt;
    &lt;dt&gt;author id&lt;/dt&gt;
    &lt;dd&gt;収集したメッセージを投稿する際のユーザーのIDを数字で指定してください。この設定は必須です。&lt;/dd&gt;
    &lt;dt&gt;remove posted jot&lt;/dt&gt;
    &lt;dd&gt;ブログ記事の投稿後に、収集したデータを破棄するかが選択できます。開発用途などの特別な理由が無い限りチェックを外さないでください。&lt;/dd&gt;
    &lt;dt&gt;clone base entry id&lt;/dt&gt;
    &lt;dd&gt;この項目に既存のブログ記事のIDを指定すると、新規に投稿されるブログ記事のカテゴリー付けなどの設定を、指定したブログ記事からコピーします。&lt;/dd&gt;
    &lt;dt&gt;title template&lt;/dt&gt;
    &lt;dd&gt;新規に投稿するブログ記事のタイトルを指定します。Jot関連のテンプレートタグが利用できます。(その日の一番古いJotのコンテキストが指定されています。)&lt;/dd&gt;
    &lt;dt&gt;body template &lt;/dt&gt;
    &lt;dd&gt;新規に投稿するブログ記事の本文の表示形式を指定します。Jot関連のテンプレートタグが利用できます。Jotの表示部分は、MTJotsタグで囲む必要があります。この際にはアトリビュートは指定しないでください。&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2&gt;エントリーの設定&lt;/h2&gt;

body_templateの設定では、MTJot関連のテンプレートタグを利用して、まとめログの表示形式を自由にカスタマイズできます。各テンプレートタグの詳細については、&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/jotline/&#34;&gt;JotLineプラグイン&lt;/a&gt;の説明を参照してください。
デフォルトのbody_templateの設定では、いくつかの独自のCSSセレクタが指定されています。対応するCSSを、「スタイルシート(メイン)」の末尾などに追加してください。以下、指定するスタイルの一例です。(このサイトで使用しているものです。)

&lt;pre&gt;
.jot-container {
    width: 100%;
    float: left;
}
p.jot-item {
    float: left;
    margin: 0.1em;
    padding-left: 2.4em;
}
p.jot-item-with-embed {
    width: 320px;
}
h4.jot-date {
    border-bottom: 1px dotted #99bbbb;
    color: #aaaaaa;
    margin: 0;
    font-size: 0.7em;
}
h4.jot-date a {
    color: #0000ff;
    text-decoration: none;
}
.jot-text {
    margin: 0px;
}
.jot-link {
}
.jot-tag {
    margin: 0 0.1em;
    font-size: 0.8em;
}
.jot-tag a {
    margin: 0 0.2em;
    text-decoration: none;
    color: #0000ff;
}
.jot-embed {
    display: block;
    float: right;
}
&lt;/pre&gt;

&lt;h2&gt;その他&lt;/h2&gt;

ショートメッセージの言及先リンクがtinyurlだった場合、自動的にオリジナルのURLに変換します。
</description>
    </item>
    
    <item>
      <title>JotLine</title>
      <link>http://example.org/2007/000220.html</link>
      <pubDate>Mon, 17 Sep 2007 14:48:17 +0900</pubDate>
      
      <guid>http://example.org/2007/000220.html</guid>
      <description>&lt;h2&gt;概要&lt;/h2&gt;

JotLineは、複数のプラグインから構成されるプラグインパックです。
現在、以下の機能を提供するサブプラグインが同梱されています。個々の機能や設定については、各プラグインのページを確認してください。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/jotline/daylog.html&#34;&gt;DayLog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

中心となる「JotLine」プラグインは、ユーザーに対しては実質的にはなんの機能も提供しません。他のJotLineプラグインのために、各種ウェブサービスからのデータの取得や、データの保存、データをパブリッシュするためのMTのテンプレートタグ、などの機能を提供します。

&lt;h2&gt;必要環境&lt;/h2&gt;

Movable Type 4.0 以降でのみ動作します。Movable Type 3.x では動作しませんのでご注意ください。

&lt;h2&gt;インストール&lt;/h2&gt;

解凍したら、「plugins/JotLine」ディレクトリをまるごと、お使いのMTの「plugins」ディレクトリ内にアップロードしてください。

&lt;h2&gt;最新版のダウンロード&lt;/h2&gt;

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/JotLine0.1.zip&#34;&gt;JotLine0.1.zip&lt;/a&gt;

&lt;h2&gt;詳細&lt;/h2&gt;

JotLineは、各種ショートメッセージを、「Jot」という単位で扱います。これは内部的にはMT::Objectを継承したオブジェクトとして実装されています。各Jotは、以下の情報を持ちます。

&lt;ul&gt;
	&lt;li&gt;本文&lt;/li&gt;
	&lt;li&gt;パーマリンク&lt;/li&gt;
	&lt;li&gt;言及先のURL&lt;/li&gt;
	&lt;li&gt;言及先のタイトル&lt;/li&gt;
	&lt;li&gt;ショートメッセージを投稿した人の名前&lt;/li&gt;
	&lt;li&gt;ショートメッセージが投稿されたサイト&lt;/li&gt;
	&lt;li&gt;ショートメッセージが投稿された日時&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;タグ&lt;/h2&gt;

以下のテンプレートタグを使って、MTのデータベースに保存されているJotを表示することが出来ます。

現在のところ、Jotのリストを作成する「MTJots」ブロックタグは、殆どの機能が実装されていません。そのため、現時点ではこれらのタグは、プラグインの設定項目内などの特定の箇所でしか利用出来ません。

&lt;h4&gt;ブロックタグ&lt;/h4&gt;
&lt;dl&gt;
    &lt;dt&gt;MTJots&lt;/dt&gt;
    &lt;dd&gt;Jotのリストを一覧表示するためのブロックタグです。MTJotsの内部ではJot関連のファンクションタグが利用できるようになります。&lt;/dd&gt;
    &lt;dt&gt;MTJotTags&lt;/dt&gt;
    &lt;dd&gt;Jotに関連付けられたタグのリストを一覧表示するためのブロックタグです。ブロック内部では通常のMTのタグ関連のテンプレートタグが利用できます。&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4&gt;ファンクションタグ&lt;/h4&gt;
&lt;dl&gt;
    &lt;dt&gt;MTJotText&lt;/dt&gt;
    &lt;dd&gt;Jotの本文を表示します。&lt;/dd&gt;
    &lt;dt&gt;MTJotLinkText&lt;/dt&gt;
    &lt;dd&gt;Jotのリンク先ページのタイトルなど、リンク表示に利用される文字列です。&lt;/dd&gt;
    &lt;dt&gt;MTJotLinkURL&lt;/dt&gt;
    &lt;dd&gt;Jotの言及先のURLを表示します。&lt;/dd&gt;
    &lt;dt&gt;MTJotPermalink&lt;/dt&gt;
    &lt;dd&gt;Jotの元エントリーのパーマリンクを表示します。&lt;/dd&gt;
    &lt;dt&gt;MTJotDate&lt;/dt&gt;
    &lt;dd&gt;ショートメッセージが投稿された日時を表示します。MTの一般的な日時表示用モディファイアが利用できます。&lt;/dd&gt;
    &lt;dt&gt;MTJotSiteLabel&lt;/dt&gt;
    &lt;dd&gt;ショートメッセージが投稿されたサイトのサイト名を表示します。&lt;/dd&gt;
    &lt;dt&gt;MTJotEmbedSmall&lt;/dt&gt;
    &lt;dd&gt;リンク先が何らかのメディアサイトの個別ページだった場合などに、可能であれば、サムネイルに利用できるような小さめの画像やビデオのHTMLを出力します。&lt;/dd&gt;
    &lt;dt&gt;MTJotEmbedLarge&lt;/dt&gt;
    &lt;dd&gt;リンク先が何らかのメディアサイトの個別ページだった場合などに、可能であれば画像やビデオを表示するHTMLを出力します。&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2&gt;設定&lt;/h2&gt;

各ウェブサービスについてのログイン情報等の設定を、「JotLine」プラグインのシステムレベル設定画面から行えます。

</description>
    </item>
    
    <item>
      <title>movabletype.orgのplugin directoryに突撃してみた。</title>
      <link>http://example.org/2007/000219.html</link>
      <pubDate>Wed, 05 Sep 2007 22:38:10 +0900</pubDate>
      
      <guid>http://example.org/2007/000219.html</guid>
      <description>
&lt;a href=&#34;http://plugins.movabletype.org/favicon-manager/&#34;&gt;Favicon Manager | Plugin Directory | movabletype.org&lt;/a&gt;

とりあえずFaviconManagerを登録してみました。まあ頑張ってぼちぼちと更新していきたいと思います。・・・英語大好き!

登録プロセスなど色々と、良く出来ていて素晴らしい。
ちょっと疑問に思ったのは、プラグインのライセンスの選択肢としてGPLがあったのでぺロッと選んでみたのですが、結局GPLのプラグインと現在の(オープンソースではない)MT4を組み合わせて使えるのか、ということ。この辺、自分まだよく分かってないのです。Perl Artisticライセンス辺りを選んでおくほうが無難なのかなぁ。</description>
    </item>
    
    <item>
      <title>TaggingHelper 0.21</title>
      <link>http://example.org/2007/000218.html</link>
      <pubDate>Wed, 05 Sep 2007 22:20:39 +0900</pubDate>
      
      <guid>http://example.org/2007/000218.html</guid>
      <description>
コメント欄で指摘いただいた、タグの選択時などにIEで「このページから移動します。よろしいですか？」などとダイアログが表示されてしまう問題に対応しました。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/tagginghelper.html&#34;&gt;blog.aklaswad.com: TaggingHelper&lt;/a&gt;

カッとなって全部spanで置き換えちゃったけど、MT本体はaタグでダイアログ出さずにやっているので、どう実現しているのか見てから真似したほうが良かった。今は反省している。</description>
    </item>
    
    <item>
      <title>Movabug 0.2</title>
      <link>http://example.org/2007/000216.html</link>
      <pubDate>Wed, 29 Aug 2007 00:21:49 +0900</pubDate>
      
      <guid>http://example.org/2007/000216.html</guid>
      <description>
&lt;ins datetime=&#34;2008-05-09T22:11:04+09:00&#34;&gt;4.1以降に未対応です。手が回らないため、一時開発を停止しています。ご了承下さい。
&lt;/ins&gt;

&lt;a href=&#34;http://blog.aklaswad.com/2007/000212.html&#34;&gt;先日公開した&lt;/a&gt;プラグイン開発援助プラグイン「Movabug」に、わずかながら修正と機能追加をしました。バージョン0.2として公開します。

&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/movabug.html&#34;&gt;blog.aklaswad.com: Movabug&lt;/a&gt;
&lt;form mt:asset-id=&#34;28&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/Movabug0.2.zip&#34;&gt;Movabug0.2.zip&lt;/a&gt;&lt;/form&gt;

変更点は次の通りです。

&lt;ul&gt;
	&lt;li&gt;TheSchwartzを実行する「run jobs」モードを追加した&lt;/li&gt;
	&lt;li&gt;「run tasks」「force tasks」「run jobs」実行時にスプラッシュ画面にログが表示されるようにした&lt;/li&gt;
	&lt;li&gt;cookieを利用して画面遷移時に「display ids」「display classes」の状態が維持されるようにした&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Movabug</title>
      <link>http://example.org/2007/000213.html</link>
      <pubDate>Sun, 26 Aug 2007 23:37:22 +0900</pubDate>
      
      <guid>http://example.org/2007/000213.html</guid>
      <description>&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;28&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/Movabug0.2.zip&#34;&gt;Movabug0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;動作環境&lt;/h3&gt;

このプラグインは、Movable Type 4.0 以降専用です。

&lt;h3&gt;インストール&lt;/h3&gt;

ダウンロードしたファイルを解凍したら、&lt;em&gt;plugins&lt;/em&gt;ディレクトリの中の&lt;em&gt;Movabug&lt;/em&gt; ディレクトリを、お使いの MovableTypeの「plugins」ディレクトリにアップロードしてください。

&lt;h3&gt;機能&lt;/h3&gt;

現在のところ、基本機能にはすべて、画面上部の「movabug」メニューバーからアクセスします。

&lt;form mt:asset-id=&#34;26&#34; class=&#34;mt-enclosure mt-enclosure-image&#34;&gt;&lt;img alt=&#34;movabug_screen.png&#34; src=&#34;http://blog.aklaswad.com/images/movabug_screen.png&#34; width=&#34;480&#34; height=&#34;183&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34;/&gt;&lt;/form&gt;

&lt;dl&gt;
&lt;dt&gt;display ids&lt;/dt&gt;
&lt;dd&gt;
管理画面のテンプレートで使用されているid属性を実際の管理画面上に表示します。(MovableTypeのテンプレートエンジンが利用する属性で、実際に出力されるHTMLのid属性とは異なります。)transformerプラグインの作成などに役に立つかと思います。&lt;br /&gt;
クリックする毎に非表示、その場に表示(absolute)、並べて表示(relative)3つの状態を順に遷移します。「position: absolute」としてオーバーレイっぽく表示させると、複数の要素が重なってしまって見えない場合があったので、とりあえずこんなになりました。
&lt;/dd&gt;
&lt;dt&gt;display classes&lt;/dt&gt;
&lt;dd&gt;
管理画面のテンプレートで使用されているclass属性を実際の管理画面上に表示します。
クリックする毎に非表示、その場に表示(absolute)、並べて表示(relative)3つの状態を順に遷移します。
現在のテンプレートではあまり多くは使われていないようです。ダッシュボードウィジェットやインフォメーション表示などで確認できますね。
&lt;/dd&gt;
&lt;dt&gt;run tasks&lt;/dt&gt;
&lt;dd&gt;
クリックするとスケジュールタスクを実行します。
&lt;/dd&gt;
&lt;dt&gt;force tasks&lt;/dt&gt;
&lt;dd&gt;
スケジュールタスクは、負荷軽減のため?それぞれのタスクに実行間隔が設けられています。例えば日時指定投稿では、前回の実行から1分以内に再度実行しても、日時指定の状態となっているブログ記事があるか確認すらせずに終了します。(ちなみに、日時指定投稿の実行間隔はmt-config.cgiにFuturePostFrequencyというディレクティブを書くと変更できるっぽいです。未確認。)&lt;br /&gt;
これが古いスパムコメントの削除等のタスクになると、12時間ごとにしか動きません。これではテストの度に徹夜作業になってしまいますね。&lt;br /&gt;
force tasksでは、MT::Sessionに記録されているスケジュールタスク関連のレコードをいったん削除してからスケジュールタスクを実行することで、強制的にスケジュールタスクを実行させています。
&lt;/dd&gt;
&lt;dt&gt;run jobs&lt;/dt&gt;
&lt;dd&gt;
TheSchwartzを利用したジョブキューを実行します。(0.2から)
&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;チェンジログ&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;0.2 (20070828)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;28&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/Movabug0.2.zip&#34;&gt;Movabug0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
	&lt;li&gt;TheSchwartzを実行する「run jobs」モードを追加した&lt;/li&gt;
	&lt;li&gt;「run tasks」「force tasks」「run jobs」実行時にスプラッシュ画面にログが表示されるようにした&lt;/li&gt;
	&lt;li&gt;cookieを利用して画面遷移時に「display ids」「display classes」の状態が維持されるようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.1 (20070826)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;27&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/Movabug0.1.zip&#34;&gt;Movabug0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
	&lt;li&gt;最初の公開&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;</description>
    </item>
    
    <item>
      <title>プラグインの作成を手助けするプラグイン「Movabug」開発中</title>
      <link>http://example.org/2007/000212.html</link>
      <pubDate>Sun, 26 Aug 2007 23:00:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000212.html</guid>
      <description>気負った名前を付けてみたものの、現在のところ、以下の二つの機能しかありません。すべて上部メニューからアクセスするようになっています。

&lt;ul&gt;
	&lt;li&gt;transformerで利用可能な、管理画面のテンプレートに含まれるid,classを実際の管理画面に表示する&lt;/li&gt;
	&lt;li&gt;スケジュールタスクを管理画面から実行する&lt;/li&gt;
&lt;/ul&gt;

スケジュールタスクの実行については、事前にタスクのセッションレコードを削除することで、設定されているintervalを無視して強制的に実行させることが出来るようになっています。

後は何があると便利になりますかね。管理画面からTheSchwartz実行とか、かなあ。</description>
    </item>
    
    <item>
      <title>Hack-a-thon に突撃してきた</title>
      <link>http://example.org/2007/000211.html</link>
      <pubDate>Sun, 26 Aug 2007 09:25:29 +0900</pubDate>
      
      <guid>http://example.org/2007/000211.html</guid>
      <description>
SixApartのMT4Hack-a-thonに突撃してきたyo!

&lt;ul&gt;
	&lt;li&gt;いきなりブルースクリーンが連発! ご迷惑をおかけしてしまいました。。。&lt;/li&gt;
	&lt;li&gt;おおはまりの一日! 何を作ろうとしても嵌りました。成果物なし。&lt;/li&gt;
	&lt;li&gt;発表会で発表せず! 成果も無かったわけですが、ビビリ入ったのが大きい。&lt;/li&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.h-fj.com/blog/archives/2007/08/28-114447.php&#34;&gt;藤本さんのカテゴリソートプラグイン&lt;/a&gt;は凄く使いやすそうだった。&lt;/li&gt;
	&lt;li&gt;飲み会まで行った!&lt;/li&gt;
	&lt;li&gt;名刺は必要だと思った! 変な手書きのメモ渡された方すみません。&lt;/li&gt;
	&lt;li&gt;iPhone触った!&lt;/li&gt;
	&lt;li&gt;酔っ払って変なことを口走ったりしてないか心配。&lt;/li&gt;
&lt;/ul&gt;

また機会があったら是非参加したいですー。
今日は自宅でひとりHack-a-thon。昨日やりかけたdom-viewerを仕上げるのだ。</description>
    </item>
    
    <item>
      <title>StyleCatcher2.0の覚え書きpart2</title>
      <link>http://example.org/2007/000210.html</link>
      <pubDate>Thu, 23 Aug 2007 01:53:54 +0900</pubDate>
      
      <guid>http://example.org/2007/000210.html</guid>
      <description>&lt;h3&gt;cssを公開してもStyleCatcherでは取得不可能にする方法&lt;/h3&gt;

前回のエントリー&lt;a href=&#34;http://blog.aklaswad.com/2007/000207.html&#34;&gt;スタイルの変更とStyleCatcher2.0についての覚え書き - blog.aklaswad.com&lt;/a&gt;で、cssファイルのurlを指定して取得可能、と書きましたが、実はこれは公開や配布を意図していない場合にも簡単に取得が可能となってしまう、という問題を含んでいます。(ファイル構成がStyleCatcherの仕様から外れている場合は大丈夫です。あくまでStyleCatcherで適用可能な構成でスタイルを作成した場合です。)

また、StyleCatcherはスタイルの取得の際には、配布元と同じディレクトリ構成で、サムネイル画像を含む画像ファイルまでのオリジナルの完全なコピーを作成します。またこれらのファイルは、当然のことながらwebに公開されています。つまり、取得したスタイルはそのままにして再配布を行っている状態となっている、ということです。

webに公開する以上、cssや画像ファイルのコピーを防ぐ事が出来ないのは、そもそも仕方のないことですが、それにしても半径1クリックで完コピされるというのは抑止力なさ過ぎです。
そこまで気にするケースもあまり無いとは思いますが、例えば、「内部での再利用のためにStyleCatcherに準拠した構成でcss周りを作成、サイトを公開したが、外部向けの再利用、再配布は意図しない」、というような状況の場合、何かしらの防御策をとる必要があるでしょう。
とりあえずStyleCatcherは「MovableType/4.0」というUser-Agentでアクセスしてくるので、これを弾くのが手っ取り早いかと思われます。themesディレクトリに次の内容の.htaccessファイルを作成しておくと、とりあえずStyleCatcherからの取得を防止できます。

&lt;pre&gt;
SetEnvIf User-Agent ^MovableType no_style_catcher
Order Allow,Deny
Allow from all
Deny from env=no_style_catcher
&lt;/pre&gt;


&lt;h3&gt;StyleCatcherがレイアウトを変更できるからくり&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>スタイルの変更とStyleCatcher2.0についての覚え書き</title>
      <link>http://example.org/2007/000207.html</link>
      <pubDate>Thu, 23 Aug 2007 01:30:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000207.html</guid>
      <description>自分はcssとかは全く不勉強なので、どこかおかしいところがあるかもしれません。IE6では透過画像周りでぼろぼろになっているかと思われます&lt;del&gt;が、面倒くさいので何もしません&lt;/del&gt;&lt;ins&gt;ので近日中に修正します&lt;/ins&gt;。

今回は、MT4での新StyleCatcherの勉強がてら、ボソボソと調べながら作成しました。
気に入ったという奇特なお方は、ご自由にお使いください。

実はStyleCatcherって、cssファイルを直接指定して取ってくることが可能となっています。必ずしもリポジトリとして公開されている必要はないんですね。
例えば、今回作成したcssファイルのURLは以下になります。

&lt;pre&gt;http://blog.aklaswad.com/cgi-bin/blog/mt-static/support/themes/black-silver/black-silver.css&lt;/pre&gt;

MT4のStyleCatcherで「カテゴリー」の右の緑十文字をクリックして、上記cssファイルのURLを入れれば、スタイルを取得できるはずです。

&lt;h4&gt;cssを公開してStyleCatcherで取得可能にする方法&lt;/h4&gt;

StyleCatcher2.0に対応したスタイルの作成メモです。
StyleCatcherにきちんと対応するためには、MovableType のテンプレートやbase_theme.cssにあわせてcssが記述してあることに加え、以下の条件を満たしておく必要があります。

&lt;h5&gt;画像ファイルをディレクトリにまとめない&lt;/h5&gt;

StyleCatcherは、css内で読み込む画像ファイルについても自動的に取得しますが、これは画像ファイルがcssファイルと同じディレクトリに置かれていて、かつ、画像のurl指定がディレクトリ名を含まない、ファイル名だけの相対パスとなっている場合だけです。
「url(hoge.jpg)」はOK。「url(images/moge.jpg)」はNG。
画像用にディレクトリを分けたりしたいところですが、そうするとStyleCatcherは対応してくれません。ご注意を。

&lt;h5&gt;サムネイル画像を用意する&lt;/h5&gt;

あらかじめサムネイル用の画像を用意しておくことで、取得側のプレビュー画面に表示させる事ができます。サムネイルは、大小それぞれの画像を「thumbnail.gif」「thumbnail-large.gif」という名前でcssと同じディレクトリに配置することでStyleCatcherに検出されます。
MT4のStyleCatcherでは、以下のサイズでサムネイルを表示するようです(目測値)。

&lt;table&gt;
    &lt;tr&gt;&lt;th&gt;ファイル&lt;/th&gt;&lt;th&gt;ヨコ&lt;/th&gt;&lt;th&gt;タテ&lt;/th&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;thumbnail.gif&lt;/td&gt;&lt;td&gt;120&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;thumbnail-large.gif&lt;/td&gt;&lt;td&gt;278&lt;/td&gt;&lt;td&gt;209&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

MT3.xでのサイズとちょっと違ってますね。このサイズでサムネイルを用意しておくと良いかもしれません。Voxとの絡みもあるかもしれないので、正確なところは、何らかのアナウンスが出るのを待ちたいと思います。とりあえず上のサイズの画像で、読み込んでくれないということは無いみたいです。

以前は、サムネイルが無いスタイルも取得できたような記憶があるのですが、現在のStyleCatcher2.0ではサムネイルが存在しない場合、スタイルの取得自体が出来なくなるようです。

&lt;h5&gt;メタデータを記述する&lt;/h5&gt;

cssのコメントとして、メタ情報を埋め込むことが出来ます。キーと値をコロンで区切って、一行に一つずつ記述します。
以下のような感じです。

&lt;pre&gt;
/* 
name: Black Silver
designer: Aklaswad
designer_url: http://blog.aklaswad.com/ 
layouts: layout-wt, layout-tw
*/
&lt;/pre&gt;

ソースコードを見た感じ、以下のようなメタデータが利用できるようです。どこで使われているのか分からないものもありますね。

&lt;table&gt;
&lt;tr&gt;&lt;th&gt;name&lt;/th&gt;&lt;td&gt;スタイルの名前&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;description&lt;/th&gt;&lt;td&gt;スタイルの説明?&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;designer&lt;/th&gt;&lt;td&gt;デザイナーの名前&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;designer_url&lt;/th&gt;&lt;td&gt;デザイナーのサイトのurl&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;author&lt;/th&gt;&lt;td&gt;作者の名前&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;author_url&lt;/th&gt;&lt;td&gt;作者のサイトのurl&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;author_affiliation&lt;/th&gt;&lt;td&gt;作者の所属&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;layouts&lt;/th&gt;&lt;td&gt;利用可能なレイアウト&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;


&lt;h5&gt;新要素のlayoutsをメタデータに記述する&lt;/h5&gt;

StyleCatcher2.0では、layoutsメタデータで利用可能なレイアウトを指定できます。
以下の四つのレイアウトが指定できるようです。

&lt;ul&gt;
	&lt;li&gt;layout-wtt&lt;/li&gt;
	&lt;li&gt;layout-twt&lt;/li&gt;
	&lt;li&gt;layout-wt&lt;/li&gt;
	&lt;li&gt;layout-tw&lt;/li&gt;
&lt;/ul&gt;

上記をカンマ区切りでlayoutsメタデータに記述しておくことで、スタイルの適用時に選択が可能となるようです。逆に一部のレイアウトには対応していないスタイルを作った場合、そのレイアウトを記述しなければ、スタイルの適用時に選択ができないようになります。


とりあえずココまで調べました。またそのうち気づいたことがあれば書くかも知れません。おやすみなさい。
</description>
    </item>
    
    <item>
      <title>TaggingHelper</title>
      <link>http://example.org/2007/000209.html</link>
      <pubDate>Wed, 22 Aug 2007 22:41:14 +0900</pubDate>
      
      <guid>http://example.org/2007/000209.html</guid>
      <description>&lt;h3&gt;インストール&lt;/h3&gt;

解凍して出てきた中から、「plugins/TaggingHelper」ディレクトリを、お使いのMTのpluginsディレクトリ内にアップロードしてください。

&lt;h3&gt;動作環境&lt;/h3&gt;

MT3.3とMT4のどちらでも動作します。
当たり前ですが、MT3.2以前ではMTにタグ機能が無いため、動きません。
&lt;del datetime=&#34;2008-05-29T16:23:05+09:00&#34;&gt;動作検証は基本的にFirefox2.0でしか行っていません。
IE6でも最低限の動作は確認しましたが、それ以外のブラウザでは確認してません。&lt;/del&gt;
Firefox 2.0, Firefox 3.0, IE7 で動作確認を行っています。

&lt;h3&gt;設定&lt;/h3&gt;

特になし。

&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

&lt;form mt:asset-id=&#34;82&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/TaggingHelper.0.3.zip&#34;&gt;TaggingHelper.0.3.zip&lt;/a&gt;&lt;/form&gt;

&lt;h3&gt;既知の問題点&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;del datetime=&#34;2008-05-29T16:25:24+09:00&#34;&gt;シングルクオートを含むタグをクリックするとjavascriptエラーが発生して動作しない(Trackback(774)さんにご報告いただきました)&lt;/del&gt;&lt;ins datetime=&#34;2008-05-29T16:26:10+09:00&#34;&gt;0.3で修正しました。&lt;/ins&gt;&lt;/li&gt;
	&lt;li&gt;Safari で「過去のタグ」リンクをクリックしても、タグクラウドが生成されない(Hiromi さんにご報告いただきました)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;チェンジログ&lt;/h3&gt;

&lt;dl&gt;
&lt;dt&gt;0.3 (20080529)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;タグ一覧を、使われている頻度順で表示するモードを追加した。&lt;/li&gt;
	&lt;li&gt;本文に含まれる文言のタグを抽出して表示するモードを追加した。&lt;/li&gt;
	&lt;li&gt;シングルクオートを含むタグが扱えない問題に対応した。指摘してくれたTrackback(774)さんありがとうございます。&lt;/li&gt;
        &lt;li&gt;タグの途中で改行してしまう問題に対応した。&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;82&#34; class=&#34;mt-enclosure mt-enclosure-file&#34; style=&#34;display: inline;&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/TaggingHelper.0.3.zip&#34;&gt;TaggingHelper.0.3.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.21 (20070822)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;IEでクリックごとにダイアログが表示されていた問題を修正&lt;/li&gt;
        &lt;li&gt;見た目を少し変更&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;29&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TaggingHelper0.21.zip&#34;&gt;TaggingHelper0.21.zip&lt;/a&gt;&lt;/form&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.2 (20070822)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;3.3のtransformerに対応&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;23&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TaggingHelper0.2.zip&#34;&gt;TaggingHelper0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;0.1 (20070822)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;最初のリリース&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;22&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TaggingHelper0.1.zip&#34;&gt;TaggingHelper0.1.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>プラグインなら何でもよかった: タグ入力支援プラグイン</title>
      <link>http://example.org/2007/000208.html</link>
      <pubDate>Wed, 22 Aug 2007 02:37:14 +0900</pubDate>
      
      <guid>http://example.org/2007/000208.html</guid>
      <description>
&lt;form mt:asset-id=&#34;21&#34; class=&#34;mt-enclosure mt-enclosure-image&#34;&gt;&lt;img alt=&#34;tagginghelper_screen.png&#34; src=&#34;http://blog.aklaswad.com/images/tagginghelper_screen.png&#34; width=&#34;310&#34; height=&#34;267&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34;/&gt;&lt;/form&gt;
2chを見てむしゃくしゃして作った。プラグインなら何でもよかった。後悔はしていない。

&lt;form mt:asset-id=&#34;22&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TaggingHelper0.1.zip&#34;&gt;TaggingHelper0.1.zip&lt;/a&gt;&lt;/form&gt;

しまった、2chのスレの人はMT3.35が指定だった。。。
これはMT4でしか動かないです。明日MT3.35に対応させる。今は反省している。

&lt;ins&gt;とりあえず3.3でも動くようにした。&lt;form mt:asset-id=&#34;23&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/TaggingHelper0.2.zip&#34;&gt;TaggingHelper0.2.zip&lt;/a&gt;&lt;/form&gt;&lt;/ins&gt;

&lt;ins&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/tagginghelper.html&#34;&gt;説明ページを作った&lt;/a&gt;&lt;/ins&gt;
</description>
    </item>
    
    <item>
      <title>MT4: ちょっとしたレイアウト技を思いついた</title>
      <link>http://example.org/2007/000203.html</link>
      <pubDate>Mon, 13 Aug 2007 21:57:20 +0900</pubDate>
      
      <guid>http://example.org/2007/000203.html</guid>
      <description>まず、&#34;ヘッダー”テンプレートの編集を行います。ヘッダーはテンプレートモジュールの一覧の中にあります。
7行目、今ちょっと話題のこの行

&lt;pre class=&#34;code&#34;&gt;
    &amp;lt;$MTInclude identifier=&amp;quot;styles&amp;quot; trim_to=&amp;quot;0&amp;quot;$&amp;gt;
&lt;/pre&gt;

この直後に、以下の内容を追加します。

&lt;pre class=&#34;code&#34;&gt;
    &amp;lt;mt:if name=&amp;quot;page_layout_override&amp;quot;&amp;gt;
        &amp;lt;mt:setvar name=&amp;quot;page_layout&amp;quot; value=&amp;quot;$page_layout_override&amp;quot;&amp;gt;
    &amp;lt;/mt:if&amp;gt;
&lt;/pre&gt;

仕込みは以上です。早速メインページのレイアウトを変更してみます。
メインページのテンプレート編集画面を開き、最初の方で延々続くMTSetVarの嵐の中に、以下の行を追加します。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;mt:setvar name=&amp;quot;page_layout_override&amp;quot; value=&amp;quot;layout-wtt&amp;quot;&amp;gt;
&lt;/pre&gt;

追記する場所は、&amp;lt;$MTInclude module=&amp;quot;ヘッダー&amp;quot;$&amp;gt;の行より前ならどこでもOKだと思います。
layout-wttの部分が、レイアウトの指定になります。指定可能なレイアウトは以下の通りです。

&lt;table&gt;
&lt;tr&gt;&lt;th&gt;指定子&lt;/th&gt;&lt;th&gt;レイアウト&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;layout-wtt&lt;/td&gt;&lt;td&gt;3カラム大小小&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;layout-twt&lt;/td&gt;&lt;td&gt;3カラム小大小&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;layout-tw&lt;/td&gt;&lt;td&gt;2カラム小大&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;layout-wt&lt;/td&gt;&lt;td&gt;2カラム大小&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

この指定は、メインページ、アーカイブインデックスと、各アーカイブテンプレートで利用できます。
サイドバーをまったく使わない設定(1カラム)としたい場合、&amp;lt;MTSetVar name=&amp;quot;sidebar&amp;quot; value=&amp;quot;1&amp;quot;&amp;gt;という指定をvalue=&#34;0&#34;とすればサイドバーが消えます。レイアウトによっては妙に左に寄ったりしてしまいますので、layout-twtを指定しておきましょう。

今回、実験としてとりあえずこのブログの&lt;a href=&#34;http://blog.aklaswad.com/&#34;&gt;メインページ&lt;/a&gt;を3カラム大小小、&lt;a href=&#34;http://blog.aklaswad.com/archives.html&#34;&gt;アーカイブインデックス&lt;/a&gt;を3カラム小大小、&lt;a href=&#34;http://blog.aklaswad.com/2007/000203.html&#34;&gt;ブログ記事アーカイブ&lt;/a&gt;はサイドバー無し、&lt;a href=&#34;http://blog.aklaswad.com/2007/08/&#34;&gt;月別アーカイブページ&lt;/a&gt;は2カラム大小、としてみました。
でも、自分でぶち上げておいてなんですが、自分は全ページ同じレイアウトのほうが好きなので多分3日くらいで元に戻します。。。
終わりです。

&lt;ins&gt;追記: レイアウトを戻しました。(20070820)&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://example.org/2007/000201.html</link>
      <pubDate>Sun, 12 Aug 2007 17:26:53 +0900</pubDate>
      
      <guid>http://example.org/2007/000201.html</guid>
      <description>
&lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js&#34;&gt;&lt;/script&gt;
blog.aklaswad.comは、aklaswadのパーソナルなウェブサイトです。

&lt;h3&gt;About me&lt;/h3&gt;

&lt;p&gt;1975年生まれ。
のんべんだらりとした日々を過ごしていたところ、ひょんな事からMovable Typeに出会う。Perl、JavaScriptなど周辺技術を独学で学ぶ。&lt;/p&gt;
&lt;p&gt;2008年Six Apart入社。MT5、MT5.1のコア開発メンバーとしてエンジニアリングを担当。&lt;/p&gt;
&lt;p&gt;MT2012年、Six Apartを退社し、Orinoco Peatixにjoin。&lt;/p&gt;
&lt;p&gt;ハンドルネームは本名をもじったもの。当時良く聞いていたAphex TwinやAutechreなどの曲名の影響で、発音できないような綴りがカッコイイと思ったものの、人に「読めない」「覚えられない」と言われ困っています。「エーケーナントカ」と読んでください。&lt;/p&gt;


&lt;h3&gt;Find me elsewhere&lt;/h3&gt;
&lt;mt:Authors display_name=&#34;aklaswad&#34; need_entry=&#34;0&#34;&gt;
    &lt;ul&gt;
        &lt;mt:otherprofiles&gt;
            &lt;li&gt;&lt;a href=&#34;&lt;mt:otherprofilevar name=&#34;uri&#34; escape=&#34;html&#34;&gt;&#34; rel=&#34;me&#34; class=&#34;service-icon icon-service-&lt;mt:otherprofilevar name=&#34;type&#34;&gt;&#34;&gt;&lt;mt:otherprofilevar name=&#34;label&#34; escape=&#34;html&#34;&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/mt:otherprofiles&gt;
    &lt;/ul&gt;
&lt;/mt:Authors&gt;

&lt;ul&gt;
  &lt;a href=&#34;http://aklaswad.com/where.html&#34;&gt;when and where my laptop was running?&lt;/a&gt;
&lt;/ul&gt;
&lt;a href=&#34;http://us.playstation.com/playstation/psn/visit/profiles/aklaswad&#34;&gt;&lt;img src=&#34;http://fp.profiles.us.playstation.com/playstation/psn/pid/aklaswad.png&#34; width=&#34;230&#34; height=&#34;155&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;

&lt;!-- Add these tags to the HEAD section of your page. --&gt;

&lt;link href=&#34;http://coderwall.com/stylesheets/jquery.coderwall.css&#34; media=&#34;all&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;http://coderwall.com/javascripts/jquery.coderwall.js&#34;&gt;&lt;/script&gt;

&lt;!-- You also need to place a container where you&#39;d like the Coderwall badges to render. --&gt;
&lt;section class=&#34;coderwall&#34; data-coderwall-username=&#34;aklaswad&#34; data-coderwall-orientation=&#34;horizontal&#34;&gt;&lt;/section&gt;

&lt;mt:Ignore&gt;
&lt;img src=&#34;http://pc.colopl.jp/cm_o.d-Jg-xoFpVoeuaowquRO9UAiBBqFdV5rHxpvHcMQu1.png&#34; /&gt;
&lt;/mt:Ignore&gt;</description>
    </item>
    
    <item>
      <title>aklaswad</title>
      <link>http://example.org/2007/000200.html</link>
      <pubDate>Sun, 12 Aug 2007 17:25:16 +0900</pubDate>
      
      <guid>http://example.org/2007/000200.html</guid>
      <description>
俺だよ、俺。</description>
    </item>
    
    <item>
      <title>FaviconManager2.0をリリースします</title>
      <link>http://example.org/2007/000199.html</link>
      <pubDate>Sun, 12 Aug 2007 16:50:28 +0900</pubDate>
      
      <guid>http://example.org/2007/000199.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/2007/000169.html&#34;&gt;以前ベータ版として公開&lt;/a&gt;した、FaviconManagerプラグインのMT4対応版です。

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/faviconmanager.html&#34;&gt;blog.aklaswad.com: Favicon Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

やはり自分の方針として、MT4の機能をフルに活用したかったので(といってもたいしたことはしてませんが)、MT4専用となります。MT3.35以前のバージョンでは使えません。
今回のバージョンアップでは、ベータ版に比べて以下の改善を行っています。

&lt;ul&gt;
	&lt;li&gt;ダイナミックパブリッシング用のphpファイルをMT4のアーキテクチャにあわせてplugins以下に移動した&lt;/li&gt;
	&lt;li&gt;ダイナミックパブリッシングで、必要の無いファイルに対して置換を行っていた問題を修正した&lt;/li&gt;
	&lt;li&gt;ローカライズを少し&lt;/li&gt;
&lt;/ul&gt;

よろしければお使いください。</description>
    </item>
    
    <item>
      <title>Favicon Manager</title>
      <link>http://example.org/2007/000198.html</link>
      <pubDate>Sun, 12 Aug 2007 16:35:11 +0900</pubDate>
      
      <guid>http://example.org/2007/000198.html</guid>
      <description>&lt;h3&gt;ダウンロード&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;35&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/FaviconManager2.01.zip&#34;&gt;FaviconManager2.01.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;動作環境&lt;/h3&gt;

このプラグインは、Movable Type 4.0 以降専用です。

&lt;h3&gt;インストール&lt;/h3&gt;

ダウンロードしたファイルを解凍したら、&lt;em&gt;plugins&lt;/em&gt;ディレクトリの中の&lt;em&gt;FaviconManager/&lt;/em&gt; ディレクトリを、お使いの MovableTypeの「plugins」ディレクトリにアップロードしてください。

&lt;h3&gt;設定方法&lt;/h3&gt;

&lt;h4&gt;ブログにFaviconを設定する&lt;/h4&gt;

&lt;ol&gt;
	&lt;li&gt;ブログセレクタ(管理画面左上のあれ)から、設定したいブログを選択する&lt;/li&gt;
	&lt;li&gt;&lt;em&gt;設定&lt;/em&gt; &gt; &lt;em&gt;プラグイン&lt;/em&gt;をクリックしてプラグインの設定画面を開く&lt;/li&gt;
	&lt;li&gt;&lt;em&gt;FaviconManager&lt;/em&gt;の&lt;em&gt;設定&lt;/em&gt;タブを開く&lt;/li&gt;
	&lt;li&gt;Favicon画像ファイルのURLアドレスか、ファイルのID(後述)を&lt;em&gt;blog favicon url&lt;/em&gt;の欄に入力する&lt;/li&gt;
	&lt;li&gt;保存をクリックし、ブログを再構築する&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;管理画面にFaviconを設定する&lt;/h4&gt;

殆どの手順は、上の「ブログにFaviconを設定する」と同じです。最初のブログセレクタで&lt;em&gt;システムメニュー&lt;/em&gt;を選択するか、画面右上から&lt;em&gt;システムメニュー&lt;/em&gt; &gt; &lt;em&gt;プラグイン&lt;/em&gt;と進んで、システムレベルで同様の作業を行ってください。管理画面のFaviconについては、再構築は必要ありません。

&lt;h4&gt;asset ID&lt;/h4&gt;

MT4のファイルアップロード機能を利用してアップロードした画像をFaviconに利用する場合、URLの代わりにその画像ファイルのAsset IDを以下のように指定できます。

&lt;blockquote&gt;asset:42&lt;/blockquote&gt;

Asset IDの調べ方は、今のところちょっとよい方法が思い浮かばないので、宿題とさせてください。

&lt;h3&gt;チェンジログ&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;2.01 (20071208)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
        &lt;li&gt;URLが未設定のブログの再構築で警告が出ていた問題を修正&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;35&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/download/FaviconManager2.01.zip&#34;&gt;FaviconManager2.01.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;2.0 (20070812)&lt;/dt&gt;
&lt;dd&gt;
&lt;ul&gt;
	&lt;li&gt;最初のリリース&lt;/li&gt;
	&lt;li&gt;&lt;form mt:asset-id=&#34;20&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/faviconmanager_2_0.zip&#34;&gt;faviconmanager_2_0.zip&lt;/a&gt;&lt;/form&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>CustomEditorButton</title>
      <link>http://example.org/2007/000196.html</link>
      <pubDate>Sat, 11 Aug 2007 12:19:34 +0900</pubDate>
      
      <guid>http://example.org/2007/000196.html</guid>
      <description>&lt;h3&gt;動作環境&lt;/h3&gt;

Movable Type 3.3 専用のプラグインです。他のバージョンでは動作しません。

&lt;h3&gt;インストール&lt;/h3&gt;
ファイルをダウンロード、解凍したら、お使いのMovable Typeのディレクトリに上書きする形でアップロードしてください。「mt-static」を移動している場合や、上書きが不安な場合は、以下の2箇所にファイルをアップロードしてください。
&lt;ul&gt;&lt;li&gt;解凍したディレクトリの「plugins/CustomEditorButton」を、お使いのMovable Typeの「plugins」ディレクトリに&lt;/li&gt;&lt;li&gt;解凍したディレクトリの「mt-static/plugins/CustomEditorButton」を、お使いのMovable Typeの「mt-static/plugins」ディレクトリに&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;ボタンの作成&lt;/h3&gt;

新規にボタンを追加する場合、以下の項目を設定します。

&lt;ul&gt;
    &lt;li&gt;name: ボタンの名前です。&lt;/li&gt;
    &lt;li&gt;表示文字: ボタンの表示に使用される文字を指定します。ボタンの表示用の画像が設定されている場合は、この項目は使用されません。&lt;/li&gt;&lt;li&gt;画像へのURL: ボタンのイメージに画像を使用する場合、アップロードした画像のurlをここに指定してください。現在の仕様では、ボタン外側の枠は自動的に提供されます。ボタンの中身だけの画像を用意してください。&lt;/li&gt;
    &lt;li&gt;説明: ボタンの説明を入力します。&lt;/li&gt;
    &lt;li&gt;コード: 後述のように、ボタンの動作をjavascriptで記述してください。&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;コード&lt;/h3&gt;

javascriptでボタンの動作を定義します。
ここに書かれたjavascriptのコードは、関数の中に自動的に展開されるので、必要な動作の内容だけを記述するだけですみます。
現在の仕様では、エディター画面で範囲選択がされている場合にのみ、選択範囲が「str」という変数に代入されて、このコードが実行されます。
str変数に処理結果を代入することで、選択範囲に処理が反映されます。
例えば、選択範囲を「div」タグで囲む場合は、以下の一行をコード欄に入力します。
&lt;pre class=&#34;code&#34;&gt;str = &#39;&amp;lt;div&amp;gt;&#39; + str + &#39;&amp;lt;/div&amp;gt;&#39;;&lt;/pre&gt;

なお、別途宣言済みの変数「txt」に値を代入すると、textareaの全体をtxtで置き換えます。

&lt;h3&gt;個人用の設定&lt;/h3&gt;

&lt;img alt=&#34;CustomEditorButton_fig3.png&#34; src=&#34;http://blog.aklaswad.com/CustomEditorButton_fig3.png&#34; width=&#34;263&#34; height=&#34;60&#34; class=&#34;mt-image-center&#34; style=&#34;text-align: center; display: block; margin: 0 auto 20px;&#34;/&gt;

各投稿者は、システムにインストールされているボタンの中から、好きなものを選択して使用できます。
画面の右上のログアウトの隣に、「My Button」メニューが追加されていますので、クリックして個人のボタン設定画面にすすんでください。
画面上段が、現在利用する設定となっているボタンの一覧です。利用したいボタンが下段にある場合、ドラッグ&amp;ドロップで上段に放り込んでください。並び順もそのまま適用されます。

&lt;h3&gt;最新版のダウンロード&lt;/h3&gt;

CustomEditorButton 0.23
&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton_20070227.tar.gz&#34;&gt;CustomEditorButton_20070227.tar.gz&lt;/a&gt;
&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton_20070227.zip&#34;&gt;CustomEditorButton_20070227.zip&lt;/a&gt;




</description>
    </item>
    
    <item>
      <title>MT4</title>
      <link>http://example.org/2007/000194.html</link>
      <pubDate>Thu, 09 Aug 2007 11:17:50 +0900</pubDate>
      
      <guid>http://example.org/2007/000194.html</guid>
      <description>
ついにリリースされました。早速インストール。無事完了。すばらしい。</description>
    </item>
    
    <item>
      <title>MovableTypeプラグインのコードを書く準備を40秒で済ませる</title>
      <link>http://example.org/2007/000191.html</link>
      <pubDate>Mon, 06 Aug 2007 00:20:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000191.html</guid>
      <description>最終的な目標は、次の通りです。

&lt;ul&gt;
	&lt;li&gt;Movable Typeのアプリのディレクトリにプラグインをインストールする手間を省きたい&lt;/li&gt;
	&lt;li&gt;svnでのバージョン管理を容易にしたい&lt;/li&gt;
&lt;/ul&gt;

この二つは表裏一体ですね。折角MTPlugin-Starterを使ってプラグインの雛形をさくさく作ったとしても、動作確認をするためにいったんsvn commitしてからテスト環境のMTディレクトリにexportして・・・などとやっていたのでは能率が悪いです。逆にプラグインの作業ディレクトリにMTのパッケージをまんま展開する方法も考えられますが、今度はsvn addしたりするのが面倒になりますし、結局MTを一つ新しくインストールしているわけですから、それだけでも結構な手間がかかります。

&lt;h3&gt;プラグインを読み込めるようにする&lt;/h3&gt;

つまり、プラグインのパッケージを展開したままの状態で、既存のMTがそのプラグインを認識すればよいわけです。

これを実現するために、mt-config.cgiに以下のように追記してみます。

&lt;pre class=&#34;code&#34;&gt;
PluginPath /home/melody/public_html/cgi-bin/mtdev/mt/plugins
PluginPath /home/melody/public_html/cgi-bin/mtdev/MyPlugin/plugins/
&lt;/pre&gt;

上の例では、ユーザー「melody」が自分のホームディレクトリ以下のpublic_html/cgi-bin内に「mtdev」ディレクトリを作り、その中で作業を行おうとしていることを想定しています。以下、この「mtdev」ディレクトリを作業の中心にします。
mtdev/mtがMTのアプリのインストールディレクトリで、MyPluginディレクトリがプラグインのパッケージです。
この状態でmtdev/mt/mt-config.cgiに上の二行を追加すると、なんと、mtのアプリにプラグインを突っ込まなくてもプラグインを認識してくれます。既存のプラグインもきちんと読み込みます。ちなみに下の行だけだと既存のプラグインが読み込まれなくなってしまいますのでご注意ください。

&lt;h3&gt;mt-staticも実行時にマージされるようにする&lt;/h3&gt;

話はこれでは終わりません。プラグインのパッケージには、plugins(主にPerlで書かれたプラグインのコア部分がはいってます)ディレクトリの他にも、様々なディレクトリが含まれています(無い場合もある)。
「mt-static」や「php」等ですね。

「mt-static」ディレクトリには、プラグインが使用する画像やcssなどの静的ファイルが入っています。実際にプラグインをインストールする際には、「MyPlugin/mt-static/plugins/MyPlugin」というディレクトリを、mtの同名のディレクトリにコピーすれば動くよ、という意味で、pluginsディレクトリの外に置かれています。(という慣習になっています。)
では早速こいつも実際にインストールはせずに利用可能にしてみましょう。
とりあえずmt-config.cgiにプラグインのmt-staticディレクトリを利用するように書いてみます。

&lt;pre class=&#34;code&#34;&gt;StaticWebPath http://example.com/cgi-bin/mtdev/MyPlugin/mt-static/&lt;/pre&gt;

しかし、これだけでは駄目です。これではMTの管理画面が普段読んでいるcssやらjavascriptにアクセスできなくなります。StaticWebPathの性質上、複数指定することもできません。
mt-staticディレクトリの中身は普通にユーザーがブラウザから閲覧する際にアクセスが行われるので、apacheの設定で何とかします。apacheの黒魔術ことmod_rewriteを利用します。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;IfModule mod_rewrite.c&amp;gt;
    RewriteEngine on
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^MyPlugin/mt-static/(.*)$ /~melody/cgi-bin/mtdev/mt-static/$1 [L,QSA]
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;

mtdevディレクトリに.htaccessを作成し、上記の内容を仕込みます。これで、プラグインのmt-staticにアクセスしてファイルが無かった場合には、apacheが自動的に本来のmt-staticディレクトリに探しに行ってくれます。(mt-staticディレクトリは一階層上に移動してます。)

&lt;h3&gt;mt-config.cgiが自動的に切り替わるようにする&lt;/h3&gt;

まだまだ終わりません。mt-config.cgiにプラグイン固有の情報が入ってしまったことで、新しいプラグインを作成するときには、mt-confg.cgiを書き換えなくてはならなくなってしまいました。新規プラグインの作成時にmt-config.cgiを修正するだけなら構わないのですが、以前のプラグインの動作を確認するような場合に毎回書き換える必要があるとなると、ちょっと、いや、かなり嫌ですね。

そこで、各プラグイン毎に一つずつのmt-config.cgiを用意して、動作確認をしたいプラグインに応じて自動的に、MTが読み込むmt-config.cgiが切り替わるようにします。

MTが構成ファイルとして読み込むファイルは、デフォルトではMTディレクトリの「mt-config.cgi」ファイルとなっていますが、実はシステムの環境変数に「MT_CONFIG」として指定することで変更が可能です。
再びapacheの十徳ナイフことmod_rewriteの出番です。mod_setenvifもあわせて利用します。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;IfModule mod_rewrite.c&amp;gt;
    RewriteRule ^x/([^/]+?)/(.*)$ /~melody/cgi-bin/mtdev/mt/$2 [L,QSA,E=MT_CONFIG:$1-config.cgi]
&amp;lt;/IfModule&amp;gt;
&amp;lt;IfModule mod_setenvif.c&amp;gt;
    SetEnvIf REDIRECT_MT_CONFIG &amp;quot;^(.*)$&amp;quot; MT_CONFIG=$1
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;

これまでの例に倣って言えば、「/~melody/cgi-bin/mtdev/x/MyPlugin/mt.cgi」というURLへのアクセスに対して、環境変数MT_CONFIGに「MyPlugin-config.cgi」をセットして「/~melody/cgi-bin/mtdev/mt/mt.cgi」にアクセスした場合の結果が返却されます。「x」ディレクトリは実在する必要はありません。

ちょっとmod_rewriteの動作が良く分からず、なぜかMT_CONFIGにセットしたはずの値がREDIRECT_MT_CONFIGにセットされてしまうため、mod_setenvifで再設定して回避しています。もっとスマートなやり方があったら誰か教えてください。

また、構成ファイルの設置場所は、MTディレクトリから移動は出来ないようで、他の場所に置くといろいろ不具合が出ます。回避することも出来そうですが手間が増えるので止めておきます。

&lt;h3&gt;最後にphpも・・・&lt;/h3&gt;

残るはphpです。phpはテンプレートタグをダイナミックパブリッシングで動作させるために必要となりますね。テンプレートタグの動作を記述したphpファイルを「MTディレクトリ/php/plugins」というディレクトリに放り込むことで動作します。
これは・・・実は、どうにも出来ませんでした!作戦失敗です!
ここまで長々読んでそれかよ!と憤慨された方どーもすみません。

ただし、それはMT3.3までの話。MT4からはプラグインのディレクトリにphpという名前のディレクトリを作ってファイルをおいて置くと、phpプラグインとして読み込んでくれるように拡張されています。今回の例では「MyPlugin/plugins/MyPlugin/php」以下に。WidgetManagerなどのデフォルトプラグインもこの構成に変更になっています。ですから、MT4上で開発する場合には、同じ構成にしておけば最初のPluginPathの設定の段階でphpファイルについても自動的に読み込まれています。
というところでお茶を濁してください。

&lt;h3&gt;まとめ&lt;/h3&gt;

今回作成した環境で新規にプラグインを作成する場合、以下の手順になります。

&lt;ol&gt;
	&lt;li&gt;mtdevディレクトリに移動&lt;/li&gt;
	&lt;li&gt;mt-plugin-start.plでプラグインの雛形を作る&lt;/li&gt;
	&lt;li&gt;(プラグイン名)-config.cgiファイルを作成し、中身も名前にあわせて書き換える&lt;/li&gt;
	&lt;li&gt;(プラグイン名)-configファイルをmtディレクトリに放り込む&lt;/li&gt;
&lt;/ol&gt;

これだけで、ブラウザからmtdev/x/(プラグイン名)にアクセスすれば即座に動作確認が出来るようになりました。
プラグインディレクトリは完全にMTディレクトリから切り離され、ファイルを移動したりする必要はありません。(MT3のphpファイル以外)。
また、プラグインディレクトリが独立しているので、svn add --force *なんてしても余計なファイルが混じったりもしません。
今回作成したMyPlugin-config.cgiはこうなりました。

&lt;pre class=&#34;code&#34;&gt;
CGIPath http://example.com/~melody/cgi-bin/mtdev/x/MyPlugin/
ObjectDriver DBI::mysql
Database     mtdev
DBUser       melody
DBPassword   nelson
PluginPath   /home/melody/public_html/cgi-bin/mtdev/mt/plugins
PluginPath   /home/melody/public_html/cgi-bin/mtdev/MyPlugin/plugins/
StaticWebPath  /~melody/cgi-bin/mtdev/MyPlugin/mt-static/
StaticFilePath /home/melody/public_html/cgi-bin/mtdev/mt-static/
&lt;/pre&gt;

データベース設定は、共通にしてもプラグイン毎に変えてもどっちでも良いかなと思います。
mtdevディレクトリに設置した.htaccessはこんな感じ。

&lt;pre class=&#34;code&#34;&gt;
Options -Indexes
&amp;lt;IfModule mod_rewrite.c&amp;gt;
    RewriteEngine on
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^([^/]+?)/mt-static/(.*)$ /~melody/cgi-bin/mtdev/mt-static/$2 [L,QSA]
    RewriteRule ^x/([^/]+?)/(.*)$ /~melody/cgi-bin/mtdev/mt/$2 [L,QSA,E=MT_CONFIG:$1-config.cgi]
&amp;lt;/IfModule&amp;gt;
&amp;lt;IfModule mod_setenvif.c&amp;gt;
    SetEnvIf REDIRECT_MT_CONFIG &amp;quot;^(.*)$&amp;quot; MT_CONFIG=$1
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;

後はconfig.cgiの自動生成を行うスクリプトを組んでしまえば、完璧かな〜と思います。おしまい。</description>
    </item>
    
    <item>
      <title>MT4Beta : Beta7 にアップグレードした。</title>
      <link>http://example.org/2007/000184.html</link>
      <pubDate>Thu, 19 Jul 2007 01:13:22 +0900</pubDate>
      
      <guid>http://example.org/2007/000184.html</guid>
      <description>
いやあ、StyleCatcherが本格的に動くと、えらく印象が変わりますね。
Vox由来と思われるテーマが同梱されていて、色々とテーマをとっかえひっかえすることが楽しめました。
詳しい仕組みはまだ見ていませんが、レイアウト(2カラム,3カラム、サイドバーは右、いや左、など)まで半径2クリックで変更できるようになっています。
ということでデザインコロコロ変えてます。すみません。

あと、MT4のベータを長く使っていた人はエントリーのプレビュー機能も条件反射で使うようになっていると思いますが(これは本当に便利)、beta6までとプレビュー画面の保存ボタンと再編集ボタンの位置が入れ替わっているので注意が必要です。どづぼに嵌るところでした。危ないところでしたよ・・・</description>
    </item>
    
    <item>
      <title>サーバーを引っ越してみた</title>
      <link>http://example.org/2007/000174.html</link>
      <pubDate>Sat, 14 Jul 2007 20:14:26 +0900</pubDate>
      
      <guid>http://example.org/2007/000174.html</guid>
      <description>
xreaのやや古めのサーバーから、新しいサーバーに引っ越した。
引越しのお目当てはsvn。xreaの新しいサーバーではsvnが利用可能なので、色々な作業が非常に楽になります。
リポジトリの公開が出来るかは微妙ですが、外部からのexportができるだけでもかなり嬉しいですね。

今回行った作業の手順

&lt;ol&gt;
	&lt;li&gt;新しいサーバーを確保する(ValueDomainでドメインを取得している場合、取得しているドメインの数だけXreaに無料サーバースペースを利用できる。3クリック程度で申請、一時間弱で利用可能になる。)&lt;/li&gt;
	&lt;li&gt;確保したサーバーにMTをインストール、コピーしたsqliteのデータベースを読ませることでマルッと移植。&lt;/li&gt;
	&lt;li&gt;でもこれだけでは画像などのデータは移植できないので、ブログディレクトリも移植。tarで固めてwget。楽。&lt;/li&gt;
	&lt;li&gt;いったん新しい環境に合わせてmt-config.cgiを修正し動作確認。問題なす。&lt;/li&gt;
	&lt;li&gt;mt-config.cgiを前のものに戻す。ディレクトリ構成は変えない予定。&lt;/li&gt;
	&lt;li&gt;ValueDomainでDNSの設定を変更。blog.aklaswad.comドメインのAレコードを新しいサーバーに向ける。&lt;/li&gt;
	&lt;li&gt;DNSレコードが浸透するまでコーヒー。&lt;/li&gt;
	&lt;li&gt;新しいサーバーのXREAのコントロールパネルから、「ドメインウェブ」の設定(名前ベースのVirtualHost設定)をする。&lt;/li&gt;
	&lt;li&gt;動作確認して終わり。&lt;/li&gt;
&lt;/ol&gt;

手順の8,では、名前がそのサーバーに対して解決できるまでは設定できない。エラーメッセージが小さいので、最初何故設定が反映されないのか分からなかったです。
よそから移動してくる場合、「強制」設定を使えばよかったのですね。
またはdefaultでメンテナンス画面が出るようにするか。

あと、途中でXREAの広告免除権の移動もしてます。一時的に広告が見えた人もいるかと思いますが、それはご愛嬌ということで。</description>
    </item>
    
    <item>
      <title>MT4Beta : ページ一覧を作成してみた</title>
      <link>http://example.org/2007/000173.html</link>
      <pubDate>Sat, 14 Jul 2007 00:23:30 +0900</pubDate>
      
      <guid>http://example.org/2007/000173.html</guid>
      <description>&lt;MTSetVarTemplate name=&#34;page_list_item&#34;&gt;
    &lt;MTPagesHeader&gt;&lt;ul class=&#34;page-list&#34;&gt;&lt;/MTPagesHeader&gt;
    &lt;MTSetVarBlock name=&#34;current_page_title&#34;&gt;&lt;MTPageTitle&gt;&lt;/MTSetVarBlock&gt;
    &lt;MTIf name=&#34;current_page_title&#34; ne=&#34;index&#34;&gt;
        &lt;li&gt;&lt;a href=&#34;&lt;$MTPagePermalink$&gt;&#34;&gt;&lt;$MTPageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/MTIf&gt;
    &lt;MTPagesFooter&gt;&lt;/ul&gt;&lt;/MTPagesFooter&gt;
&lt;/MTSetVarTemplate&gt;

&lt;MTSetVarTemplate name=&#34;detect_index&#34;&gt;
    &lt;MTSetVar name=&#34;has_index&#34; value=&#34;0&#34;&gt;
    &lt;MTPages&gt;
        &lt;MTSetVarBlock name=&#34;current_page_basename&#34;&gt;&lt;MTPageBasename&gt;&lt;/MTSetVarBlock&gt;
        &lt;MTIf name=&#34;current_page_basename&#34; eq=&#34;index&#34;&gt;
            &lt;MTSetVar name=&#34;has_index&#34; value=&#34;1&#34;&gt;
            &lt;MTSetVarBlock name=&#34;index_link&#34;&gt;&lt;$MTPagePermalink$&gt;&lt;/MTSetVarBlock&gt;
        &lt;/MTIf&gt;
    &lt;/MTPages&gt;
&lt;/MTSetVarTemplate&gt;

&lt;div id=&#34;folder-list&#34;&gt;


    &lt;MTTopLevelFolders&gt;
        &lt;MTFolderHeader&gt;&lt;ul class=&#34;folder-list&#34;&gt;&lt;/MTFolderHeader&gt;
        &lt;li&gt;
        &lt;MTGetVar name=&#34;detect_index&#34;&gt;
        &lt;MTIf name=&#34;has_index&#34;&gt;
            &lt;a href=&#34;&lt;MTGetVar name=&#34;index_link&#34;&gt;&#34;&gt;&lt;$MTFolderLabel$&gt;&lt;/a&gt;
        &lt;MTElse&gt;
            &lt;$MTFolderLabel$&gt;
        &lt;/MTIf&gt;
        &lt;MTSubFolderRecurse&gt;
            &lt;MTPages&gt;
                &lt;MTGetVar name=&#34;page_list_item&#34;&gt;
            &lt;/MTPages&gt;
        &lt;/li&gt;
        &lt;MTFolderFooter&gt;&lt;/ul&gt;&lt;/MTFolderFooter&gt;
    &lt;/MTTopLevelFolders&gt;

    &lt;MTPages no_folder=&#34;1&#34;&gt;
        &lt;MTGetVar name=&#34;page_list_item&#34;&gt;
    &lt;/MTPages&gt;</description>
    </item>
    
    <item>
      <title>MT4Beta : DashboardWidgetを作ってみた。はてブの新着を表示するよ。</title>
      <link>http://example.org/2007/000170.html</link>
      <pubDate>Wed, 11 Jul 2007 02:10:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000170.html</guid>
      <description>
&lt;ins datetime=&#34;2008-05-09T22:11:04+09:00&#34;&gt;
このプラグインは、MT4.0での新機能のサンプルとして作成したものです。機能/性能的に実用に耐えるものではありません。あらかじめご了承下さい。
&lt;/ins&gt;

mt4をインストールして、一番最初に目に飛び込んでくる新機能といえば、ダッシュボード上に並んだウィジェットではないでしょうか。
これももちろんプラグインで追加出来ます。出来るはずです。作りました。作ってみました。

&lt;span mt:asset-id=&#34;11&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/HatenaBookmarkWidget0.1.zip&#34;&gt;HatenaBookmarkWidget0.1.zip&lt;/a&gt;&lt;/span&gt;

&lt;span mt:asset-id=&#34;9&#34; class=&#34;mt-enclosure mt-enclosure-image&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/images/HatenaBookmarkWidgetScreen01.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;http://blog.aklaswad.com/assets_c/9.5115f590dd5d87e9621ec6b8334b940c5ffc39a3.png&#34; width=&#34;160&#34; height=&#34;120&#34; class=&#34;mt-image-left&#34; style=&#34;float: left; margin: 0 20px 20px 0;&#34;/&gt;&lt;/a&gt;&lt;/span&gt;今回の題材は、はてなブックマークでの、該当のブログ全体での被ブックマークを、タグやコメントも含めて最新20件(かな?）管理画面のダッシュボードにウィジェットとして表示するプラグインです。なんだかはてブのプラグインばかり作っているような気もしますが、気のせいでしょう。

&lt;br clear=&#34;all&#34; /&gt;
やっぱり肝はレジストリでしょうか。諸情報をレジストリに追加することで動作します。

&lt;pre class=&#34;code&#34;&gt;
sub init_registry { 
    my $plugin = shift;
    $plugin-&amp;gt;registry({
        applications =&amp;gt; {
            &#39;cms&#39; =&amp;gt; {
                widgets =&amp;gt; {
                    &#39;HatenaBookmark&#39; =&amp;gt; {
                        label =&amp;gt; &#39;HatenaBookmark&#39;,
                        template =&amp;gt; &#39;tmpl/widget.tmpl&#39;,
                        handler =&amp;gt; \&amp;amp;_widget_handler,
                        set =&amp;gt; &#39;sidebar&#39;,
                        singular =&amp;gt; 1,
                        condition =&amp;gt; sub {
                            my ($page, $scope) = @_;
                            return $page eq &#39;dashboard&#39; &amp;amp;&amp;amp; $scope !~ /system/;
                        },
                    },
                },
            },
        },
    });
}
&lt;/pre&gt;

大体、見たままで分かるかと思います。
setは、「main」「sidebar」が指定できるようです。画面の右側に表示するか左側に表示するか、ですね。
singularは、複数同時に表示可能とするか否か、です。
conditionには、現在のページでwidgetを利用可能とするかを判定するサブルーチンのリファレンスを指定します。サブルーチンは、引数として与えられた条件を元に、現在の画面でwidgetを表示するか否か、をブール値で返却します。

今回は、無駄に張り切ってややこしい処理をするものを作りましたが、簡単なメッセージ表示などのプラグインなら&lt;a href=&#34;http://blog.aklaswad.com/2007/000113.html&#34;&gt;config.yaml&lt;/a&gt;一発で出来そうです。

このプラグインはとりあえずの実験用なので、当面ベータ版扱いとしてください。そのうちキャッシュ機能や新着判定機能などをつけてきちんとしたものにするかもしれません。

&lt;ins datetime=&#34;2007-07-11T16:37:40+09:00&#34;&gt;追記: 公開からわずか半日後、はてなの障害?の巻き添えで管理画面が開けなくなる事態が発生。これは、このプラグインのテストにはてなが全力で協力してくれたと考える。&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>FaviconManager2 : FaviconManagerをMT4に対応させたよ</title>
      <link>http://example.org/2007/000169.html</link>
      <pubDate>Mon, 09 Jul 2007 00:30:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000169.html</guid>
      <description>&lt;h3&gt;Change Log&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;テンプレートを書き換える必要が無くなった
	    &lt;ul&gt;
                &lt;li&gt;以前のバージョンでは事前にテンプレートを書き換える処理を実行する必要がありましたが、その必要がなくなりました。&lt;/li&gt;
                &lt;li&gt;プラグインが有効な状態で再構築するだけで、自動的にHTMLファイルにfaviconへのリンクが追加されます。&lt;/li&gt;
                &lt;li&gt;プラグインをアンインストールした場合にも、テンプレートにゴミが残ったりしません。&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
	&lt;li&gt;MTのダイナミックパブリッシングに対応した&lt;/li&gt;
	&lt;li&gt;MT4のassets機能に対応した
	    &lt;ul&gt;
                &lt;li&gt;urlの代わりに、「asset:N」(Nはassetのid)と指定することで、assetから画像を引っ張ってきます。ただ、assetのidをサクっと確認することが出来ないんですよね。。。&lt;/li&gt;
                &lt;li&gt;管理画面上で一覧表示して選択するように出来ればよいのですが、現在のところ手が回ってませんすみません。&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Tech Memo&lt;/h3&gt;

管理画面へのリンクタグの追加部分では、ちょっと面白いtransformerを使っています。
管理画面のHTMLヘッダー部分はheaderテンプレートで記述されているのですが、この中で順不同で構わないlinkタグなどは、一度「html_head」変数に格納されてから出力されます。
さらに、「mtsetvarblock」タグ部分で「prepend」というアトリビュートが指定されていて、処理時点ですでに変数に値が格納されている場合には、上書きせずに、既存の内容に続けて追記するようになっています。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;mt:setvarblock name=&amp;quot;html_head&amp;quot; prepend=&amp;quot;1&amp;quot;&amp;gt;&lt;/pre&gt;

ですから、HTMLのヘッダー部分にlinkタグなどを追加したい場合、この「html_head」変数に追加したい内容を入れてあげるだけで、自動的にMTがマージしてくれる、というわけです。
今回は、template_sourceコールバックをフックして、setvarblockタグを含むテンプレートの断片を、直接headerテンプレートの先頭に追加してみました。

&lt;pre class=&#34;code&#34;&gt;
MT-&amp;gt;add_callback(&#39;MT::App::CMS::template_source.header&#39;, 9, $plugin, \&amp;amp;_add_cmsfavicon);
sub _add_cmsfavicon {
    my ($eh, $app, $tmpl_ref) = @_;
    my $url = $plugin-&amp;gt;get_favicon_url;
    my $add = &amp;lt;&amp;lt;&amp;quot;EOT&amp;quot;;
&amp;lt;mt:setvarblock name=&amp;quot;html_head&amp;quot; prepend=&amp;quot;1&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;shortcut icon&amp;quot; href=&amp;quot;$url&amp;quot; /&amp;gt;
&amp;lt;/mt:setvarblock&amp;gt;
EOT
    $$tmpl_ref = $add . $$tmpl_ref;
}
&lt;/pre&gt;

これだけで、管理画面のHTMLヘッダ部分に任意の内容を追加できます。mt:varへの値の設定方法については、もっと上手いやり方もあると思います。
MT4のテンプレートは、非常に多くのsetvar、getvarなどの変数タグが使われていて最初は面食らいましたが、そのお陰でこういったハックの余地が多く提供されていると思うと、なんだかワクワクしてきますね。</description>
    </item>
    
    <item>
      <title>MT4Beta : Transformer プラグインを作ってみた速報</title>
      <link>http://example.org/2007/000162.html</link>
      <pubDate>Thu, 05 Jul 2007 00:05:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000162.html</guid>
      <description>
&lt;ins&gt;7月25日追記: この記事中のコードだと現在のバージョンでは動かないようです。コメントでご指摘いただきました。ありがとうございます。&lt;/ins&gt;

MT4での新しいtransformerに挑戦してみました。
DOMライクなインターフェイスが提供され、管理画面の特定の位置にコードを挿入することが非常に容易になりました。

こんな感じのコードで動きます。

&lt;pre class=&#34;code&#34;&gt;
package MT::Plugin::TransformerSample;
use strict;
use base qw( MT::Plugin );
our $VERSION = &#39;1.0&#39;;
 
my $plugin = MT::Plugin::TransformerSample-&amp;gt;new({
    name =&amp;gt; &#39;TransformerSample&#39;,
});
 
MT-&amp;gt;add_plugin($plugin);
MT-&amp;gt;add_callback(&#39;MT::App::CMS::template_param.edit_entry&#39;, 9, $plugin, \&amp;amp;param_transformer);
 
sub param_transformer {
    my ($eh, $app, $param, $tmpl) = @_;
    die &#39;something wrong...&#39; unless UNIVERSAL::isa($tmpl, &#39;MT::Template&#39;);
 
    my $host_node = $tmpl-&amp;gt;getElementById(&#39;useful-links&#39;)
        or die &#39;cannot get useful-links block&#39;;
 
    my $node = $tmpl-&amp;gt;createElement( &#39;TEXT&#39;, &#39;&amp;lt;em&amp;gt;hello &amp;lt;b&amp;gt;MT4&amp;lt;/b&amp;gt; transformer?&amp;lt;/em&amp;gt;&#39; );
    $tmpl-&amp;gt;insertBefore($host_node, $node)
        or die &#39;failed to insertBefore.&#39;;
}
 
1;&lt;/pre&gt;

エントリーの投稿/編集画面の右側、クイックリンク(useful-links)の上にチラッとhelloworldするだけのプラグインですが、何かの参考になるでしょうか。

自前でMT::Template::Nodeのインスタンスを作成する必要がある辺りが、ちょっと癖があるなと感じました。
innerHTMLメソッドなどを使うと、MTタグのコンパイルまでやってくれるっぽいので、その辺を使いこなせればよいのかな。
あと、HTMLタグはMTのテンプレートの構文解析の対象にならないので、HTMLタグのid属性などを基準には拾ってくることが出来ない見たいです。

その他、気づいたことや、各メソッドの使い方など、後でまとめてみたいと思います。</description>
    </item>
    
    <item>
      <title>GPP</title>
      <link>http://example.org/2007/000166.html</link>
      <pubDate>Wed, 04 Jul 2007 01:18:36 +0900</pubDate>
      
      <guid>http://example.org/2007/000166.html</guid>
      <description>
&lt;a href=&#34;http://junnama.alfasado.net/online/2007/07/post_100.html&#34;&gt;そろそろ静的生成と動的生成ついてひとこと言っとくか。 (Junnama Online (Mirror))&lt;/a&gt;で、ページの再構築を、ページの最初の閲覧時まで遅延するプラグインが公開されています。素晴らしいですね。

で、ネーミングを募集されるそうなので考えてみた。
一番乗りするものの待ち時間が一番長いのは自然の摂理。だがそれが良い。

&#34;Greg Packer&#39;s Publishing&#34;

が良いと思います!

参考: &lt;a href=&#34;http://japanese.engadget.com/2007/06/29/iphone-iloser/&#34;&gt;iPhone行列リポート：先頭は「iLoser」 - Engadget Japanese&lt;/a&gt;



</description>
    </item>
    
    <item>
      <title>tracのbrowse sourceでphpファイルの内容を表示させる</title>
      <link>http://example.org/2007/000164.html</link>
      <pubDate>Tue, 03 Jul 2007 20:05:55 +0900</pubDate>
      
      <guid>http://example.org/2007/000164.html</guid>
      <description>&lt;a href=&#34;http://trac.edgewall.org/wiki/TracFaq#why-do-my-php-pages-show-up-blank-in-the-browser&#34;&gt;TracFaq - The Trac Project - Trac&lt;/a&gt;
本家のFAQページにきちんと書いてあった。
まず、スタンドアローンのphpを入れるらしい。

&lt;pre class=&#34;code&#34;&gt;$ sudo aptitude install php5-cli&lt;/pre&gt;

最初どれを入れればよいのか分からなかったが、これらしい。
それからtrac.iniにphpのパスを書く。書かなくても動いた気がしたけど、一応書いておく。

&lt;pre class=&#34;code&#34;&gt;[mimeviewer]
enscript_path = enscript
php_path = /usr/bin/php&lt;/pre&gt;

おお、無事にphpファイルの中身が表示された上に、色までつきやがった。いわゆるシンタックスハイライトってやつだ。
どうやら隣のenscriptというやつも設定してやれば、同様に他の種類のファイルもシンタックスハイライターしてくれるっぽいので、ついでにインストールしてやる。

&lt;pre class=&#34;code&#34;&gt;$ sudo aptitude install enscript&lt;/pre&gt;

これも一応パスを書く。

&lt;pre class=&#34;code&#34;&gt;[mimeviewer]
enscript_path = /usr/bin/enscript
php_path = /usr/bin/php&lt;/pre&gt;

色のカスタマイズ等は、code.cssを自分で弄るみたい。細かいことはtracの初期ページにきちんと書いてあった。tracはドキュメントがしっかりしてるなあ。おしまい。</description>
    </item>
    
    <item>
      <title>MT4Beta : ExtensibleArchives、うざい</title>
      <link>http://example.org/2007/000163.html</link>
      <pubDate>Tue, 03 Jul 2007 03:34:50 +0900</pubDate>
      
      <guid>http://example.org/2007/000163.html</guid>
      <description>
&lt;blockquote&gt;MT4の標準プラグインのExtensibleArchives、うざい&lt;/blockquote&gt;
■ Twitter / Hirotaka Ogawa: MT4の標準プラグインのExtensibleArchi...

(o)さんがこんな呟きを。
アーカイブのカスタマイズは、自分的には実装して欲しいと思っていたので、少しショック。
でも、わざわざ「標準プラグインの」と書いていることから、フレームワークの実装の問題ではなく、デフォルトで導入されているプラグインの、管理画面での見え方がかっこ悪いという話なのかと推測する。</description>
    </item>
    
    <item>
      <title>TimeType 0.3</title>
      <link>http://example.org/2007/000161.html</link>
      <pubDate>Tue, 03 Jul 2007 01:53:22 +0900</pubDate>
      
      <guid>http://example.org/2007/000161.html</guid>
      <description>
&lt;span mt:asset-id=&#34;4&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/TimeType0.3.zip&#34;&gt;TimeType0.3.zip&lt;/a&gt;&lt;/span&gt;
そこはかとなくアップデート。

&lt;ul&gt;
	&lt;li&gt;自動投稿のエントリーの諸設定を、特定のエントリーの設定のクローンとして設定できるようにしてみた。設定のクローン元となる任意のエントリーのentry_idを、プラグインの設定画面から指定してください。カテゴリー、公開設定、改行設定、キーワード、コメントの許可、トラックバックの許可、の設定内容がクローン元エントリーからコピーされて、投稿されます。&lt;/li&gt;
	&lt;li&gt;メモ中のhttpから始まる文字列にリンクが張られるようにした&lt;/li&gt;
	&lt;li&gt;ブックマークにコメントをつけられるようにした。Timelogのブックマークレットでは、ブックマーク元のページのタイトルがメモに追加されますが、それ以降に、連続した半角スペースか、連続したセミコロン「;」を記入すると、以降がメモとして扱われます。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MT4Beta : ExtensibleArchivesを作成してみた雑感</title>
      <link>http://example.org/2007/000157.html</link>
      <pubDate>Thu, 28 Jun 2007 02:15:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000157.html</guid>
      <description>ExtensibleArchivesというのは(この呼び方が正しいのかは知りません)、プラグインから独自のアーカイブの種類を作成するためのシステムです。現在のMT4beta3で、今までの月別やカテゴリー別のアーカイブに加えて、投稿者別や、カテゴリーごとの月別、週別などのアーカイブが作成できるようになっていますが、これらもプラグインによって実現されています。
さらに、プラグインを自作することによって、より豊富なアーカイブページを作成することが出来るわけです。投稿者ごとのカテゴリーアーカイブとか、カテゴリーごとの世紀別アーカイブとか好き勝手な形式のアーカイブを作成できるわけです。夢が広がりますね。

それで、今回練習がてら、エントリーのタイトルを基準にした英和辞書風アーカイブの作成に挑戦してみました。で、まあ、以下の理由によりうまくいきませんでした。うーん、アーカイブページの出力までは出来るんですけどね。

&lt;h3&gt;アーカイブの基本型が固定されている点&lt;/h3&gt;

プラグインからExtensibleArchiveを作成する場合、事前に、アーカイブの基本型を日付基準、投稿者基準、カテゴリー基準、エントリー基準、の中から選ぶ必要があります。というか無理やり選ばされます。例えば、カテゴリー基準のアーカイブなら「category_based」という項目を有効にします。項目を選ばない場合、自動的に日付基準としての振る舞いをするようです。
そして、「MTArchiveNext」などの一部のテンプレートタグの振る舞いについては、この基本型から振る舞いが決定され、プラグイン側で動作を決めることが出来ないようです。
結果、自分が作ろうとしたアーカイブでは、MTArchiveNextの動作がまったく意図しないものになってしまいました。ずいぶん悪戦苦闘したのですが、いまだに対応できていません。やっぱり、プラグイン作成の手間がかかるようになっても良いから、基本型と異なるスタイルのアーカイブも作成できるようにするために、「non_based」とかそんなものを追加して欲しいですね。

&lt;h3&gt;ページの作成とアーカイブリストの作成で動作が非対称な点&lt;/h3&gt;

プラグインの作成時に、いくつかのサブルーチンを登録する事になるのですが、これらは主に、「アーカイブページの再構築時」「MTArchivesなどのタグでのループ内」の二つの場合に呼び出されることになります。で、この二つの場合でのサブルーチンの呼ばれ方が、それぞれで違うので、非常にややこしいことになっています。
アーカイブを作成する場合に重要になる事の一つに、実際にこのアーカイブではファイルをいくつ出力するのか、ということがあります。
それで、出力するファイルの概要を決定するサブルーチンを、「archive_group_iter」という項目に指定するのですが、これは「MTArchives」から呼ばれるときにしか利用されません。実際のページのビルドのときは、「archive_file」という項目で指定する、出力するファイルのファイル名を決定するサブルーチンの実行結果を元に決定するようになっています。
これは非常に分かりづらいです。何か理由があったのかも分かりませんが、単なる設計ミスなのでは、という気がします。出来たら直して欲しいですねー。


というわけで、「英和辞書風アーカイブ」プラグインは現在絶賛未完成です。無念。</description>
    </item>
    
    <item>
      <title>MT4Beta : ExtensibleArchivesを作成してみた</title>
      <link>http://example.org/2007/000152.html</link>
      <pubDate>Sun, 24 Jun 2007 23:10:40 +0900</pubDate>
      
      <guid>http://example.org/2007/000152.html</guid>
      <description>まず、そもそもExtensibleArchivesとは何か、について説明してみます。

MTでは、いわゆる過去ログのことを、Archiveと呼びます。
Archiveは、ブログに存在するエントリーを、特定のルールに従っていくつかのグループにまとめ、各グループ毎に一つのファイルに出力するという形で実現されています。

例えば、月別アーカイブでは、2007年5月に投稿されたエントリーを集めたグループ、2007年6月に投稿されたエントリーを集めたグループ、といった形にエントリーがグループ分けされます。そして、それらグループをテンプレート(MT3.3のデフォルトでは日別テンプレート)にしたがって整形して、それぞれのファイルに出力します。ファイルは、組み合わせられたグループの数だけ出力されることになります。

同様にカテゴリーアーカイブでは、hogeカテゴリーに属するエントリーのグループ、mogeカテゴリーに属するエントリーのグループといったグループ分けを行い、それぞれのグループごとにカテゴリーテンプレートで整形してファイルに出力する、という具合です。

今までのMTでも、好きなグループ分けのルールを、好きなテンプレートと組み合わせて好きなファイルパスに出力させる事が出来る、自由度の高いシステムが採用されていました。(アーカイブ・マッピング)
しかし、その中心となるグループ分けのルールそのものは、システムに組み込みの5種類(多分)のみで、本体を改造しない限りは拡張ができませんでした。

今回MT4で追加されたExtensibleArchives機能は、このグループ分けのルールそのものをプラグインを導入することで拡張可能にするものです。
これによって、今までは出来なかったエントリーの投稿者別のアーカイブ等が作成できるようになりました。投稿者別アーカイブは現在のベータ版のデフォルトのプラグインとして同梱されていますね。

実際にプラグインをどうやって作成すればよいのか、コードとニラメッコしながら、早速、一つプラグインを作ってみました。何箇所か未解決の問題があるのですが、その辺りはMT4のリリースを待って修正したいと思います。

今回は、各エントリーのタイトルの頭文字を基準に、英和辞書風にグループ分けする「DictionaryArchive」を追加するプラグインを試作してみました。
まず、MT4のプラグインではお決まりのregistryに、サブルーチンを設定していきます。

sub init_registry {
    my $plugin = shift;
    $plugin-&gt;registry({
        archive_types =&gt; {
        &#39;Dictionary&#39; =&gt;
        ArchiveType(
            name =&gt; &#39;MyNameIsDictionary&#39;,
            archive_label =&gt; \&amp;dictionary_archive_label,
            archive_file =&gt; \&amp;dictionary_archive_file,
            archive_title =&gt; \&amp;dictionary_archive_title,
            archive_group_iter =&gt; \&amp;dictionary_group_iter,
            archive_group_entries =&gt; \&amp;dictionary_group_entries,
            default_archive_templates =&gt; [
                ArchiveFileTemplate(label =&gt; &#39;headletter_group.html&#39;,
                                    template =&gt; &#39;%a/%f&#39;,
                                    default =&gt; 1),
            ],
            dynamic_support =&gt; 0,
            author_based =&gt; 1,
        ),
    }});
}

ArchiveTypeサブルーチンに必要なパラメータを引渡し、新しいArchiveTypeオブジェクトを作成してregistryに登録します。

name
ちょっとどこで使われるのか分かりませんでした。

archive_label
アーカイブを管理画面から指定するような場合に表示される文字列です。文字列を返すサブルーチンのリファレンスを指定するようです。

archive_file
アーカイブを構築する際のファイル名を決定するサブルーチンのリファレンスを指定します。

archive_title
個々のアーカイブ・ページのタイトルを決定するサブルーチンのリファレンスを指定します。

archive_group_iter
このアーカイブの各ページの情報を順に返すイテレータとして動作するクロージャを返すサブルーチンのリファレンスを指定します。ああややこしい。

archive_group_entries
個々のページで表示するべきエントリーのオブジェクトの配列を返すサブルーチンのリファレンスを指定します。

default_archive_templates
アーカイブ・マッピング画面で表示されるデフォルトのファイルパス生成ルールを指定します。

author_based
真を指定すると、author archiveとしての振る舞いをします。他にdate_based、category_based、entry_basedを指定できます。重複しても構いません。

後は、よく分からないので省略。
archive_labelは静的な文字列を返すだけなので置いといて、ここまでで4つ、サブルーチンのリファレンスを指定しました。この4つのサブルーチンが、アーカイブの振る舞いを決定することになります。他はおまけです。


では、この4つのサブルーチンが、どのようなタイミングでどのように呼び出され、そして何を行えばよいのか見ていきます。

これらのサブルーチン群は、大きく以下のふたつのケースで呼び出されます。

アーカイブページを再構築する場合
インデックステンプレートなど、アーカイブ以外の箇所で「MTArchive*」タグを使って参照される場合

まず、アーカイブページを再構築する場合ですが、最初にMTは、再構築の対象となる


MTArchivePrevious/MTArchiveNextの出力をコントロール出来ない
</description>
    </item>
    
    <item>
      <title>MT4Beta : TimeTypeの投稿を別ブログにして新機能のaggregationを使って引っ張ってみた</title>
      <link>http://example.org/2007/000149.html</link>
      <pubDate>Fri, 22 Jun 2007 01:40:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000149.html</guid>
      <description>アトリビュートとしては、

&lt;ul&gt;
	&lt;li&gt;blog_ids&lt;/li&gt;
	&lt;li&gt;include_blogs&lt;/li&gt;
	&lt;li&gt;exclude_blogs&lt;/li&gt;
&lt;/ul&gt;

といったものが使えるみたいです。カンマ区切りでの複数指定、Allなどの指定方法があるようですが、詳しくは試していないのでちょっとわかりません。
Context.pmのset_blog_load_contextルーチンがブログのaggregation指定を実行している模様なので、詳細はコード読んでください。ビール飲んだら正規表現が分からなくなりましたので僕は読めません;-)

で、このblog_idsというやつを使って以下のような記述のwidgetを作成し、別ブログに投稿されているTimeTypeのエントリーをサイドバーに表示してみました。

&lt;pre class=&amp;quot;code&amp;quot;&gt;
&amp;lt;div class=&amp;quot;module-categories module&amp;quot;&amp;gt;
   &amp;lt;h2 class=&amp;quot;module-header&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;http://blog.aklaswad.com/mytimelog/&amp;quot;&amp;gt;MyTimeLog&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
   &amp;lt;div class=&amp;quot;module-content&amp;quot;&amp;gt;
      &amp;lt;ul class=&amp;quot;module-list&amp;quot;&amp;gt;
      &amp;lt;MTEntries blog_ids=&amp;quot;5&amp;quot; lastn=&amp;quot;3&amp;quot;&amp;gt;
         &amp;lt;li class=&amp;quot;module-list-item&amp;quot;&amp;gt;&amp;lt;h2&amp;gt;&amp;lt;$MTEntryTitle$&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;$MTEntryBody$&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/MTEntries&amp;gt;
      &amp;lt;/ul&amp;gt;
      see detail at &amp;lt;a href=&amp;quot;http://aklaswad.timelog.jp/&amp;quot;&amp;gt;my timelog page&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;
      &amp;lt;a href=&amp;quot;http://timelog.jp&amp;quot;&amp;gt;logged by Timelog&amp;lt;/a&amp;gt;
   &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

なかなかうまい事できたと思います。いえーい。</description>
    </item>
    
    <item>
      <title>TimeLog 20070620</title>
      <link>http://example.org/2007/000137.html</link>
      <pubDate>Thu, 21 Jun 2007 00:53:26 +0900</pubDate>
      
      <guid>http://example.org/2007/000137.html</guid>
      <description>





&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?a20145d54d3083693a53241a94464a4189c8a6be89e261&#34;&gt;17:51:34&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://blog.livedoor.jp/dankogai/archives/50856008.html&#34;&gt;404 Blog Not Found:新カテゴリ - ニセ情報科学&lt;/a&gt;&lt;/span&gt;

&lt;/p&gt;


</description>
    </item>
    
    <item>
      <title>MT4Beta : Beta3 にアップグレードした</title>
      <link>http://example.org/2007/000136.html</link>
      <pubDate>Thu, 21 Jun 2007 00:20:18 +0900</pubDate>
      
      <guid>http://example.org/2007/000136.html</guid>
      <description>
データベーススキーマの変更は無い模様。特にトラブル無くb3に移行できました。
ダッシュボードの表示がカスタマイズ可能になっていて、ほんとにダッシュボードという感じになっていますね。
この展開は予想していなかったのでちょっとびっくり。

目立った更新として、管理画面全体が日本語化されていますが、文字化けも無く良い感じ。

と思ったらログレコードに色々文字化けを発見。いやしかしこの文字化けは以前からあった気もする。あまり気にしてなかったけど。
しかもよく見ると文字化けした検索は全て同じIPから行われている。
早速nslookupしてみると・・・
&lt;pre&gt;186.70.249.66.in-addr.arpa      name = crawl-66-249-70-186.googlebot.com.&lt;/pre&gt;
へー、つまりタグクラウドをgoogle様が絨毯爆撃していたんですね。今更なネタですか。
しかしこれは、うざい。うざいからけど、やめてやめないで。
文字化けを(googleが)直すか、ログに表示しないかして欲しいですね。それpluで。

</description>
    </item>
    
    <item>
      <title>TimeLog 20070619</title>
      <link>http://example.org/2007/000135.html</link>
      <pubDate>Wed, 20 Jun 2007 00:21:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000135.html</guid>
      <description>

&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?812b633028c5a4918625665a94464a4189c8a6be89e261&#34;&gt;12:39:58&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;TimeType をアップデートしました。今までTemplateモジュールが無くて動かなかった環境でも大丈夫なはずです http://tinyurl.com/2af4nk&lt;/span&gt;

&lt;/p&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?ebfd7bac1dd76a0f4007dafa94464a4189c8a6be89e261&#34;&gt;14:02:54&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;TimeType ちょっといじるだけでmt4でも動くようになるな。&lt;/span&gt;

&lt;/p&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?26bd43c3ca42ff3a7271787a94464a4189c8a6be89e261&#34;&gt;14:03:27&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;実はTransformer以外の部分では、かなりの後方互換性があるらしい&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=mt4beta&#34;&gt;mt4beta&lt;/a&gt;]&lt;/span&gt;
&lt;/p&gt;






</description>
    </item>
    
    <item>
      <title>TimeType</title>
      <link>http://example.org/2007/000134.html</link>
      <pubDate>Tue, 19 Jun 2007 23:37:29 +0900</pubDate>
      
      <guid>http://example.org/2007/000134.html</guid>
      <description>&lt;h3&gt;必要環境&lt;/h3&gt;

TimeTypeの動作には以下の環境が必要です。

&lt;ul&gt;
	&lt;li&gt;Perl5.8.1以上&lt;/li&gt;
	&lt;li&gt;MovableType3.3以上&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;インストール&lt;/h3&gt;

解凍して出てきたpluginsディレクトリ内の「TimeType」ディレクトリをまるごと、インストールされているMovableTypeの「plugins」ディレクトリにアップロードしてください。

&lt;h3&gt;初期設定&lt;/h3&gt;

インストール後、システムメニュー &gt; プラグイン から、システムレベルで設定を行う必要があります。TimeTypeを探して「設定を表示」から設定画面を開いてください。
以下の3項目は必須となります。

&lt;dl&gt;
&lt;dt&gt;Timelog BlogID&lt;/dt&gt;
&lt;dd&gt;Timelogの一日分のメモを投稿する先のブログのIDを数字で指定します&lt;/dd&gt;
&lt;dt&gt;Timelog username&lt;/dt&gt;
&lt;dd&gt;Timelogでのユーザー名を指定します&lt;/dd&gt;
&lt;dt&gt;Timelog password&lt;/dt&gt;
&lt;dd&gt;Timelogへのログインに利用するパスワードを指定します&lt;/dd&gt;
&lt;/dl&gt;

なお、この設定を行った時にMovableTypeにログインしていたユーザーが、以降自動投稿を行う際のユーザーとなります。必要な場合にはログインユーザーを変更して設定を行ってください。

&lt;h3&gt;スケジュールタスクの設定&lt;/h3&gt;

TimeTypeはMovableTypeのスケジュールタスク機能を利用しているため、cronなどのosの自動実行機能を利用するか、ログフィードを取得するなどの方法で、MovableTypeのタスクが定期的に実行されるように設定する必要があります。詳しくは&lt;a href=&#34;http://www.sixapart.jp/movabletype/manual/3.3/02_system_admin_guide/installation/schedule_task_framework.html&#34;&gt;MovableTypeのマニュアル&lt;/a&gt;を確認してください。

&lt;h3&gt;実際の動作の概要&lt;/h3&gt;

スケジュールタスクによってTimeTypeが起動されると、TimeTypeは前回投稿が行われた日付と現在の日付が異なっているか確認します。
異なっていた場合には、Timelogからメモを取得し、エントリーを投稿します。
そして、現在の日付を保存して終了します。

&lt;h3&gt;チェンジログと最新版のダウンロード&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;20070619 &lt;span mt:asset-id=&#34;1&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/TimeType0.2.zip&#34;&gt;TimeType0.2.zip&lt;/a&gt;&lt;/span&gt;
	&lt;ul&gt;
		&lt;li&gt;テンプレートエンジンをHTML::Templateに変更&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
        &lt;li&gt;20070703 &lt;span mt:asset-id=&#34;4&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/TimeType0.3.zip&#34;&gt;TimeType0.3.zip&lt;/a&gt;&lt;/span&gt;
        &lt;ul&gt;
            &lt;li&gt;自動投稿のエントリーの諸設定を、特定のエントリーの設定のクローンとして設定できるようにしてみた。設定のクローン元となる任意のエントリーのentry_idを、プラグインの設定画面から指定してください。カテゴリー、公開設定、改行設定、キーワード、コメントの許可、トラックバックの許可、の設定内容がクローン元エントリーからコピーされて、投稿されます。&lt;/li&gt;
            &lt;li&gt;メモ中のhttpから始まる文字列にリンクが張られるようにした。参考: &lt;a href=&#34;http://www.din.or.jp/~ohzaki/perl.htm#URI&#34;&gt;http://www.din.or.jp/~ohzaki/perl.htm#URI&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;ブックマークにコメントをつけられるようにした。Timelogのブックマークレットでは、ブックマーク元のページのタイトルがメモに追加されますが、それ以降に、連続した半角スペースか、連続したセミコロン「;」を記入すると、以降がメモとして扱われます。&lt;/li&gt;
        &lt;/ul&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>TimeLog 20070617</title>
      <link>http://example.org/2007/000133.html</link>
      <pubDate>Tue, 19 Jun 2007 13:33:41 +0900</pubDate>
      
      <guid>http://example.org/2007/000133.html</guid>
      <description>

&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?2f79815dca560241bf43f0ca94464a4189c8a6be89e261&#34;&gt;02:28:22&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;暑くて寝れない日々がやって来た&lt;/span&gt;

&lt;/p&gt;






</description>
    </item>
    
    <item>
      <title>TimeLog 20070616</title>
      <link>http://example.org/2007/000132.html</link>
      <pubDate>Tue, 19 Jun 2007 13:32:10 +0900</pubDate>
      
      <guid>http://example.org/2007/000132.html</guid>
      <description>

&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?c9bd8e1d03506376828842ea94464a4189c8a6be89e261&#34;&gt;10:59:23&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;おはようございますー&lt;/span&gt;

&lt;/p&gt;

&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?d5fb3e835e1808998520b27a94464a4189c8a6be89e261&#34;&gt;12:23:44&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;bloglinesのもっさり感に堪えかねて、livedoorReaderに引っ越した。すげえ楽。&lt;/span&gt;

&lt;/p&gt;






</description>
    </item>
    
    <item>
      <title>TimeType 0.2</title>
      <link>http://example.org/2007/000130.html</link>
      <pubDate>Tue, 19 Jun 2007 10:10:36 +0900</pubDate>
      
      <guid>http://example.org/2007/000130.html</guid>
      <description>
TemplateToolkit が動かないという声が多かったので、HTML::Templateにテンプレートエンジンを切り替えた。むしゃくしゃしてやった。みんなのところでも動けば何でもよかった。&lt;strike&gt;テストはしていない。&lt;/strike&gt;今はテストしている。

&lt;span mt:asset-id=&#34;1&#34; class=&#34;mt-enclosure mt-enclosure-file&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/release/TimeType0.2.zip&#34;&gt;TimeType0.2.zip&lt;/a&gt;&lt;/span&gt;</description>
    </item>
    
    <item>
      <title>MT4Beta : コメント周りを弄ってみた</title>
      <link>http://example.org/2007/000129.html</link>
      <pubDate>Sun, 17 Jun 2007 23:26:01 +0900</pubDate>
      
      <guid>http://example.org/2007/000129.html</guid>
      <description>&lt;h3&gt;Captcha&lt;/h3&gt;

まずCaptchaですが、以下の箇所で設定を有効にする必要があります。
Admin &gt; Setting &gt; Feedback &gt; CAPTCHA Provider
設定をMovable Type Defaultに変更することで、匿名コメントの際にはCaptchaの入力が求められるようになりました。テンプレートの変更などは必要ありませんでした。

上記「CAPTCHA Provider」の設定がプルダウンでの選択になっていることから分かるように、他のCaptchaエンジンを利用することも出来ます。実際にextrasディレクトリに&lt;a href=&#34;http://recaptcha.net/&#34;&gt;reCaptcha&lt;/a&gt;を利用するためのサンプルプラグインが同梱されているのですが、ちょっと使い方が分かりませんでした。設定値保存されないし。
後、自分の環境では問題ありませんでしたが、たぶん、Image::Magickのインストールされている環境がCaptchaの動作には必須じゃないかなと思います。

&lt;h3&gt;OpenID&lt;/h3&gt;

次に、OpenIDによるコメント認証ですが、これはもっと簡単。
特定のブログが選択された状態で、
Preference &gt; Blog Settings &gt; Comments を開き、Allowed Authentication Methodsの中から受け入れる外部認証サービスをチェックするだけで有効となります。あー、ひとつも利用していない状態から有効にした場合はテンプレートの再構築が必要かもしれません。

MovableType を選択した場合、MovableTypeの管理画面へのログイン情報を使った認証が行えます。さらに、AllowRegistrationを有効にした状態だと、コメントの投稿を受け付ける際にその場でアカウントを発行することが出来ます。この設定は Admin &gt; Settings &gt; Feedback と、各ブログの Preference &gt; (なぜか)General にあります。
コメントを投稿する側は、いったんメールアドレスなどの必要情報を入力し、その後、登録したメールアドレスに送られるメールからConfirmするという、まあ良くある流れでユーザーを作成できます。
ただ、自分のMTにボカボカユーザーが増えていくというのは、考えただけで管理の手間がかかりそうです。個人ユーザー向けの機能では無いのかな、と思いました。自分はとりあえず試しただけで、使ってません。
&lt;ins&gt;追記: データベースを確認したところ、OpenIDでの認証の場合にも、管理画面から確認できないだけで、mt_authorテーブルにコメント投稿者の情報が格納されるようです。&lt;/ins&gt;

Voxのアカウントを利用した認証は、楽でよいですね。迷うことなく利用できました。すごい便利です。まあ、過疎ブログなので、匿名でも全然構わないんですけどね、スパムだけは来るので。この機能は有難いです。以前からのTypeKeyを使った認証も可能なようですが、一覧に無いので試してません;-)

&lt;h3&gt;コメントのツリー構造&lt;/h3&gt;

投稿された各コメントが、それぞれ親コメントを持てるようになっています。現在の実装では、管理画面からReplyした場合にのみ親コメントが指定されるようです。あ、コードに些細なミスがあって、今は管理画面からのReplyも出来ないです。さすがベータ版ですね。自分は野良fixして使ってみてます。

ブログからもReplyを有効に出来ないか、コードを見ながら試してみたのですが、どうもまだ出来てないようです。

&lt;blockquote&gt;#TODO: this should be refactored for more general use&lt;/blockquote&gt;

ということで、これから拡張していく模様。

また、ツリー構造といっても、内部的に親コメントを持っているだけで、現在はテンプレートが対応していないため、実際のブログには何も表示されていません。
これは逆に言えば、好きに作れ、ということですね。

&lt;ul&gt;
	&lt;li&gt;MTCommentParent&lt;/li&gt;
	&lt;li&gt;MTCommentReplies&lt;/li&gt;
	&lt;li&gt;MTIfCommentParent&lt;/li&gt;
	&lt;li&gt;MTIfCommentReplies&lt;/li&gt;
	&lt;li&gt;MTCommentRepliesRecurse&lt;/li&gt;
&lt;/ul&gt;

この辺りのMTタグを使ってツリー構造を表現できそうです。動作は多分名前から連想したとおりの動作です。カテゴリー周りのタグを使ったことがあるなら、迷うことは無いかと思います。
実際にツリーを作ってみましたが、ちょっと横に長くなって見づらくなってしまったのと、今いちすっきりとした書き方にならなかったので、ツリー型は一時あきらめて、親コメントへのリンクをつけるだけにしてみました。
この辺はカスタマイズのやりがいがあるので、正式リリースの頃には色々なカスタマイズ例が出てくるのではないかと思います。と他力本願しておきます。</description>
    </item>
    
    <item>
      <title>MovableType4にアップグレードしちゃった</title>
      <link>http://example.org/2007/000128.html</link>
      <pubDate>Sun, 17 Jun 2007 02:43:36 +0900</pubDate>
      
      <guid>http://example.org/2007/000128.html</guid>
      <description>
一日ビール飲みながら、アップグレード諸々をしていました。
以前のテンプレートをあえて捨てて無理やりmt4のテンプレートを使ったので、ところどころ変かもしれません。
なにか、「こいつは我慢ならねえ」という点があったら教えてください。
あ、昼頃ずっとサイドバーが消えていたのは単なる自爆です。</description>
    </item>
    
    <item>
      <title>IndexContext</title>
      <link>http://example.org/2007/000127.html</link>
      <pubDate>Sun, 17 Jun 2007 01:51:21 +0900</pubDate>
      
      <guid>http://example.org/2007/000127.html</guid>
      <description>&lt;h3&gt;対応するMovable Typeバージョン&lt;/h3&gt;
特に制限はありません。
簡単にテストした範囲では、MT4でもそのまま動作します。

&lt;h3&gt;ダウンロード&lt;/h3&gt;
以下のリンクからダウンロードできます。
&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://blog.aklaswad.com/indexcontext.zip&#34;&gt;indexcontext.zip&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;インストール&lt;/h3&gt;
zipを解凍して出てくる「indexcontext.pl」ファイルをpluginsディレクトリにアップロードしてください。

&lt;h3&gt;機能&lt;/h3&gt;
以下のタグが利用可能になります。

&lt;dl&gt;&lt;dt&gt;&amp;lt;MTIndexContext&amp;gt;&lt;/dt&gt;
&lt;dd&gt;一時的にテンプレートのコンテキストをインデックステンプレートと同じ振る舞いにするコンテナタグです。&lt;/dd&gt;&lt;/dl&gt;

&lt;h3&gt;特記事項&lt;/h3&gt;
&lt;a href=&#34;http://www.antimon2.atnifty.com/&#34;&gt;あんちもん2.Lab&lt;/a&gt;さんによるダイナミック・パブリッシング版が公開されています。あんちもん2さん、ありがとうございます。
&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://www.antimon2.atnifty.com/2007/03/indexcontext4d.html&#34;&gt;あんちもん2.Lab: ダイナミック・パブリッシング対応　indexcontext プラグイン&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;TechMemo&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;MT4で多用されているSetVarなどの変数設定も同時にクリアされてしまうため、MT4で大きなブロックを括ると収集がつかなくなるかもしれません。ピンポイントで利用したほうが無難かと思われます。&lt;/li&gt;
	&lt;li&gt;基本的に、このタグで囲んだ箇所の出力結果は同じになる(はず)ので、つまり、全てのテンプレートで同じものを無駄に再構築していることになります。大規模なサイト構築では、SSIやPHPによるインクルードを利用する場合に比べて、再構築時の負荷の原因となることが考えられます。(スタティックで再構築する場合です。)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TimeLog 20070615</title>
      <link>http://example.org/2007/000126.html</link>
      <pubDate>Sat, 16 Jun 2007 00:14:51 +0900</pubDate>
      
      <guid>http://example.org/2007/000126.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?001b6bfa8275ac9e0e23cb7a94464a4189c8a6be89e261&#34;&gt;10:08:13&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;定時に出社した！&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?65d5cedcb0e4919f51a9b3fa94464a4189c8a6be89e261&#34;&gt;21:36:50&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;帰宅。
&lt;/span&gt;
&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_todo&#34;&gt;TODO&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?f77cdc073dd5400989e91bca94464a4189c8a6be89e261&#34;&gt;22:42:43&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;until : 2007/06/16 22:00 to do : CGIとDBIのチェンジログを見る&lt;/span&gt;
&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?827947ef34460fb692e2c43a94464a4189c8a6be89e261&#34;&gt;01:44:14&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://nlogn.ath.cx/archives/000889.html&#34;&gt;nlog(n): なぜ男は制服が好きなのか&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?76ce312d83b5f839e301af3a94464a4189c8a6be89e261&#34;&gt;12:36:45&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://japanese.engadget.com/2007/06/14/wifi-landroids/&#34;&gt;軍用自走式WiFiルータ LANdroids - Engadget Japanese&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>writing plugins for mt4: transformer</title>
      <link>http://example.org/2007/000125.html</link>
      <pubDate>Fri, 15 Jun 2007 01:20:55 +0900</pubDate>
      
      <guid>http://example.org/2007/000125.html</guid>
      <description>


MT4での新しいtransformerに挑戦してみました。
DOMライクなインターフェイスが提供され、管理画面の特定の位置にコードを挿入することが非常に容易になりました。

まず、DOMスタイルのtransformerは、PerlオブジェクトのMT::Template::Nodeに対して適用されます。そのため、プラグイン作成者が自分のコードを管理画面に挿入する場合、事前にコードをMT::Template::Nodeオブジェクトとして作成しておく必要があります。
MT::Template::Nodeオブジェクトというのは、MTのテンプレートが再構築される際に、個々のテンプレートタグ一つ一つの単位に分解された結果を収納するオブジェクトです。
といっても、身構えるほどのものではありません。実体は、単純な配列リファレンスです。以下の要素からなります。

&lt;ol start=&#34;0&#34;&gt;
	&lt;li&gt;タグ名の文字列。テキスト要素の場合は「TEXT」&lt;/li&gt;
	&lt;li&gt;タグのアトリビュートのハッシュリファレンス。テキスト要素の場合は文字列&lt;/li&gt;
	&lt;li&gt;コンパイルされた(MT::Template::Nodeに分解された)子要素の配列リファレンス&lt;/li&gt;
	&lt;li&gt;子要素のテキスト&lt;/li&gt;
	&lt;li&gt;アトリビュートの一覧。グローバルフィルタの適用のために内部的に利用・・・かな&lt;/li&gt;
	&lt;li&gt;親要素へのリファレンス&lt;/li&gt;
&lt;/ol&gt;

テキスト要素か、MTのテンプレートタグかで動作が変わってきます。最初の要素が&#39;TEXT&#39;の場合は、単なる文字列として扱われます。

さて、早速新しいNodeを作ってみます。
MT::Templateクラスの、createElementメソッドを使います。

&lt;pre class=&#34;code&#34;&gt;my $new_node = $tmpl-&amp;gt;createElement(&#39;TEXT&#39;, &#39;&amp;lt;b&amp;gt;hello transformer?&amp;lt;/b&amp;gt;&#39;);&lt;/pre&gt;

第一引数は、タグ名、第二引数はタグのアトリビュートです。
今回は、タグではない要素を追加するため、第一引数&#39;TEXT&#39;と指定、第二引数には直接文字列を指定しました。MTタグのノードを作成する場合には、第二引数にアトリビュートのハッシュリファレンスを指定します。
</description>
    </item>
    
    <item>
      <title>TimeLog 20070614</title>
      <link>http://example.org/2007/000124.html</link>
      <pubDate>Fri, 15 Jun 2007 00:33:02 +0900</pubDate>
      
      <guid>http://example.org/2007/000124.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?03fd0934281446b5f544706a94464a4189c8a6be89e261&#34;&gt;01:39:27&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;しかし駄目だった・・・！&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=mt4beta&#34;&gt;mt4beta&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?38d3f9bc2da5603d80f6785a94464a4189c8a6be89e261&#34;&gt;02:30:01&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;イテレータが呼ばれないよんおんおん&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?3cf1a05241c1bc0f83ba0aba94464a4189c8a6be89e261&#34;&gt;17:00:13&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;ポット洗浄って何だよ!カップラーメンが作れずに餓死寸前。&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?ad1b04d335ffa1ed9fb8e1ca94464a4189c8a6be89e261&#34;&gt;19:52:42&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;帰る&lt;/span&gt;
&lt;/p&gt;


</description>
    </item>
    
    <item>
      <title>mt4beta解析:registry経由でプラグインのページをCMSに組み込む</title>
      <link>http://example.org/2007/000123.html</link>
      <pubDate>Fri, 15 Jun 2007 00:25:29 +0900</pubDate>
      
      <guid>http://example.org/2007/000123.html</guid>
      <description>
特にWidgetManagerが凄くよい参考になりました。

サンプルアプリ候補
 - 単にhelloworld
 - 
 - ユーザーの動向を一覧表示

Registry

テンプレートのパス

L10N

</description>
    </item>
    
    <item>
      <title>beta2から抜き出した、run_callbacksの第一引数の一覧。</title>
      <link>http://example.org/2007/000122.html</link>
      <pubDate>Thu, 14 Jun 2007 22:13:54 +0900</pubDate>
      
      <guid>http://example.org/2007/000122.html</guid>
      <description>lib/MT/App/ActivityFeeds.pm:109: : &#34;ActivityFeed.$view&#34;
lib/MT/App/CMS.pm:352: : &#39;cms_save_permission.&#39; . $type
lib/MT/App/CMS.pm:369: :  &#39;cms_pre_save.&#39; . $type
lib/MT/App/CMS.pm:376: :  &#39;cms_post_save.&#39; . $type
lib/MT/App/CMS.pm:4450: :  &#39;cms_view_permission_filter.&#39; . $type
lib/MT/App/CMS.pm:6605: :  &#39;handle_ham&#39;
lib/MT/App/CMS.pm:6615: :  &#39;handle_spam&#39;
lib/MT/App/CMS.pm:6642: :  &#39;handle_ham&#39;
lib/MT/App/CMS.pm:6652: :  &#39;handle_spam&#39;
lib/MT/App/CMS.pm:7342: :  &#39;new_user_provisioning&#39;
lib/MT/App/CMS.pm:8040: :  &#39;cms_save_permission_filter.&#39; . $type
lib/MT/App/CMS.pm:8064: :  &#39;cms_save_filter.&#39; . $type
lib/MT/App/CMS.pm:8233: :  &#39;cms_pre_save.&#39; . $type
lib/MT/App/CMS.pm:8260: :  &#39;cms_post_save.&#39; . $type
lib/MT/App/CMS.pm:8596: :  &#39;cms_delete_permission_filter.&#39; . $type
lib/MT/App/CMS.pm:8644: :  &#39;cms_post_delete.&#39; . $type
lib/MT/App/CMS.pm:8742: :  &#39;cms_post_delete.&#39; . $type
lib/MT/App/CMS.pm:8758: :  &#39;rebuild&#39;
lib/MT/App/CMS.pm:11142: :  &#39;cms_post_save.entry&#39;
lib/MT/App/CMS.pm:11391: :  &#39;cms_pre_save.&#39; . $type
lib/MT/App/CMS.pm:11495: :  &#39;cms_post_save.&#39; . $type
lib/MT/App/CMS.pm:11531: :  &#39;rebuild&#39;
lib/MT/App/CMS.pm:11909: :  &#39;cms_pre_save.&#39; . $type
lib/MT/App/CMS.pm:11923: :  &#39;cms_post_save.&#39; . $type
lib/MT/App/CMS.pm:12872: :  &#39;rebuild_options&#39;
lib/MT/App/CMS.pm:13109: :  &#39;rebuild_options&#39;
lib/MT/App/CMS.pm:13221: :  &#39;rebuild&#39;
lib/MT/App/CMS.pm:13235: :  &#39;rebuild&#39;
lib/MT/App/CMS.pm:14030: :  &#39;cms_post_save.asset&#39;
lib/MT/App/CMS.pm:14033: :  &#39;cms_upload_file.&#39; . $asset-&gt;class
lib/MT/App/CMS.pm:14048: :  &#39;cms_upload_image&#39;,
lib/MT/App/CMS.pm:14071:    &#39;cms_upload_file.&#39; . $asset-&gt;class,
lib/MT/App/CMS.pm:15034: :  &#39;cms_save_permission_filter.&#39; . $type
lib/MT/App/CMS.pm:15040: :  &#39;cms_save_filter.&#39; . $type
lib/MT/App/CMS.pm:15043: :  &#39;cms_pre_save.&#39; . $type
lib/MT/App/CMS.pm:15049: :  &#39;cms_post_save.&#39; . $type
lib/MT/App/CMS.pm:15487: :  &#39;rebuild&#39;
lib/MT/App/CMS.pm:15599: :  &#39;handle_spam&#39;
lib/MT/App/CMS.pm:15639: :  &#39;handle_ham&#39;
lib/MT/App/Comments.pm:942: :  &#39;CommentThrottleFilter&#39;
lib/MT/App/Comments.pm:1207: :  &#39;CommentFilter&#39;
lib/MT/App/Trackback.pm:226: :  &#39;TBPingThrottleFilter&#39;
lib/MT/App/Trackback.pm:334: :  &#39;TBPingFilter&#39;
lib/MT/App.pm:501: : &#39;init_app&#39;
lib/MT/App.pm:608: : ref($app) . &#39;::init_request&#39;
lib/MT/App.pm:1065: : &#39;new_user_provisioning&#39;
lib/MT/App.pm:1337: : (ref $app) . &#39;::pre_run&#39;
lib/MT/App.pm:1341:sub : (ref $_[0]) . &#39;::post_run&#39;
lib/MT/App.pm:1592: : ref($app) . &#39;::take_down&#39;
lib/MT/App.pm:1716: : &#34;template_source.$fname&#34;
lib/MT/App.pm:1718: : &#34;template_source&#34;
lib/MT/App.pm:1836: : &#39;template_param&#39;
lib/MT/App.pm:1841: : &#39;template_param.&#39; . $tmpl_file
lib/MT/App.pm:1871: : &#39;template_output.&#39;.$tmpl_file
lib/MT/App.pm:1873: : &#39;template_output&#39;
lib/MT/App.pm:1886: : &#39;template_output.&#39;.$tmpl_file
lib/MT/App.pm:1888: : &#39;template_output&#39;
lib/MT/Asset/Image.pm:337: : &#39;cms_post_save.asset&#39;
lib/MT/Asset/Image.pm:341: : &#39;cms_upload_file.&#39; . $asset_thumb-&gt;class
lib/MT/Asset/Image.pm:349: : &#39;cms_upload_image&#39;
lib/MT/Asset/Image.pm:423: : &#39;cms_post_save.asset&#39;
lib/MT/Asset/Image.pm:425: : &#39;cms_upload_file.&#39; . $asset_html-&gt;class
lib/MT/AtomServer.pm:440: : &#39;api_pre_save.entry&#39;
lib/MT/AtomServer.pm:463: : &#39;api_post_save.entry&#39;
lib/MT/AtomServer.pm:502: : &#39;api_pre_save.entry&#39;
lib/MT/AtomServer.pm:516: : &#39;api_post_save.entry&#39;
lib/MT/BackupRestore/BackupFileHandler.pm:120: : &#34;Restore.$name:$ns&#34;
lib/MT/BackupRestore.pm:141: : &#39;Backup&#39;
lib/MT/Blog.pm:699: : ref($blog). &#39;::post_clone&#39;
lib/MT/BulkCreation.pm:336: : &#39;NewUserProvisioning&#39;
lib/MT/DefaultTemplates.pm:201: : &#39;DefaultTemplateFilter&#39;
lib/MT/TaskMgr.pm:31: : &#39;tasks&#39;
lib/MT/TaskMgr.pm:67: : &#39;PeriodicTask&#39;
lib/MT/Upgrade.pm:889: : &#39;MT::Upgrade::&#39; . $cb
lib/MT/Upgrade.pm:1636: : &#39;SQL&#39;
lib/MT/Upgrade.pm:1902: : &#39;SQL&#39;
lib/MT/WeblogPublisher.pm:792: : &#39;build_file_filter&#39;
lib/MT/WeblogPublisher.pm:822: : &#39;build_page&#39;
lib/MT/WeblogPublisher.pm:868: : &#39;build_file&#39;
lib/MT/WeblogPublisher.pm:984: : &#39;BuildFileFilter&#39;
lib/MT/WeblogPublisher.pm:995: : &#39;BuildPage&#39;
lib/MT/WeblogPublisher.pm:1030: : &#39;BuildFile&#39;
lib/MT/XMLRPCServer.pm:228: : &#39;api_pre_save.entry&#39;
lib/MT/XMLRPCServer.pm:233: : &#39;api_post_save.entry&#39;
lib/MT/XMLRPCServer.pm:315: : &#39;api_pre_save.entry&#39;
lib/MT/XMLRPCServer.pm:320: : &#39;api_post_save.entry&#39;
lib/MT/XMLRPCServer.pm:800: : &#39;api_upload_file&#39;
tools/find-junk:91: : &#39;NotJunkTest&#39;</description>
    </item>
    
    <item>
      <title>TimeLog 20070613</title>
      <link>http://example.org/2007/000121.html</link>
      <pubDate>Thu, 14 Jun 2007 00:33:02 +0900</pubDate>
      
      <guid>http://example.org/2007/000121.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?8efe989e90a9342194e6892a94464a4189c8a6be89e261&#34;&gt;01:03:07&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;KIRIN THE GOLDが旨い。ので飲んでしまう。&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?f24ad94efd2b60c8257c7e6a94464a4189c8a6be89e261&#34;&gt;09:10:13&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;おはようございます！
&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?e321cfe5d4d85e5d8d98b86a94464a4189c8a6be89e261&#34;&gt;09:45:37&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;TimeLogのAPIで自分のメモを取得した場合(my_msg.asp)、@付きの発言は取得しない(できない)・・・のかな。&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=API&#34;&gt;API&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=TimeLog&#34;&gt;TimeLog&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=TimeType&#34;&gt;TimeType&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?83c2a874a21b7b9bfa85029a94464a4189c8a6be89e261&#34;&gt;12:52:24&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;キャラメルコーン焼きチョコウマー&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?68e83c5a153f3f4772a1b80a94464a4189c8a6be89e261&#34;&gt;19:50:20&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;今日もイマイチはかどらず。何か方向を間違えている気がする。&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?56035ebc0db859140ea1a07a94464a4189c8a6be89e261&#34;&gt;19:50:42&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;逃げるように家に帰る&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?c27a10af2f91578a1026234a94464a4189c8a6be89e261&#34;&gt;23:33:46&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;mt4beta2弄らねば・・・&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=mt4beta&#34;&gt;mt4beta&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;


&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?c9bdbe2a8b6cac1f291fd1da94464a4189c8a6be89e261&#34;&gt;01:06:04&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://as-is.net/blog/archives/001257.html&#34;&gt;「TrackBackはもうなかったことにしてはどうか？」とは？ - Ogawa::Memoranda&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?e84ec74994343a154826b98a94464a4189c8a6be89e261&#34;&gt;02:10:13&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://www.nicovideo.jp/watch/sm439362&#34;&gt;ニコニコ動画(γ)‐ハートマン軍曹のオタ訓練学校 &lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=フリー参加&#34;&gt;フリー参加&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=キリンゴールドふいた&#34;&gt;キリンゴールドふいた&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=吹き死んだ&#34;&gt;吹き死んだ&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?ee68fce72b1f54a644ba9cda94464a4189c8a6be89e261&#34;&gt;14:30:21&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://news4vip.livedoor.biz/archives/50994633.html&#34;&gt;【2ch】ニュー速クオリティ:当たり前の事を名言っぽく書くスレ&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TimeLog 20070612</title>
      <link>http://example.org/2007/000120.html</link>
      <pubDate>Wed, 13 Jun 2007 00:33:02 +0900</pubDate>
      
      <guid>http://example.org/2007/000120.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?1f901dc726bbb45d616452ba94464a4189c8a6be89e261&#34;&gt;09:54:08&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;ごめんなさい、今起きました!&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?7f3860dd7edf6184cef8c74a94464a4189c8a6be89e261&#34;&gt;11:36:43&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;会社来たー&lt;/span&gt;
&lt;/p&gt;


&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?dc6ded8849da2cc8b97230ba94464a4189c8a6be89e261&#34;&gt;12:36:54&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://www.joelonsoftware.com/items/2007/06/11.html&#34;&gt;Apple Safari for Windows: The world’s slowest web browser - Joel on Software&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TimeLog 20070611</title>
      <link>http://example.org/2007/000119.html</link>
      <pubDate>Tue, 12 Jun 2007 00:15:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000119.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?0b584fec6ff49c24545cc81a94464a4189c8a6be89e261&#34;&gt;00:04:33&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;アッー!! 文字が化けらッた！すっかり忘れてたー&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?89d7af3cccdc2810a0ec058a94464a4189c8a6be89e261&#34;&gt;01:53:32&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;疲れた。寝るです。&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?75f205156dbb7beddb96e40a94464a4189c8a6be89e261&#34;&gt;08:53:31&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;おはよーございます
&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?5b9c6ed9d67d7c3520cb701a94464a4189c8a6be89e261&#34;&gt;09:32:43&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;今から会社に走って行け&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?8896074c125b62cdac4397aa94464a4189c8a6be89e261&#34;&gt;10:52:41&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;会社ついた。&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?495e3b285cc23e947cf010ea94464a4189c8a6be89e261&#34;&gt;16:27:55&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;うーん、頭が回らない&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?7bae6e7c7234b53981b3563a94464a4189c8a6be89e261&#34;&gt;16:28:30&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;そうだ、ハッピーターン食べよう&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?30a8035ca8c048af1d6b17aa94464a4189c8a6be89e261&#34;&gt;20:29:37&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;家に着いた。今日はいまいち捗らなかったなあ。ヤバイ。&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=ひとりごと&#34;&gt;ひとりごと&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_todo&#34;&gt;TODO&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?3e2ef101d0605fdfb8d2681a94464a4189c8a6be89e261&#34;&gt;09:09:45&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;until : 2007/06/11 12:00 to do : リポジトリの修復&lt;/span&gt;
&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?d9ba2f41e6ad90bccbe41e2a94464a4189c8a6be89e261&#34;&gt;01:51:31&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com/2007/000115.html&#34;&gt;TimeType - TimeLog から一日分のメモをまとめてMovableTypeに自動投稿するプラグイン (blog.aklaswad.com) 文字化け治った! ひとまず完成!&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=APIコンテスト参加&#34;&gt;APIコンテスト参加&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TBPingはノードの夢を見るか</title>
      <link>http://example.org/2007/000118.html</link>
      <pubDate>Mon, 11 Jun 2007 23:07:01 +0900</pubDate>
      
      <guid>http://example.org/2007/000118.html</guid>
      <description>
Ogawa::Memorandaの人が凄いことを言った。
&lt;blockquote&gt;そうそう、TrackBackはもうなかったことにしてはどうか？&lt;/blockquote&gt;
&lt;a href=&#34;http://as-is.net/blog/archives/001256.html&#34;&gt;Movable Type 4ベータテスト - Ogawa::Memoranda&lt;/a&gt;

Web2.0が勢いよく世に出てきたとき、ブログは、次の二本柱の機能が革命的だと持ち上げられていた。

&lt;ul&gt;
&lt;li&gt;トラックバック&lt;/li&gt;
&lt;li&gt;パーマリンク&lt;/li&gt;
&lt;/ul&gt;

正直、当時の自分にはパーマリンクの何が凄いのか分からなかった。非常に抽象的な概念だと感じた。
そして、トラックバックは分かりやすかった。
当時の「相互リンク」文化全盛の時代感覚からすれば、明らかにトラックバックは自由で、機能的で、ネットワーク的だった。

わずか五年後の現在、トラックバックはスパムの海に溺れ、忘れられようとしている。</description>
    </item>
    
    <item>
      <title>甘栗理論</title>
      <link>http://example.org/2007/000117.html</link>
      <pubDate>Mon, 11 Jun 2007 21:16:15 +0900</pubDate>
      
      <guid>http://example.org/2007/000117.html</guid>
      <description>
&lt;a href=&#34;http://www.yamachan.co.jp/index.html&#34;&gt;世界のやまちゃん&lt;/a&gt;という名古屋系の飲み屋があり、その店の看板、幻の手羽先が全人類に愛されているのは皆さんご存知だと思います。
ちなみにどのくらい愛されているかというと、火曜日に電話で「予約お願いします、今週の金y」「すみません無理です」二秒で予約を断られるくらいだし、ある人など名古屋に行った際、違う手羽先屋で飲んだ帰りに偶然本店の前を通りかかり、衝動的に手羽先屋のハシゴをした程です。

その世界のやまちゃんの割り箸袋の裏に、手羽先の食べ方が書いてあります。(今調べたら&lt;a href=&#34;http://www.yamachan.co.jp/tabekata.html&#34;&gt;サイトにも書いてありました&lt;/a&gt;。)
小ぶりな手羽を捻り切り、がっちりとホネをホールドして喰い抜けば、嘘のようにスッポリと肉だけ抜き取れます。多少の才能と繊細な指先が必要ではありますが、決して高いスキルが必要なものではありません。スカッと抜けたときには、本当に嬉しいものです。脳汁と肉汁のダブルスープです。

しかし、これがなかなか上手く行かない場合も多いんですよ。微妙に肉が残ってしまったり、二本あるホネが片方すっぽ抜けてしまったり、と。
そして、次こそはビューティフルに、次こそはエレガントに、次こそは、と止まれなくなってしまうのです。
アンストッパブル。至福のアンストッパブルです。


しかしわれわれはこの至福を、冬の炬燵上にも知っています。
甘栗を剥くそれだけのために、親指を深爪しないようにしたわれわれは。パキリと
この仕組みは</description>
    </item>
    
    <item>
      <title>TimeType - TimeLog から一日分のメモをまとめてMovableTypeに自動投稿するプラグイン</title>
      <link>http://example.org/2007/000115.html</link>
      <pubDate>Mon, 11 Jun 2007 01:45:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000115.html</guid>
      <description>&lt;h3&gt;概要&lt;/h3&gt;
投稿は一日一回。日付が変わってから最初にスケジュールタスクが実行されたときに、TimeLogの前日分のメモを一つのエントリーにまとめて投稿します。どんな感じかは、&lt;a href=&#34;http://blog.aklaswad.com/2007/000116.html&#34;&gt;いっこ前のエントリー&lt;/a&gt;を見てください。メモの内容は殆どテストなので、あまり気にしないでくださいな。

&lt;h3&gt;インストール&lt;/h3&gt;
解凍して出てきた中のpluginsの中に入っている「TimeType」ディレクトリを、お使いのMovableTypeのpluginsディレクトリの中にアップロードしてください。

&lt;h3&gt;初期設定&lt;/h3&gt;
システム・メニューのプラグインから、TimeTypeの設定画面を開いてください。TimeLogのIDとパスワード、それと自動投稿を行うブログのblog_idを指定します。いずれも必須です。

なお、この設定を行った時にMovableTypeにログインしていたユーザーが、以降自動投稿を行う際のユーザーとなります。必要な場合にはログインユーザーを変更して設定を行ってください。

現在の所、他には設定項目などはありません。

&lt;h3&gt;スタイル&lt;/h3&gt;
あと、いくつか独自のスタイル指定をしています。お好みでスタイルシートを設定してください。
自分のところではこんな感じのものを、スタイルシートテンプレートの最後に追加しています。

&lt;pre class=&#34;code&#34;&gt;
.timelog_section_header {
    border-width: 0 0 1px 0;
    border-style: solid ;
    border-color: #004444;  
}
 
.timelog_memo {
    border-width: 0 0 1px 0;
    border-style: dotted;
    border-color: #99bbbb;
    margin-left: 2em;
}
 
.memo_date {
    color: #aaaaaa;
    margin: 0;
    font-size: 0.7em;
}
 
.memo_date a {
    color: #0000ff;
    text-decoration: none;
}
 
.memo_body {
    margin: 0px;
}
 
.memo_tag {
    margin: 0 0.1em;
    font-size: 0.8em;
}
 
.memo_tag a {
    margin: 0 0.2em;
    text-decoration: none;
    color: #0000ff;
}&lt;/pre&gt;

</description>
    </item>
    
    <item>
      <title>TimeLog 20070610</title>
      <link>http://example.org/2007/000116.html</link>
      <pubDate>Mon, 11 Jun 2007 01:18:55 +0900</pubDate>
      
      <guid>http://example.org/2007/000116.html</guid>
      <description>
&lt;h3 class=&#34;timelog_section_header timelog_section_header_memo&#34;&gt;Memo&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?4dcd94778c22c1dee406fe5a94464a4189c8a6be89e261&#34;&gt;10:48:17&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;英P愛&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?aecaed7fc961b263d2ee085a94464a4189c8a6be89e261&#34;&gt;11:23:14&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;パブリック非表示&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?1e7eb404d3a3e37d11e5e2aa94464a4189c8a6be89e261&#34;&gt;15:05:05&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;もうすぐ出来る！&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?b473052c2c745457e82f873a94464a4189c8a6be89e261&#34;&gt;19:46:11&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;うーん、デザインとかで結構詰まる。&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=API&#34;&gt;API&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=css&#34;&gt;css&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=MovableType&#34;&gt;MovableType&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;
&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?a63575952cacee0a13c44dfa94464a4189c8a6be89e261&#34;&gt;20:24:36&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;API使うと色々出来て楽しい!&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=Movable Type&#34;&gt;Movable Type&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=API&#34;&gt;API&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=金 目 当&#34;&gt;金 目 当&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_todo&#34;&gt;TODO&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?e8497b1abfd7cbc1fbc0917a94464a4189c8a6be89e261&#34;&gt;11:26:06&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;until : 2007/06/10 11:26 to do : トゥードゥー&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?2732cb21cb3663398dddaf4a94464a4189c8a6be89e261&#34;&gt;11:26:40&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;until : 2007/06/10 11:27 to do : フィニッシュトトゥードゥー&lt;/span&gt;
&lt;/p&gt;

&lt;h3 class=&#34;timelog_section_header timelog_section_header_bookmark&#34;&gt;Bookmark&lt;/h3&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?d138816850cab60c136a9efa94464a4189c8a6be89e261&#34;&gt;11:25:37&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://blog.aklaswad.com&#34;&gt;ブックマーク&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?32cc6bac657f4d2cd7a4a7aa94464a4189c8a6be89e261&#34;&gt;12:06:02&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://blog.livedoor.jp/dankogai/archives/50849028.html&#34;&gt;404 Blog Not Found:IPアドレスはいつ枯渇してもおかしくない へー、そうなんだ。&lt;/a&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p class=&#34;timelog_memo&#34;&gt;&lt;span class=&#34;memo_date&#34;&gt;&lt;a href=&#34;http://timelog.jp/msg/?ccbb48d633fee2ee3a50f5ca94464a4189c8a6be89e261&#34;&gt;21:32:28&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_body&#34;&gt;&lt;a href=&#34;http://www.luckypines.com/mt/2007/06/post_127.html&#34;&gt;http://www.luckypines.com/mt/2007/06/post_127.html&lt;/a&gt;&lt;/span&gt;
&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=Movable Type&#34;&gt;Movable Type&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=beta&#34;&gt;beta&lt;/a&gt;]&lt;/span&gt;&lt;span class=&#34;memo_tag&#34;&gt;[&lt;a href=&#34;http://timelog.jp/profile/tags.asp?ac=aklaswad&amp;tg=Kickstart my heart&#34;&gt;Kickstart my heart&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Movable Type 4 は独自のアーカイブ定義をプラグインから追加出来るのでやってみた</title>
      <link>http://example.org/2007/000114.html</link>
      <pubDate>Sat, 09 Jun 2007 18:08:34 +0900</pubDate>
      
      <guid>http://example.org/2007/000114.html</guid>
      <description>&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%82%A4%E3%83%86%E3%83%AC%E3%83%BC%E3%82%BF&#34;&gt;イテレータ - Wikipedia&lt;/a&gt;
&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AD%E3%83%BC%E3%82%B8%E3%83%A3&#34;&gt;クロージャ - Wikipedia&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Movable Type 4 のプラグイン作成での新機能</title>
      <link>http://example.org/2007/000113.html</link>
      <pubDate>Sat, 09 Jun 2007 01:03:19 +0900</pubDate>
      
      <guid>http://example.org/2007/000113.html</guid>
      <description>MT4は、内部的にRegistryと呼ばれる、様々な設定値をひとまとめにする構造を持っています。
例えば、テンプレートの編集画面に追加された「Insert...」という部分。デフォルトではMTEntriesの挿入が行える機能だけがついていますが、これはRegistryのキー「template_snippets」に「insert_entries」というエントリがひとつだけ入っていて、そのエントリが管理画面に表示されるという仕組みになっています。
そして、当然のごとくプラグイン側からRegistryのキーやエントリ(実際にはネストしたハッシュリファレンスです)を追加することが出来ます。書き方としてはこんな感じでしょうか

&lt;pre class=&#34;code&#34;&gt;package MT::Plugin::CommentSnippet;
 
use strict;
use base qw( MT::Plugin );
 
my $plugin = new MT::Plugin::CommentSnippet({
    name =&amp;gt; &amp;quot;CommentSnippet&amp;quot;,
    version =&amp;gt; &#39;0.1&#39;,
});
MT-&amp;gt;add_plugin($plugin);
 
sub init_registry {
    my $plugin = shift;
    $plugin-&amp;gt;registry({
        &#39;template_snippets&#39; =&amp;gt; {
            &#39;comments&#39; =&amp;gt; {
                label   =&amp;gt; &#39;comments&#39;,
                content =&amp;gt; qq{&amp;lt;MTComments lastn=&amp;quot;10&amp;quot;&amp;gt;&amp;lt;/MTComments&amp;gt;},
            },
        },
    });
}
1;&lt;/pre&gt;

これだけでも、今までのコールバックを利用したりする方法に比べたら楽に感じます。
しかし、さらに簡単な書き方も出来ます。

&lt;pre class=&#34;code&#34;&gt;template_snippets:
    trackbacks:
        label: tbpings
        content: &amp;lt;MTPings lastn=&amp;quot;10&amp;quot;&amp;gt;&amp;lt;/MTPings&amp;gt;&lt;/pre&gt;

はいyaml来ました。yaml。
pluginsディレクトリ内に適当なディレクトリを作成して、上記のyamlを「config.yaml」という名前で置くだけです。
これは楽です。

更新Pingサーバーのリストも同様に追加出来るのですが、その場合には追加分の項目の設定値の保存まで自動で面倒を見てくれるので、非常に楽です。素で驚きました。

perlのコンパイル済みのコードリファレンスが要求される機能も多いっぽいので、yamlを書くだけでどこまで複雑な機能の追加が実現できるかは分かりません。実際には、Perlで機能のコア部分を書いて、config.yamlでユーザーがプラグインの機能を拡張していく、その橋渡しとしてRegistryが機能するという形になるのでしょうか。
いずれにしても、非常に拡張性が高いシステムになっていると感じました。

&lt;ins datetime=&#34;2007-06-09T14:25:25+09:00&#34;&gt;追記: extrasディレクトリにそのままのサンプルがありましたね。今気がつきました;-)&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>mt4beta1でBLOG STATSを動かす方法</title>
      <link>http://example.org/2007/000112.html</link>
      <pubDate>Wed, 06 Jun 2007 13:36:45 +0900</pubDate>
      
      <guid>http://example.org/2007/000112.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/mt4beta1blogstat.png&#34;&gt;&lt;img alt=&#34;mt4beta1blogstat.png&#34; src=&#34;http://blog.aklaswad.com/mt4beta1blogstat-thumb.png&#34; width=&#34;240&#34; height=&#34;176&#34; /&gt;&lt;/a&gt;

MT4betaが出ましたね！早速お試しー。

しばらく、betaの動きや気づいたことなど、こまめにメモしていこうと思います。
まず、管理画面のダッシュボードに表示される「BlogStats」について。
上手く行けば、最近のコメント数などについて上のキャプチャ画面のような表示が出ます。
上手く行かないという場合は、以下のあたりを確認してみると良いかも。

1. ActivityLogに以下のエラーが出ている場合
&lt;blockquote&gt;Failed to create &#39;support&#39; directory. (IP:xxx.xxx.xxx.xxx)&lt;/blockquote&gt;
mt-staticディレクトリにsupportというディレクトリを作って、mtが書き込み出来るようにする

2.なにやら動いたが、小さく次のようなエラーが出る
&lt;blockquote&gt;Error: Can&#39;t get file name /support/...&lt;/blockquote&gt;
mt-config.cgiの「StaticWebPath」をきちんと設定する。単に「mt-static」でも良いかも。
なぜかStaticWebPathを省略した場合は動かなかったので、デフォルトの値が変わっているのかもしれません。というか初期値の書き忘れのようにも見えます;-)
出来ればフルパスで指定したほうが良さそうです。

また、mt-staticディレクトリを移動する場合、「StaticWebPath」の変更に加えて、「StaticFilePath」という設定を追加して、以下のような形でサーバー内でのフルパスを指定する必要がありそうです。

&lt;pre class=&#34;code&#34;&gt;StaticFilePath    /home/hogehoge/public_html/moved_static_dir&lt;/pre&gt;

ちょっとよくわからない部分も多いので、もう少し調べてみよっとー</description>
    </item>
    
    <item>
      <title>mt4Extensible Archivesのからくり</title>
      <link>http://example.org/2007/000111.html</link>
      <pubDate>Wed, 06 Jun 2007 00:21:05 +0900</pubDate>
      
      <guid>http://example.org/2007/000111.html</guid>
      <description>
Extensible ArchivesがArchiveTypeルーチンをexportする（WeblogPublisher.pm）

        ArchiveType(
            name =&gt; &#39;Category-Weekly&#39;,
            archive_label =&gt; \&amp;weekly_archive_label,
            archive_file =&gt; \&amp;weekly_archive_file,#生成するファイルのアーカイブディレクトリからの相対パス
            archive_title =&gt; \&amp;weekly_archive_title, #
            date_range =&gt; \&amp;weekly_date_range,
            archive_group_iter =&gt; \&amp;weekly_group_iter,
            archive_group_entries =&gt; \&amp;weekly_group_entries,
            default_archive_templates =&gt; [
                ArchiveFileTemplate(label =&gt; &#39;category/sub_category/yyyy/mm/day-week/index.html&#39;,
                                    template =&gt; &#39;%c/%y/%m/%d-week/%i&#39;,
                                    default =&gt; 1),
                ArchiveFileTemplate(label =&gt; &#39;category/sub-category/yyyy/mm/day-week/index.html&#39;,
                                    template =&gt; &#39;%-c/%y/%m/%d-week/%i&#39;),
            ],
            dynamic_template =&gt; &#39;section/&lt;$MTCategoryID$&gt;/week/&lt;$MTArchiveDate format=&#34;%Y%m%d&#34;$&gt;&#39;,
            dynamic_support =&gt; 1,
            date_based =&gt; 1,
            category_based =&gt; 1,
        )</description>
    </item>
    
    <item>
      <title>mt4:要注目のテンプレートタグ</title>
      <link>http://example.org/2007/000110.html</link>
      <pubDate>Wed, 06 Jun 2007 00:03:37 +0900</pubDate>
      
      <guid>http://example.org/2007/000110.html</guid>
      <description>
テンプレートタグ
MTIｆ
MTLoop
MT*Rank
グローバルフィルタ
regex_replace</description>
    </item>
    
    <item>
      <title>mt4プラグイン第一印象</title>
      <link>http://example.org/2007/000109.html</link>
      <pubDate>Tue, 05 Jun 2007 23:37:23 +0900</pubDate>
      
      <guid>http://example.org/2007/000109.html</guid>
      <description>
3とはそもそも完全に決別（Plugin.pm line:15-18）
基本的にmt4プラグインはコンポーネント（なんだそれ）
アイコンを設定できる気がする（Plugin.pm line:44）

mt4プラグインはinit_registryサブルーチンが無いと起動できないのかも(Component.pm line:52-)
嘘。無ければMT::Component::init_registryが呼ばれるのか。
componentはyamlファイルを読み込んで何かが出来るらしいが良く分からない</description>
    </item>
    
    <item>
      <title>ダイナミックあげるよ</title>
      <link>http://example.org/2007/000108.html</link>
      <pubDate>Mon, 04 Jun 2007 08:53:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000108.html</guid>
      <description>
自サーバーのMTで久しぶりにダイナミックパブリッシングを動かしてみたら、動かなかった。
現象としては、ダイナミックを有効にしたアーカイブにアクセスすると404。
URLをスラッシュ止めでアクセスすると正常に表示される。

NG http://example.com/blog/2007/06/post.html
OK http://example.com/blog/2007/06/

Apacheのエラーログには次のようなメッセージが

&lt;blockquote&gt;[Mon Jun 04 08:43:29 2007] [error] [client 192.168.0.1] Negotiation: discovered file(s) matching request: /home/xxxx/public_
html/blog/2007/06/post.html (None could be negotiated)., referer: http://example.com/blog/
&lt;/blockquote&gt;

ちょっと調べたところ、Apacheの&lt;a href=&#34;http://httpd.apache.org/docs/2.2/ja/content-negotiation.html&#34;&gt;MultiViewsオプション&lt;/a&gt;が悪さをしているらしい。
httpd.confを書き換えて「Options -MultiViews」としたところ正常に動作した。
今気づいたけれどMTが吐いた.htaccessに追記しても良かったかもしれない。</description>
    </item>
    
    <item>
      <title>複数ブログのトラックバックURLを、ブログごとの独自ドメインで公開する方法</title>
      <link>http://example.org/2007/000107.html</link>
      <pubDate>Wed, 30 May 2007 00:30:00 +0900</pubDate>
      
      <guid>http://example.org/2007/000107.html</guid>
      <description>例として、XREAでのユーザー名が「chicken」として、現在以下のURLで、インストールしたMTの管理画面にアクセスしているものとします。

&lt;pre class=&#34;code&#34;&gt;http://www.chicken.com/cgi-bin/mt/mt.cgi&lt;/pre&gt;

すると、MTをインストールしたディレクトリのサーバー内でのパスは以下のようになるかと思います。

&lt;pre class=&#34;code&#34;&gt;/virtual/chicken/public_html/cgi-bin/mt/&lt;/pre&gt;

そして、同じMT上で新しく作るブログを、独自ドメインを利用した以下のURLで公開するとしましょう。

&lt;pre class=&#34;code&#34;&gt;http://blog.thecat.net/&lt;/pre&gt;

上記がサイトURLなら、サイト・パスは以下のサーバー内のパスを指定することになると思います。

&lt;pre class=&#34;code&#34;&gt;/virtual/chicken/public_html/blog.thecat.net/&lt;/pre&gt;

目的は、「/virtual/chicken/public_html/cgi-bin/mt/」以下に設置されているCGIスクリプトに、「http://blog.thecat.net/」以下のアドレスでアクセスできるようにすることです。さらに、MTの仕様上の要求から、ホスト名以下のパスが同一である必要があります。
つまり、
「http://www.chicken.com/cgi-bin/mt/」
と、
「http://blog.thecat.net/cgi-bin/mt/」
のふたつのURLで、どちらにアクセスしても同じCGIファイルが公開されていれば良いわけです。
今回はシンボリック・リンクを使ってみます。(自分がお借りしてるs160サーバーで動作確認したところでは、幸いApacheの設定でのFollowSymLinkが有効になっているようでした。)

あらかじめ、FTPクライアントなどで「/virtual/chicken/public_html/blog.thecat.net/cgi-bin」ディレクトリを作成しておきます。中身は空っぽでよいです。
次にXREAのサイト内のコントロール・パネルから「ホスト情報登録」を選択して許可を得た上で、SSHでログインしてください。
作成した「/virtual/chicken/public_html/blog.thecat.net/cgi-bin」ディレクトリに移動します。

&lt;pre class=&#34;code&#34;&gt;cd /virtual/chicken/public_html/blog.thecat.net/cgi-bin&lt;/pre&gt;

そして、シンボリックリンクによって「/virtual/chicken/public_html/blog.thecat.net/cgi-bin/mt」へのアクセスが、MTのインストールディレクトリに繋がるように、以下のコマンドを実行してシンボリックリンクを作成します。

&lt;pre class=&#34;code&#34;&gt;ln -s /virtual/chicken/public_html/cgi-bin/mt mt&lt;/pre&gt;

確認のため、ブラウザで「http://blog.thecat.net/cgi-bin/mt/mt.cgi」にアクセスしてみて、管理画面が表示されれば成功です。


第二段階です。目的のブログで、ブログ独自のホスト名でCGIを公開するために、mt-config.cgiの以下の箇所を書き換えます。現在のCGIPath

&lt;pre class=&#34;code&#34;&gt;CGIPath http://www.chicken.com/cgi-bin/mt/&lt;/pre&gt;

を、ホスト名を省略した以下の形に書き換えてアップロードしてください。

&lt;pre class=&#34;code&#34;&gt;CGIPath /cgi-bin/mt/&lt;/pre&gt;

最後に、目的のブログを再構築すれば完成です。
念のため、再構築したブログのエントリーアーカイブに移動して、トラックバックURLを確認してください。

&lt;pre class=&#34;code&#34;&gt;http://blog.thecat.net/cgi-bin/mt/mt-tb.cgi/1&lt;/pre&gt;

上記のように、独自ドメインに変わっているでしょうか。変わっていたら、このURLをブラウザのアドレス欄にコピペして、CGIに実際にアクセスできるか確認してください。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;response&amp;gt;
&amp;lt;error&amp;gt;1&amp;lt;/error&amp;gt;
&amp;lt;message&amp;gt;トラックバックの送信は、HTTP POSTメソッドを使う必要があります。&amp;lt;/message&amp;gt;
&amp;lt;/response&amp;gt;
&lt;/pre&gt;

こんな感じのXMLでのエラーが表示されれば、CGIにアクセスできている証拠です。大成功です!
お疲れ様でした!</description>
    </item>
    
    <item>
      <title>ラーメンデータベースが素晴らしい件について</title>
      <link>http://example.org/2007/000106.html</link>
      <pubDate>Tue, 22 May 2007 22:12:50 +0900</pubDate>
      
      <guid>http://example.org/2007/000106.html</guid>
      <description>
滅茶苦茶ラーメンに嵌ってます、最近。
多分そのせいで、ますます腹が出てきました。
ボストロールに変身出来そうです。
立派な赤ちゃんが産めそうです。
ッ・・・!!誰だッ!人様の腹を凝視する奴・&lt;a href=&#34;http://wa.vox.com/&#34;&gt;・&lt;/a&gt;・ッ!!
苦しいです、ベルト閉めるのが。

というわけで、勢いあまって&lt;a href=&#34;http://www.ramendb.com/&#34;&gt;ラーメンデータベース&lt;/a&gt;にユーザー登録してしまいました。
いやー、すごいWEB2,0を感じます。
ほぼ全ての文脈で提供されるフィード。
GoogleMapとの密接な連携。
だって、俺の食べ歩き日記が、きちんと&lt;a href=&#34;http://www.ramendb.com/map/user/11474&#34;&gt;地図&lt;/a&gt;になってるもん。すごくね？

Web2.0は純粋に技術的なイノベーションである。
世に蔓延るビジネス視点でのWeb2.0論はたいてい的を外してる。
なんて事を、この微妙にニッチなサービスを弄ってると強く思います。
API公開したりしないかな。すぐプラグイン作るよ。
マジ応援します。らーめん。</description>
    </item>
    
    <item>
      <title>デザインを変えてみた。</title>
      <link>http://example.org/2007/000103.html</link>
      <pubDate>Sat, 19 May 2007 21:49:55 +0900</pubDate>
      
      <guid>http://example.org/2007/000103.html</guid>
      <description>
うむ。重い。ウザイ。

&lt;ins datetime=&#34;2007-05-19T21:57:31+09:00&#34;&gt;background-attachment: fixed; ってやつを外したらだいぶましになった。&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>headphoneほすい</title>
      <link>http://example.org/2007/000099.html</link>
      <pubDate>Tue, 15 May 2007 16:32:43 +0900</pubDate>
      
      <guid>http://example.org/2007/000099.html</guid>
      <description>
&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B000A4ZT4I/blogaklaswadc-22/ref=nosim/&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/B000A4ZT4I.09.MZZZZZZZ.jpg&#34;&gt;&lt;/a&gt;
ほすい</description>
    </item>
    
    <item>
      <title>Vista かわいいよ Vista</title>
      <link>http://example.org/2007/000098.html</link>
      <pubDate>Mon, 07 May 2007 12:38:26 +0900</pubDate>
      
      <guid>http://example.org/2007/000098.html</guid>
      <description>
Windows + Space でガジェットを最前面に表示できる。しかしもう一度押しても元には戻らない。この微妙なところがまた・・・

&lt;ins datetime=&#34;2007-05-09T12:14:59+09:00&#34;&gt;
追記:
ガジェットを最前面に表示した後スペースを押すと、ガジェットの追加画面が立ち上がる。
ここでESCキーを押すとガジェットの追加画面が消え、同時にガジェットも最前面から消えるようだ。
つまり、同時押しでは無く、Space -&gt; Esc で非表示という、ちょっとEmacsのようなコマンド体系だったのだ!
Vista 最高だよ Vista。
&lt;/ins&gt;
</description>
    </item>
    
    <item>
      <title>「漫画」エヴァンゲリオンのロンギヌス投擲シーンが左右逆な点</title>
      <link>http://example.org/2007/000097.html</link>
      <pubDate>Sun, 15 Apr 2007 01:27:59 +0900</pubDate>
      
      <guid>http://example.org/2007/000097.html</guid>
      <description>
これはあんまりだと思うなあ。</description>
    </item>
    
    <item>
      <title>Widget-Simpleでtumblr.yaml</title>
      <link>http://example.org/2007/000096.html</link>
      <pubDate>Fri, 06 Apr 2007 17:53:13 +0900</pubDate>
      
      <guid>http://example.org/2007/000096.html</guid>
      <description>
Widget::Simple使いなさいと&lt;a href=&#34;http://b.hatena.ne.jp/entry/http://blog.aklaswad.com/2007/000095.html#bookmark-user-otsune&#34;&gt;つっこみをいただいた。&lt;/a&gt;なるほど。こんな簡単に出来るのですね。

&lt;pre class=&#34;code&#34;&gt;
link: http://www.tumblr.net/share
query:
  v: 2
  u: $args-&amp;gt;{entry}-&amp;gt;permalink
  t: $args-&amp;gt;{entry}-&amp;gt;title
content: Tumblr
&lt;/pre&gt;

&lt;pre class=&#34;code&#34;&gt;
  - module: Widget::Simple
    config:
      widget: tumblr
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Plagger::Plugin::Widget::Tumblr</title>
      <link>http://example.org/2007/000095.html</link>
      <pubDate>Thu, 05 Apr 2007 00:34:57 +0900</pubDate>
      
      <guid>http://example.org/2007/000095.html</guid>
      <description>&lt;pre class=&#34;code&#34;&gt;
package Plagger::Plugin::Widget::Tumblr;
use strict;
use base qw( Plagger::Plugin );
 
use HTML::Entities;
use URI;
use Encode;
 
sub register {
    my($self, $context) = @_;
    $context-&amp;gt;register_hook(
        $self,
        &#39;publish.entry.fixup&#39; =&amp;gt; \&amp;amp;add,
    );
}
 
sub add {
    my($self, $context, $args) = @_;
    $args-&amp;gt;{entry}-&amp;gt;add_widget($self);
}
 
sub html {
    my($self, $entry) = @_;
    my $uri = URI-&amp;gt;new(&#39;http://www.tumblr.net/share&#39;);
 
    $uri-&amp;gt;query_form({
        v =&amp;gt; &#39;2&#39;,
        u =&amp;gt; $entry-&amp;gt;permalink,
        t =&amp;gt; Encode::encode(&#39;utf-8&#39;, $entry-&amp;gt;title),
    });
    my $url = HTML::Entities::encode($uri-&amp;gt;as_string);
    return qq(&amp;lt;a href=&amp;quot;$url&amp;quot;&amp;gt;Tumblr&amp;lt;/a&amp;gt;);
}
 
1;
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Movable Typeのサンプルコードが万物の謎を解く</title>
      <link>http://example.org/2007/000094.html</link>
      <pubDate>Thu, 29 Mar 2007 12:41:21 +0900</pubDate>
      
      <guid>http://example.org/2007/000094.html</guid>
      <description>
&lt;a href=&#34;http://www.sixapart.jp/movabletype/manual/object_reference/archives/mt_promise.html&#34;&gt;
Movable Typeの PerlAPIリファレンス&lt;/a&gt;に含まれるサンプル・コードに、スーパーコンピュータ「&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E4%BA%BA%E7%94%9F%E3%80%81%E5%AE%87%E5%AE%99%E3%80%81%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E7%AD%94%E3%81%88&#34;&gt;ディープ・ソート&lt;/a&gt;」のソースコードの一部と思われるコードが引用されていることが判明した。
一部のアルゴリズムは省略されているにもかかわらず、全体としての動作は完全な「ディープ・ソート」のエミュレーションを行えるものとなっている。

なお、同様のエミュレータは&lt;a href=&#34;http://www.google.co.jp/search?q=%E4%BA%BA%E7%94%9F%E3%80%81%E5%AE%87%E5%AE%99%E3%80%81%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AE%E7%AD%94%E3%81%88&#34;&gt;Googleでも実装&lt;/a&gt;されているが、こちらのアルゴリズムは非公開となっている。</description>
    </item>
    
    <item>
      <title>Informer transformerの開発を三倍高速化するプラグイン</title>
      <link>http://example.org/2007/000093.html</link>
      <pubDate>Wed, 28 Mar 2007 22:05:27 +0900</pubDate>
      
      <guid>http://example.org/2007/000093.html</guid>
      <description>
具体的に何が起こるプラグインなのかというと、

「DebugModeに、paramオブジェクトに設定されている値を書き出す」</description>
    </item>
    
    <item>
      <title>PluginNameをL10Nしてはならぬ</title>
      <link>http://example.org/2007/000091.html</link>
      <pubDate>Tue, 27 Mar 2007 20:29:14 +0900</pubDate>
      
      <guid>http://example.org/2007/000091.html</guid>
      <description>
Movable Type のプラグインを作成する場合に、プラグインの管理画面で表示されることを見越して、L10Nに対応した形でプラグインの登録をする場合も多いと思います。

&lt;pre class=&#34;code&#34;&gt;
@MT::Plugin::HogeManager::ISA = qw(MT::Plugin);
my $plugin = new MT::Plugin::HogeManager({
    name        =&amp;gt; &#39;&amp;lt;MT_TRANS phrase=\&#39;HogeManager\&#39;&amp;gt;&#39;,
    author_name =&amp;gt; &#39;&amp;lt;MT_TRANS phrase=\&#39;aklaswad\&#39;&amp;gt;&#39;,
    l10n_class  =&amp;gt; &#39;HogeManager::L10N&#39;,
    system_config_template =&amp;gt; &#39;config.tmpl&#39;,
    settings    =&amp;gt; new MT::PluginSettings([
        [&#39;moge&#39;],
    ]),
});
MT-&amp;gt;add_plugin($plugin);
&lt;/pre&gt;

そして、このプラグインの設定をMT::PluginSettingsを利用してデータベースに保存するとアッー!

&lt;pre class=&#34;code&#34;&gt;
mysql&amp;gt; select * from mt_plugindata\G
*************************** 1. row ***************************
    plugindata_id: 1
  plugindata_data: SERG
   plugindata_key: configuration
plugindata_plugin: &amp;lt;MT_TRANS phrase=&#39;HogeManager&#39;&amp;gt;
1 row in set (0.00 sec)
&lt;/pre&gt;

ということで、どの程度実害があるかは分かりませんがnameはL10Nしないほうが良いようです。</description>
    </item>
    
    <item>
      <title>blog.aklaswad.comで配布されるプログラムのライセンスについて</title>
      <link>http://example.org/2007/000090.html</link>
      <pubDate>Fri, 23 Mar 2007 00:13:21 +0900</pubDate>
      
      <guid>http://example.org/2007/000090.html</guid>
      <description>
このブログ(blog.aklaswad.com)で配布されている全てのプログラムについて、暫定的に以下の範囲内でのご利用をお願いします。

非商用目的での利用・改変・再配布については、自由に行っていただいて構いません。ご自由にお使いください。
商用目的でも、オリジナルのコードをそのまま利用する限り、ご自由にお使いいただけます。

商用目的での改変および再配布を行う場合はご連絡ください。
よほど変な使い方で無い限りお断りすることはありません。
連絡はメールにて mail[at]aklaswad.com までお願いします。</description>
    </item>
    
    <item>
      <title>はてなでブックマークされるとメールで教えてくれるプラグイン</title>
      <link>http://example.org/2007/000089.html</link>
      <pubDate>Thu, 08 Mar 2007 23:21:47 +0900</pubDate>
      
      <guid>http://example.org/2007/000089.html</guid>
      <description>&lt;h3&gt;インストール&lt;/h3&gt;
解凍して出てきた「plugins」フォルダの中の「AlertHatenaBookmark」フォルダを、丸ごとお使いのMovable Typeのpluginsディレクトリにアップロードしてください。

&lt;h3&gt;下準備&lt;/h3&gt;
Movable Type のスケジュールタスクが動作している必要があります。ログフィードを定期的に取得するか、croｎjobを設定してください。

&lt;h3&gt;設定&lt;/h3&gt;
システム・メニューのプラグインから諸設定を変更できます。

&lt;dl&gt;
&lt;dt&gt;メール送信先&lt;/dt&gt;&lt;dd&gt;メールを送信する先を指定してください。設定していないと、メールが送信されず、Movable Typeのログにエラーが残ります。&lt;/dd&gt;
&lt;dt&gt;送信に使うアドレス&lt;/dt&gt;&lt;dd&gt;メール送信に使用するアドレスを指定します。設定していないと、メールが送信されず、Movable Typeのログにエラーが残ります。お使いのサーバーの設定によっては、同サーバー内のドメインのメールアドレスでしか送信できないなどの制限があるかもしれません。&lt;/dd&gt;
&lt;dt&gt;インターバル&lt;/dt&gt;&lt;dd&gt;前回メールより、指定した数以上にブックマーク数が増えた場合にメールを送信します。メールが多くてウザイという場合は数を増やしてください。&lt;/dd&gt;
&lt;/dl&gt;

</description>
    </item>
    
    <item>
      <title>mt-view.cgiを使ってみる</title>
      <link>http://example.org/2007/000088.html</link>
      <pubDate>Wed, 07 Mar 2007 01:23:07 +0900</pubDate>
      
      <guid>http://example.org/2007/000088.html</guid>
      <description>&lt;h3&gt;あらすじ&lt;/h3&gt;

mt-view.cgiは、管理画面から指定したアーカイブ・マッピングの設定を考慮してくれません。
mt-view.cgiは、「メインページ」という日本語のテンプレート名を理解してくれません。
mt-view.cgiは、ブログのidをURLに欲しがります。

ということで、本家ダイナミック・パブリッシングの機能を一部流用しつつ、mod_rewriteとアーカイブ・マッピングを使って設定してみます。

&lt;h3&gt;ブログの作成&lt;/h3&gt;

まず最初にすることは、mt-config.cgiに以下の一行を追加することです。

&lt;pre class=&#34;code&#34;&gt;SafeMode 0&lt;/pre&gt;

これでMTの安全装置が解除されます。デンジャラスです。

さて、ブログを作成しましょう。きちんとサイト・パス、サイトURLの設定もしてください。
普通にブログを作成したら、「メインページ」テンプレートのテンプレート名を「Main Index」に変更します。
次に、何でも良いのでいったんダイナミックパブリッシングを有効にします。これでブログのサイトパスで指定したディレクトリに「.htaccess」ファイルが作成されます。
このファイルをちょっと変更して、ブログに対するアクセスがmt-view.cgiによって処理されるようrewriteを適用させます。

おっと、その前にブログのIDを把握しておきましょう。ブラウザのアドレスバーに表示されているURLを見て、「blog_id=*」という部分を探してください。「*」の部分がブログのIDになります。

&lt;h3&gt;.htaccessの編集&lt;/h3&gt;

変更する必要があるのは2箇所です。とりあえず.htaccessファイルを開いてみましょう。

12行目に、「index.php」「index.html」などとファイル名が並んでいると思います。その最後に、mtview.phpファイルへのパスがあるので、これをmt-view.cgiへのパスに変更してください。そして、mt-view.cgiの後ろに、さらにURLのようにブログIDを追加します。
mtのインストールディレクトリのURL(CGIPath)が「http://example.com/cgi-bin/mt」で、ブログIDが1の場合、次のようになります。
&lt;pre class=&#34;code&#34;&gt;    DirectoryIndex index.php index.html index.htm default.htm default.html default.asp /cgi-bin/mt/mt-view.cgi/1/&lt;/pre&gt;

もう一箇所、25行目も同じように書き換えます。こちらは、ブログIDの後ろにさらに「$1」と加えてください。
&lt;pre class=&#34;code&#34;&gt;  RewriteRule ^(.*)$ /cgi-bin/mt/mt-view.cgi/1/$1 [L,QSA]&lt;/pre&gt;
この最後の「$1」は、ブログIDとは関係なく常に「$1」です。

&lt;h3&gt;アーカイブ・マッピングの編集&lt;/h3&gt;

これは、mt-view.cgiが受け付けるURLが決め打ちになっているので、黙って従うほかありません。各アーカイブで「カスタマイズする」を選び、以下の通りに設定してください。

&lt;dl&gt;&lt;dt&gt;エントリー&lt;/dt&gt;&lt;dd&gt;entry/%E&lt;/dd&gt;
&lt;dt&gt;月別&lt;/dt&gt;&lt;dd&gt;archives/%y/%m&lt;/dd&gt;
&lt;dt&gt;カテゴリー&lt;/dt&gt;&lt;dd&gt;section/&lt;$MTCategoryID$&gt;&lt;/dd&gt;&lt;/dl&gt;

&lt;h3&gt;動作確認&lt;/h3&gt;

これで、一通りの設定は終了です。
MTの出力する.htaccessでは、実際にファイルがある場合にはそのままファイルが呼び出される設定となっているので、ブログディレクトリから.htaccess以外のファイルを削除してブログにアクセスしてみてください。
ファイルが無いのにブログが表示できたなら大成功です。お疲れ様でした!

</description>
    </item>
    
    <item>
      <title>transformerの使い方</title>
      <link>http://example.org/2007/000085.html</link>
      <pubDate>Mon, 05 Mar 2007 21:41:17 +0900</pubDate>
      
      <guid>http://example.org/2007/000085.html</guid>
      <description>&lt;h3&gt;3つのコールバック&lt;/h3&gt;
主に以下のコールバックを利用することで、管理画面の変更が行えます。
&lt;ul&gt;&lt;li&gt;AppTemplateSource&lt;/li&gt;
&lt;li&gt;AppTemplateParam&lt;/li&gt;
&lt;li&gt;AppTemplateOutput&lt;/li&gt;&lt;/ul&gt;

それぞれのコールバックでは、実行されるタイミング、および渡される引数が異なるため、目的に応じて使い分けます。引数などの詳細は&lt;a href=&#34;http://www.sixapart.jp/movabletype/manual/object_reference/archives/mt_app.html&#34;&gt;Movable Type オブジェクト・リファレンス - MT::App&lt;/a&gt;の「コールバック」の項を参照してください。

Movable Typeの管理画面は、&lt;a href=&#34;http://search.cpan.org/~samtregar/HTML-Template/&#34;&gt;HTML::Templateモジュール&lt;/a&gt;を利用して出力されています。ある程度踏み込んだ作業を行う場合、HTML::Templateモジュールについての知識も必要になるでしょう。

&lt;h3&gt;AppTemplateSource&lt;/h3&gt;
管理画面のテンプレートを直接変更することが出来ます。実行されるのはHTML::Templateがテンプレートタグのパースを行う前なので、単純な文字列置換のほかにも、HTML::Templateのタグを直接書き換えることも可能です。

TMPL_INCLUDEで読み込まれるテンプレートについては、注意が必要です。AppTemplateSourceコールバックの実行ルーチンは、HTML::Templateのfilterとして登録されるので、TMPL_INCLUDEによって新たにテンプレートが読み込まれる都度、実行されます。

&lt;a href=&#34;http://perldoc.jp/docs/modules/HTML-Template-2.6/HTML/Template.pod&#34;&gt;HTML::Template - CGI スクリプトから HTML テンプレートを使うための Perl モジュール&lt;/a&gt;
&lt;blockquote&gt;

filter - このオプションはテンプレートファイルに対するフィルタを指定します。フィルタは HTML::Template がテンプレートファイルを読み込んだ後、テンプレートタグのパーズを開始する前に呼び出されるサブルーチンです。

(中略)

指定されたフィルタは TMPL_INCLUDE でファイルが読み込まれる度にメインのテンプレートファイルと同様に適用されます。

&lt;/blockquote&gt;

しかし、filter内でコールバックの判定と実行が行われるため、variant(ポイント以降の部分。この場合はファイル名)が指定されているコールバックは、その段階で「今回実行する必要がないコールバック」と判定されてしまい実行されません。その結果、たとえば
&lt;pre class=&#34;code&#34;&gt;MT-&amp;gt;add_callback(&#39;MT::App::CMS::AppTemplateSource.list_blog&#39;, 9, $plugin, \&amp;transform_routine);&lt;/pre&gt;として登録したコードは、list_blog.tmplファイル内部でインクルードされるheader.tmplに対しては実行されません。header.tmplのインクルードの際にコールバックされるのは、AppTemplateSource.headerに登録したコールバックや、variant無しでAppTemplateSourceに登録したコールバックです。
この仕様により、list_blog画面でのみheaderのテンプレートに変更を加える、ということは実現が難しくなっています。もしHTML::Templateによるテンプレートの展開が終了した後でも実現可能な作業ならば、迷わず「AppTemplateOutput」を使うべきでしょう。


管理画面の全てのページにスタイルシートやjavascriptを追加する場合にも、このコールバックを利用するとちょっと便利です。headerテンプレートには「&amp;lt;MT_HEAD:STYLE&amp;gt;」「&amp;lt;MT_HEAD:SCRIPT&amp;gt;」という、スタイルシートとjavascriptをhead要素内に追加するためのプレースホルダーが用意されています。具体的には、以下のサブルーチンを呼び出すことで、これらプレースホルダーの位置に任意の内容を挿入出来ます。

&lt;dl&gt;&lt;dt&gt;tmpl_prepend&lt;/dt&gt;
&lt;dd&gt;&lt;pre class=&#34;code&#34;&gt;tmpl_prepend($tmpl, $section, $id, $content);&lt;/pre&gt;プレースホルダーの先頭に$contentで指定した文字列を追加します。&lt;/dd&gt;
&lt;dt&gt;tmpl_replace&lt;/dt&gt;
&lt;dd&gt;&lt;pre class=&#34;code&#34;&gt;tmpl_replace($tmpl, $section, $id, $content);&lt;/pre&gt;プレースホルダー全体を$contentで指定した文字列で置き換えます。&lt;/dd&gt;
&lt;dt&gt;tmpl_append&lt;/dt&gt;
&lt;dd&gt;&lt;pre class=&#34;code&#34;&gt;tmpl_prepend($tmpl, $section, $id, $content);&lt;/pre&gt;プレースホルダーの先頭に$contentで指定した文字列を追加します。&lt;/dd&gt;
&lt;dt&gt;tmpl_select&lt;/dt&gt;
&lt;dd&gt;&lt;pre class=&#34;code&#34;&gt;tmpl_select($tmpl, $section, $id);&lt;/pre&gt;プレースホルダーの現在の内容を返します。&lt;/dd&gt;&lt;/dl&gt;

$tmplには、テンプレートの内容へのリファレンスを指定する必要があります(AppTemplateSourceから渡される$tmpl変数をそのまま渡せばよいです)。

$sectionと$idの組み合わせによってターゲットとなるプレースホルダーを指定します。mt-3.34では、$sectionに文字列「HEAD」、$idには文字列「STYLE」または「SCRIPT」という組み合わせが利用可能です。他には、やはりheaderテンプレートで「TOPNAV」「BLOGMENU」という組み合わせも利用できそうです(未確認)。将来的には、他にもプレースホルダーが追加されるのかもしれません。

例えば、管理画面の背景に何らかの画像を表示させたい場合、次のようなコードになります。

&lt;pre class=&#34;code&#34;&gt;MT-&amp;gt;add_callback(&#39;MT::App::CMS::AppTemplateSource&#39;, 9, $plugin, \&amp;amp;change_background);
 
sub change_background {
    my ($eh, $app, $tmpl) = @_;
    my $contents = &#39;body { background-image: url(http://www.example.com/some_image.gif); }&#39;;
    $app-&amp;gt;tmpl_append( $tmpl, &#39;HEAD&#39;, &#39;STYLE&#39;, $contents);
}&lt;/pre&gt;

なお、最終出力に対してカスタマイズを行うAppTemplateOutputでは、プレースホルダーがすでにテンプレートから削除されているため、これらのサブルーチンは利用できません。

&lt;h3&gt;AppTemplateParam&lt;/h3&gt;
HTML::Templateに渡されるパラメータに対して、追加や変更を行うことが出来ます。

&lt;img alt=&#34;whatisthequicksearch.png&#34; src=&#34;http://blog.aklaswad.com/whatisthequicksearch.png&#34; width=&#34;358&#34; height=&#34;144&#34; /&gt;

&lt;br clear=&#34;both&#34; /&gt;

例えば、管理画面の右上にあるクイックサーチ部分はパラメータで表示、非表示を切り替えているため、以下のようなコードで表示を抑制することが出来ます。

&lt;pre class=&#34;code&#34;&gt;MT-&amp;gt;add_callback(&#39;MT::App::CMS::AppTemplateParam&#39;, 9, $plugin, sub{ $_[2]-&amp;gt;{quick_search} = 0 });&lt;/pre&gt;

とはいえ、既存のパラメータについては、あまり多くの変更の余地は無いかもしれません。このコールバックは、（AppTemplateSourceコールバックと組み合わせて、）プラグインで独自にHTML::Templateのタグを追加する場合などに、より大きな威力を発揮するでしょう。

&lt;h3&gt;AppTemplateOutput&lt;/h3&gt;
最終的に出力されるHTMLに対して変更を行うことが出来ます。HTML::Templateのタグはすべて展開済みとなっているため、正規表現による置換を行う場合には注意が必要です。</description>
    </item>
    
    <item>
      <title>Movable Typeのエントリー投稿画面の叩き方</title>
      <link>http://example.org/2007/000087.html</link>
      <pubDate>Wed, 28 Feb 2007 00:01:17 +0900</pubDate>
      
      <guid>http://example.org/2007/000087.html</guid>
      <description>例えば、閲覧中のamazon.co.jpの商品ページを自分のMovableTypeで紹介する場合


■とりあえず動いた

&lt;a href=&#34;
javascript:

var cgipath = &#39;http://www.aklaswad.com/cgi-bin/blog/mt.cgi&#39;;
var amazonId = &#39;blogaklaswadc-22&#39;;

function parseASIN(){
    var li=document.getElementsByTagName(&#39;li&#39;),i=0,e,t,res;
    while(e=li[i++]){
        if((t=e.innerHTML).match(/ASIN:|ISBN-10:/)){
            res = t.replace(/^.+ (.+)$/,&#39;$1&#39;);
        }
    }
    return res;
}

var asin = parseASIN();
var link = &#39;http://www.amazon.co.jp/exec/obidos/ASIN/&#39; + asin + &#39;/&#39; + amazonId + &#39;/ref=nosim/&#39;;
var img = &#39;http://images-jp.amazon.com/images/P/&#39; + asin + &#39;.09.MZZZZZZZ.jpg&#39;;
var text = &#39;&lt;a href=&amp;quot;&#39; + link + &#39;&amp;quot;&gt;&lt;img src=&amp;quot;&#39; + img + &#39;&amp;quot;&gt;&lt;/a&gt;&#39;;
void(window.open(cgipath + &#39;?__mode=view&amp;_type=entry&amp;blog_id=2&amp;text=&#39; + text, &#39;hoge&#39;));

&#34;&gt;test&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>CustomEditorButton、約0.23</title>
      <link>http://example.org/2007/000086.html</link>
      <pubDate>Mon, 26 Feb 2007 22:44:48 +0900</pubDate>
      
      <guid>http://example.org/2007/000086.html</guid>
      <description>
&lt;ins datetime=&#34;2008-03-02T15:34:59+09:00&#34;&gt;MT4に対応した&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;CustomEditorButton2&lt;/a&gt;を公開しました!&lt;/ins&gt;

&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton_20070227.tar.gz&#34;&gt;CustomEditorButton_20070227.tar.gz&lt;/a&gt;
&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton_20070227.zip&#34;&gt;CustomEditorButton_20070227.zip&lt;/a&gt;

主な変更点は

&lt;ul&gt;&lt;li&gt;ユーザー記述のコードの仕様の一部変更(後述)&lt;/li&gt;
&lt;li&gt;システム管理者以外でも頑張ればボタンを編集できていた点を修正&lt;/li&gt;
&lt;li&gt;IEで動作がおかしかった点を修正(副作用で、マウスオーバーした際の説明が表示されなくなった)&lt;/li&gt;&lt;/ul&gt;

ユーザー記述コード部分の変更点

&lt;ul&gt;&lt;li&gt;選択範囲が無い場合でもcodeが実行されるようになった&lt;/li&gt;
&lt;li&gt;変数「txt」に値が代入されていると、textareaの全体をtxtで置き換えるようにした。&lt;/li&gt;&lt;/ul&gt;

うーん、どうもjavascriptの知識不足を露呈してしまいまして、ユーザー記述コードの実行については弄れど弄れど理想の動作をしてくれません。まあ、手軽に任意のコードを挿入したり出来れば充分という気もするので、あまり張り切りすぎず、このままシンプルな仕様にしておこうと思います。

今後追加したい機能としては

&lt;ul&gt;&lt;li&gt;ボタンのトグル機能のサポート&lt;/li&gt;
&lt;li&gt;キーボードショートカット対応&lt;/li&gt;&lt;/ul&gt;

等を考えてます。あれをやれとかこれはするなとか、フィードバック何でもください。</description>
    </item>
    
    <item>
      <title>「MTプラグイン作成」独自ページをmt.cgiから出力させる</title>
      <link>http://example.org/2007/000084.html</link>
      <pubDate>Thu, 15 Feb 2007 16:37:33 +0900</pubDate>
      
      <guid>http://example.org/2007/000084.html</guid>
      <description>add_methodsパラメータの設定
メソッドを追加する場合は、プラグインの登録時にapp_methodsパラメータを追加します。

my $plugin = new MT::Plugin::CustomEditorButton({
  name =&gt; &#39;&lt;MT_TRANS phrase=\&#39;_PLUGIN_NAME\&#39;&gt;&#39;,
  version =&gt; $VERSION,
  description =&gt; &#39;&lt;MT_TRANS phrase=\&#39;_PLUGIN_DESCRIPTION\&#39;&gt;&#39;,
  author_name =&gt; &#39;&lt;MT_TRANS phrase=\&#39;_PLUGIN_AUTHOR\&#39;&gt;&#39;,
  author_link =&gt; &#39;http://blog.aklaswad.com/&#39;,
  doc_link =&gt; &#39;http://blog.aklaswad.com/&#39;,
  app_methods =&gt; {
    &#39;MT::App::CMS&#39; =&gt; {
      &#39;ceb_save_button&#39; =&gt; \&amp;ceb_save_button,
      &#39;ceb_edit_button&#39; =&gt; \&amp;ceb_edit_button,
      &#39;ceb_list_button&#39; =&gt; \&amp;ceb_list_button,
      &#39;ceb_delete_button&#39; =&gt; \&amp;ceb_delete_button,
      &#39;ceb_install_default&#39; =&gt; \&amp;ceb_install_default,
      &#39;ceb_edit_profile&#39; =&gt; \&amp;ceb_edit_profile,
      &#39;ceb_save_profile&#39; =&gt; \&amp;ceb_save_profile,
    },
  },
  l10n_class =&gt; &#39;CustomEditorButton::L10N&#39;,
});</description>
    </item>
    
    <item>
      <title>エントリー一覧画面を、公開/下書きの状況によって色分けする</title>
      <link>http://example.org/2007/000082.html</link>
      <pubDate>Tue, 13 Feb 2007 23:25:25 +0900</pubDate>
      
      <guid>http://example.org/2007/000082.html</guid>
      <description>
&lt;img alt=&#34;EntryConditionalColoring.png&#34; src=&#34;http://blog.aklaswad.com/EntryConditionalColoring.png&#34; width=&#34;200&#34; height=&#34;151&#34; /&gt;一発ネタプラグイン。

&lt;a href=&#34;http://blog.aklaswad.com/entryconditionalcoloring.zip&#34;&gt;EntryConditionalColoring.zip&lt;/a&gt;

エントリー一覧の表示画面で、行の表示色を奇数偶数ではなくエントリーの状態によって色分けしてみました。
下書きのままで置いておくべきエントリーを間違えて公開してしまう、なんて事が十回に一回位は減るかもしれません。
</description>
    </item>
    
    <item>
      <title>パスタを美味しくゆでるための原則</title>
      <link>http://example.org/2007/000081.html</link>
      <pubDate>Mon, 12 Feb 2007 16:15:32 +0900</pubDate>
      
      <guid>http://example.org/2007/000081.html</guid>
      <description>
何故パスタなのか。
&lt;ul&gt;
&lt;li&gt;基本部分は日持ちのする材料だけで作れること。&lt;/li&gt;
&lt;li&gt;応用が容易なこと。&lt;/li&gt;
&lt;/ul&gt;
以下の原則は、あくまで「失敗をせずにパスタを茹でる」ことに主眼をおいたものです。ですが、パスタ自体が美味しく茹で上がっていれば、後は何をしても大体上手いものになります。

同じパスタを使い続ける
メーカーによっても、パスタの太さによっても最適なゆで加減は違います。
塩をばっちり投入する
パスタの下味になります。ここで手を抜くと味気なくなってしまいます。
食卓塩しかもっていない場合は論外。キロで買いましょう。
焦がさない
小さい鍋で茹でる場合、鍋からはみ出た部分が焦げてしまう事があります。焦げてしまった部分はあきらめ、速やかに捨てましょう。
茹で時間は袋に書かれているものより1-2分短く
よほど手際よく無い限り、ソースと絡めている間に最適な食べごろを過ぎてしまいます。
</description>
    </item>
    
    <item>
      <title>Movable Type のエントリー編集画面に自由に機能追加できるプラグイン</title>
      <link>http://example.org/2007/000080.html</link>
      <pubDate>Mon, 12 Feb 2007 12:51:29 +0900</pubDate>
      
      <guid>http://example.org/2007/000080.html</guid>
      <description>&lt;h3&gt;マニュアル&lt;/h3&gt;

&lt;dl&gt;&lt;dt&gt;インストール&lt;/dt&gt;&lt;dd&gt;

ファイルをダウンロード、解凍したら、お使いのMovable Typeのディレクトリに上書きする形でアップロードしてください。「mt-static」を移動している場合や、上書きが不安な場合は、以下の2箇所にファイルをアップロードしてください。
&lt;ul&gt;&lt;li&gt;解凍したディレクトリの「plugins/CustomEditorButton」を、お使いのMovable Typeの「plugins」ディレクトリに&lt;/li&gt;&lt;li&gt;解凍したディレクトリの「mt-static/plugins/CustomEditorButton」を、お使いのMovable Typeの「mt-static/plugins」ディレクトリに&lt;/li&gt;&lt;/ul&gt;

&lt;/dd&gt;&lt;dt&gt;ボタンの管理&lt;/dt&gt;&lt;dd&gt;

プラグインの性質上、変なことをやろうと思えば出来る構造となっているので、誰でもボタンを作成できる、という事には出来ません。ボタンの作成やインストールを行う場合、システム管理者でログインする必要があります。
システム・メニューの中から「ボタン」を選択して、ボタンの管理画面に進んでください。ボタンの追加、削除ができます。

&lt;/dd&gt;&lt;dt&gt;ボタンの作成&lt;/dt&gt;&lt;dd&gt;

新規にボタンを追加する場合、以下の項目を設定します。

&lt;ul&gt;&lt;li&gt;name: ボタンの名前です。&lt;/li&gt;&lt;li&gt;表示文字: ボタンの表示に使用される文字を指定します。ボタンの表示用の画像が設定されている場合は、この項目は使用されません。&lt;/li&gt;&lt;li&gt;画像へのURL: ボタンのイメージに画像を使用する場合、アップロードした画像のurlをここに指定してください。現在の仕様では、ボタン外側の枠は自動的に提供されます。ボタンの中身だけの画像を用意してください。&lt;/li&gt;&lt;li&gt;説明: ボタンの説明を入力します。&lt;/li&gt;&lt;li&gt;コード: 後述のように、ボタンの動作をjavascriptで記述してください。&lt;/li&gt;&lt;/ul&gt;

&lt;/dd&gt;&lt;dt&gt;コード&lt;/dt&gt;&lt;dd&gt;

javascriptでボタンの動作を定義します。
&lt;b&gt;近いうちに仕様は変更される予定です。&lt;/b&gt;
ここに書かれたjavascriptのコードは、関数の中に自動的に展開されるので、必要な動作の内容だけを記述するだけですみます。
現在の仕様では、エディター画面で範囲選択がされている場合にのみ、選択範囲が「str」という変数に代入されて、このコードが実行されます。
str変数に処理結果を代入することで、選択範囲に処理が反映されます。
例えば、選択範囲を「div」タグで囲む場合は、以下の一行をコード欄に入力します。
&lt;pre class=&#34;code&#34;&gt;str = &#39;&amp;lt;div&amp;gt;&#39; + str + &#39;&amp;lt;/div&amp;gt;&#39;;&lt;/pre&gt;

&lt;/dd&gt;&lt;dt&gt;個人用の設定&lt;/dt&gt;&lt;dd&gt;

&lt;img alt=&#34;CustomEditorButton_fig3.png&#34; src=&#34;http://blog.aklaswad.com/CustomEditorButton_fig3.png&#34; width=&#34;263&#34; height=&#34;60&#34; /&gt;各投稿者は、システムにインストールされているボタンの中から、好きなものを選択して使用できます。
画面の右上のログアウトの隣に、「My Button」メニューが追加されていますので、クリックして個人のボタン設定画面にすすんでください。
画面上段が、現在利用する設定となっているボタンの一覧です。利用したいボタンが下段にある場合、ドラッグ&amp;ドロップで上段に放り込んでください。並び順もそのまま適用されます。

&lt;/dd&gt;&lt;dt&gt;今後&lt;/dt&gt;&lt;dd&gt;

開発にあたり、とりあえずの使い勝手を最優先して外堀から埋めていきましたが、一番肝心のボタンのスクリプト機能が置き去りになっている状態です。
これから、ボタン作成に便利な機能をいろいろ追加していく予定ですが、その代わり現在のスクリプト仕様は変更になる可能性が大です。来週末くらい迄に仕様を固めたいと思いますので、それまではベータ版ということでご容赦ください。

&lt;/dd&gt;&lt;/dl&gt;</description>
    </item>
    
    <item>
      <title>チャーハン</title>
      <link>http://example.org/2007/000079.html</link>
      <pubDate>Wed, 07 Feb 2007 23:13:22 +0900</pubDate>
      
      <guid>http://example.org/2007/000079.html</guid>
      <description>
僕が学生で下宿していた頃、通いつめていたパチ屋の向かいに安い中華屋があった。
確かチャーハンは500円だったと思う。
僕は授業には一切出ずに毎日毎日朝からスロットしてた。結構勝てた。で、昼は向かいの中華屋でチャーハンを食べていた。

その中華屋はカウンターしかなくて、客の目の前に職人がいて、タバコを吸う傍ら、時折鍋を振る。
炊飯が追いつかなければ、平然と「サトウのごはん」を使ってチャーハンを作って出す。
そんな、なんというか、やる気の無い店なのだが、目の前で作るチャーハンは味のばらつきもなく妙に美味しかった。
そのときの記憶を元に、安定してチャーハンを上手く作る手順をメモっておきます。

・オーダーが入ったら、どんぶりにご飯を盛り、上に刻んだネギと刻んだチャーシューを乗せておく(Ａ)。
チャーハンは作業の迅速さが命。ネギや加工済みの具の投入タイミングはさほど重要では無い。だったら米と一緒に投入すればよい。
・タバコを吸いながら中華鍋に油を敷き、よく熱する。
業務用のコンロで最大火力で熱してさえ、ゆっくりタバコを吸う余裕が生まれるくらいしっかり熱する。
・卵を片手で割りいれ、即効でご飯(A)を投入。
ココだけは真似しないほうが良いかも。あらかじめ別皿に卵を溶いておこう。自分はそうしている。
ご飯投入は5秒後くらいか。
・鍋を激しく振りつつ、魔法の液体三種類をオタマで振り掛ける。
多分、ネギ油と化学調味料だと思われる。鍋肌を滑らしていたので、香り付けの醤油もあったのだろうか。自宅でやるなら、塩コショウ、味の素、何でも良いが、鍋を振る手を止めずに行うこと。調味料は片手で取れる位置にそろえておこう。
・満足がゆくまで鍋を振って出来上がり。

最近作ってないけど、多分うまいよ。</description>
    </item>
    
    <item>
      <title>idxctx プラグインというのを作ってみました。</title>
      <link>http://example.org/2007/000078.html</link>
      <pubDate>Mon, 05 Feb 2007 22:00:55 +0900</pubDate>
      
      <guid>http://example.org/2007/000078.html</guid>
      <description>
例えばエントリーアーカイブで、ブログ全体の最新コメントをサイドバーに表示させたい場合。
MTの仕様では難しい(出来ない?)んですよね。
該当のエントリーのコメントだけがMTCommentsの対象になるので。

例えば月別アーカイブで、ブログ全体の最新エントリーをサイドバーに表示させたい場合。
出来ないんですよね。該当の月のエントリーだけがMTEntriesの対象になるので。

そこで、MTIndexContext というコンテナ・タグを追加するプラグインを作りました。

&lt;a href=&#34;http://blog.aklaswad.com/indexcontext.zip&#34;&gt;indexcontext.zip&lt;/a&gt;

このコンテナ・タグで囲んだ箇所は、一時的にインデックステンプレートと同じ振る舞いになります。

これは、なにげに便利なんじゃないかな、と思います。例えば、全てのアーカイブページでメイン・ページと同じサイドバーを表示させたい場合、WidgetManagerを使っているなら全てのアーカイブテンプレートに以下のような記述をするだけで済むようになります。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;MTIndexContext&amp;gt;
  &amp;lt;MTWidgetManager name=&amp;quot;MyWidget&amp;quot;&amp;gt;
&amp;lt;/MTIndexContext&amp;gt;
&lt;/pre&gt;

インストールは、zipを解凍して出てくる「indexcontext.pl」ファイルをpluginsディレクトリにアップロードするだけです。

早速このブログにも適用してみました。
カテゴリーアーカイブは使っていませんが、エントリーと月別のアーカイブで、メインと同じ出力が得られていますのでご確認ください。
Widgetの操作だけでメインページと全アーカイブのサイドバーが変更できるので、非常に楽チンです。


ただし。欠点。小一時間格闘したのですが、ダイナミック・パブリッシング用のPHPが出来てません。perlと根本的な仕様が違っていて、なかなか難しそう。ていうか今の僕には実現できそうにありません。だってPHPなんて触ったこと無いんだもの。

&lt;ins datetime=&#34;2007-03-21T21:50:03+09:00&#34;&gt;
&lt;h3&gt;3月21日追記&lt;/h3&gt;

あんちもん2.Labさんがダイナミック・パブリッシングに対応させてくださいました! すごい!
&lt;a href=&#34;http://www.antimon2.atnifty.com/2007/03/indexcontext4d.html&#34;&gt;あんちもん2.Lab: ダイナミック・パブリッシング対応　indexcontext プラグイン&lt;/a&gt;
感謝感激です。
&lt;/ins&gt;</description>
    </item>
    
    <item>
      <title>エントリー書くのをサボっているとメールで警告してくれるプラグイン作りました。</title>
      <link>http://example.org/2007/000077.html</link>
      <pubDate>Sun, 04 Feb 2007 00:31:09 +0900</pubDate>
      
      <guid>http://example.org/2007/000077.html</guid>
      <description>インストール:
ダウンロードしたファイルを解凍すると、解凍先フォルダの中に「plugins」というフォルダが出来ると思います。その中の「AlertEntryInterval」フォルダを、お使いの MovableType の「plugins」ディレクトリにアップロードしてください。

設定:
デフォルトではメール通知は有効にはならず、管理画面の何箇所かにうざいタイマーが表示されるだけです。
システム管理者でログインして、システム・メニューのプラグインから設定を行ってください。
設定内容については、まあ分かると思います。不明な点はどうぞこのエントリーのコメントにでも書いてくだされば180%お答えします(約二回返信する計算)。

注意点 1:
使っているサーバーで、mtからのメールの送信が可能かあらかじめ確認して置いてください。
また、現在の仕様では、お使いの MT の全ての投稿者が自動的に対象になります。複数人で運用されている場合、変なメアドを入れている人がいると、変なところに変なメールが飛んで余計なトラブルになるかもしれません。ご注意ください。

注意点 2:
スケジュール・タスク機能を利用しているので、cron等で定期的にmtのスケジュール・タスクが実行されている必要があります。
ログフィードをBloglinesなどで取得しておくのが一番手っ取り早いのでは無いでしょうか。
</description>
    </item>
    
    <item>
      <title>FastCGI</title>
      <link>http://example.org/2007/000075.html</link>
      <pubDate>Fri, 26 Jan 2007 00:12:28 +0900</pubDate>
      
      <guid>http://example.org/2007/000075.html</guid>
      <description>
Movable Type が3.34でFastCGIに対応したということで、自宅Ubuntuで試してみた。
結果。

滅茶苦茶はええええくなった。なんだこりゃ。
SQLiteで試したのだが、エントリーの投稿とか全然違う。
なんにせよ、導入が楽な上効果抜群のようなので、超おすすめです。

以下、Ubuntu Serverでの導入で苦労した点の個人メモ。

・FastCGIのインストール
aptitude searchで見つかる「fcgid」は別物。MTは対応していないようだ。
aptで入れる場合のパッケージ名は「libapache2-mod-fastcgi」です。
見つからない場合は、適当に/etc/apt/source.listにリポジトリを追加すること。

で、
sudo a2enmod fastcgi
sudo /etc/init.d/apache2 restart
とすればFastCGIが有効な状態でApach2が起動する。

・MT実行時のapacheの設定
以下参考。
&lt;a href=&#34;http://www.lifewiki.net/sixapart/HostingMTUnderFastCGI&#34;&gt;Running Movable Type Under FastCGI&lt;/a&gt;
要するに、.htaccessか、/etc/apache2/sites-available/defaultなどのhttpd.conf系ファイルで、cgiファイルをfastcgiで実行するように指定してやればよい。それだけで問題なく動くみたい。

#AddHandler cgi-script .cgi
AddHandler fastcgi-script .cgi

</description>
    </item>
    
    <item>
      <title>PSP買った</title>
      <link>http://example.org/2007/000074.html</link>
      <pubDate>Sat, 20 Jan 2007 15:25:19 +0900</pubDate>
      
      <guid>http://example.org/2007/000074.html</guid>
      <description>
昨日、中古で14900円で購入。やや画面に汚れがあったが問題なし。
で、ゲーム屋ではメモリースティックが馬鹿高い。32Mしか売ってない。
狙いは2Gのもの。新宿ヨドバシでも高かったので、昨日は購入は諦め、今日改めて秋葉まで。
S師の教えに従い、指示通りの店までいったところ、ヨドバシ比で3000円安く購入できた。
アキバスゲー。今まで馬鹿にしていたよ。今度から毎週通おうと思います。

で、とりあえず色々実験中。これで毎朝通勤中にフィードなど読もうと思っていたのですが、うっかり新宿でGTALCSを入手できてしまったので、フィードなど忘れて猿のようにやりまくってしまう予感・・・</description>
    </item>
    
    <item>
      <title>CustomEditorButton 0.1</title>
      <link>http://example.org/2007/000073.html</link>
      <pubDate>Thu, 11 Jan 2007 23:21:35 +0900</pubDate>
      
      <guid>http://example.org/2007/000073.html</guid>
      <description>
&lt;ins datetime=&#34;2008-03-02T15:34:59+09:00&#34;&gt;MT4に対応した&lt;a href=&#34;http://blog.aklaswad.com/mtplugins/customeditorbutton2.html&#34;&gt;CustomEditorButton2&lt;/a&gt;を公開しました!&lt;/ins&gt;

&lt;img alt=&#34;CustomEditorButton_fig1.png&#34; src=&#34;http://blog.aklaswad.com/CustomEditorButton_fig1.png&#34; width=&#34;134&#34; height=&#34;117&#34; /&gt;Movable Type のエントリー編集画面に、自由にボタンを追加できるプラグインです。3.3 専用です。

&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton0.1.tar.gz&#34;&gt;CustomEditorButton0.1.tar.gz&lt;/a&gt;
&lt;a href=&#34;http://blog.aklaswad.com/CustomEditorButton0.1.zip&#34;&gt;CustomEditorButton0.1.zip&lt;/a&gt;

システムメニューの「ボタン」からボタンの追加、編集が行えます。
</description>
    </item>
    
    <item>
      <title>UbuntuServerにImage::Magickが入らない!</title>
      <link>http://example.org/2007/000072.html</link>
      <pubDate>Sat, 06 Jan 2007 22:14:53 +0900</pubDate>
      
      <guid>http://example.org/2007/000072.html</guid>
      <description>
スタート時の状況はこう

&lt;ul&gt;&lt;li&gt;aptitude searchではperlmagickが見つからない&lt;/li&gt;
&lt;li&gt;cpanからインストールしても動かない&lt;/li&gt;
&lt;/ul&gt;
以下を行い何とかインストールできた。

&lt;ul&gt;
&lt;li&gt;cpanで入れたImage::Magickを&lt;a href=&#34;http://blog.aklaswad.com/2006/000071.html&#34;&gt;前回のエントリー&lt;/a&gt;の1,2の方法でアンインストール&lt;/li&gt;
&lt;li&gt;/etc/apt/sources.listに以下の行を追加
&lt;pre class=&#34;code&#34;&gt;deb http://ubuntu.mithril-linux.org/archives/ edgy main universe&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;aptitudeのパッケージリストを更新
&lt;pre class=&#34;code&#34;&gt;sudo aptitude update&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;aptitudeでインストール&lt;/li&gt;
&lt;/ul&gt;

cpanから入れたものが悪さをしていることに気づかず、結構はまった。何してもエラー内容が変わらないんだから、もっと早く気づけよ俺。</description>
    </item>
    
    <item>
      <title>aptitude で libxml-sax-perl が入らない!</title>
      <link>http://example.org/2006/000071.html</link>
      <pubDate>Sun, 31 Dec 2006 11:31:03 +0900</pubDate>
      
      <guid>http://example.org/2006/000071.html</guid>
      <description>
こんな感じのエラーが発生する。

&lt;pre class=&#34;code&#34;&gt;
libxml-sax-perl (0.12-5) を設定しています ...
Can&#39;t locate object method &#34;save_parsers_debian&#34; via package &#34;XML::SAX&#34; at /usr/bin/update-perl-sax-parsers line 90.
dpkg: libxml-sax-perl の処理中にエラーが発生しました (--configure):
 サブプロセス post-installation script はエラー終了ステータス 255 を返しました
&lt;/pre&gt;

これは、エラーメッセージにもあるようにdebian特有の問題らしい。家のUbuntu サーバーでも発生した。以下解決ページ
&lt;a href=&#34;http://bugs.donarmstrong.com/cgi-bin/bugreport.cgi?bug=229178&#34;&gt;
http://bugs.donarmstrong.com/cgi-bin/bugreport.cgi?bug=229178&lt;/a&gt;

aptitudeでインストールする前にcpanでXML::SAXをインストールするとハマルらしい。
解決するには以下の方法で。

&lt;ol&gt;&lt;li&gt;perlモジュールをアンインストールするスクリプトを用意。&lt;a href=&#34;http://www.cpan.org/misc/cpan-faq.html#How_delete_Perl_modules&#34;&gt;http://www.cpan.org/misc/cpan-faq.html#How_delete_Perl_modules&lt;/a&gt;のスクリプトをコピーして、remove.plとして貼り付け保存。冒頭のパスは「/usr/bin/perl」に変えておく。&lt;/li&gt;
&lt;li&gt;スクリプトを実行。&lt;pre class=&#34;code&#34;&gt;sudo ./remove.pl XML::SAX&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;aptitude から入れなおす。&lt;pre class=&#34;code&#34;&gt;sudo aptitude install libxml-sax-perl&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>携帯からテスト - 携帯からテスト</title>
      <link>http://example.org/2006/000070.html</link>
      <pubDate>Mon, 25 Dec 2006 21:22:32 +0900</pubDate>
      
      <guid>http://example.org/2006/000070.html</guid>
      <description>
&lt;h2&gt;&lt;a href=&#34;&#34;&gt;携帯からテスト&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&amp;#x4ECA;&amp;#x5EA6;&amp;#x306F;&amp;#x3069;&amp;#x3046;&amp;#x306A;&amp;#x308B;&amp;#x3067;&amp;#x3057;&amp;#x3087;&amp;#x3046;&amp;#x304B;

&lt;/pre&gt;
&lt;br /&gt;



</description>
    </item>
    
    <item>
      <title>moblogのテスト - moblogのテスト</title>
      <link>http://example.org/2006/000069.html</link>
      <pubDate>Mon, 25 Dec 2006 21:16:39 +0900</pubDate>
      
      <guid>http://example.org/2006/000069.html</guid>
      <description>
&lt;h2&gt;&lt;a href=&#34;&#34;&gt;moblogのテスト&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;plagger&amp;#x3092;&amp;#x5229;&amp;#x7528;&amp;#x3057;&amp;#x3066;&amp;#x3001;moblog&amp;#x3067;&amp;#x304D;&amp;#x308B;&amp;#x4ED5;&amp;#x7D44;&amp;#x307F;&amp;#x3092;&amp;#x4F5C;&amp;#x3063;&amp;#x3066;&amp;#x307F;&amp;#x307E;&amp;#x3059;&amp;#x3002;
(&amp;#x3068;&amp;#x3044;&amp;#x3044;&amp;#x3064;&amp;#x3064;&amp;#x3053;&amp;#x306E;&amp;#x30E1;&amp;#x30FC;&amp;#x30EB;&amp;#x306F;Thunderbird&amp;#x3067;&amp;#x66F8;&amp;#x3044;&amp;#x3066;&amp;#x3044;&amp;#x305F;&amp;#x308A;&amp;#x3059;&amp;#x308B;&amp;#x30FB;&amp;#x30FB;&amp;#x30FB;)
&amp;#x3053;&amp;#x306E;&amp;#x30CD;&amp;#x30BF;&amp;#x3092;&amp;#x3042;&amp;#x307E;&amp;#x308A;&amp;#x805E;&amp;#x3044;&amp;#x305F;&amp;#x3053;&amp;#x3068;&amp;#x7121;&amp;#x3044;&amp;#x306E;&amp;#x306F;&amp;#x3001;moblog&amp;#x306E;&amp;#x305F;&amp;#x3081;&amp;#x306B;plagger&amp;#x307E;&amp;#x308F;&amp;#x3057;&amp;#x3063;&amp;#x3071;&amp;#x306A;&amp;#x3057;
&amp;#x306B;&amp;#x3059;&amp;#x308B;&amp;#x306E;&amp;#x306F;&amp;#x3061;&amp;#x3087;&amp;#x3063;&amp;#x3068;&amp;#x5927;&amp;#x8888;&amp;#x88DF;&amp;#x3060;&amp;#x304B;&amp;#x3089;&amp;#x3067;&amp;#x3057;&amp;#x3087;&amp;#x3046;&amp;#x304B;&amp;#x3002;

yaml&amp;#x306F;&amp;#x3053;&amp;#x3093;&amp;#x306A;&amp;#x611F;&amp;#x3058;&amp;#x3002;

&amp;lt;pre class=&amp;quot;code&amp;quot;&amp;gt;
global:
  assets_path: /usr/share/plagger/assets
  timezone: Asia/Tokyo
plugins:
  - module: CustomFeed::POP3
    config:
      host: exapmle.com
      username: moblog@example.com
      password: base64::koudesuka?
      ssl: 1
      delete: 1
  - module: Publish::MT
    config:
      rsd: http://blog.aklaswad.com/rsd.xml
      username: mtuser
      password: base64::wakarimasen&amp;gt;&amp;lt;
      blog_id: 1
&amp;lt;/pre&amp;gt;

&amp;#x679C;&amp;#x305F;&amp;#x3057;&amp;#x3066;&amp;#x4E0A;&amp;#x624B;&amp;#x304F;&amp;#x884C;&amp;#x304F;&amp;#x3067;&amp;#x3057;&amp;#x3087;&amp;#x3046;&amp;#x304B;!?


&lt;/pre&gt;
&lt;br /&gt;



</description>
    </item>
    
    <item>
      <title>EntryFullText - SoccerUndergroundBlog</title>
      <link>http://example.org/2006/000068.html</link>
      <pubDate>Sat, 23 Dec 2006 17:12:04 +0900</pubDate>
      
      <guid>http://example.org/2006/000068.html</guid>
      <description>
サッカー関連サイト用EFT第二弾。こんな雑なつくりで良いのかしらん。

assets/plugins/Filter-EntryFullText/soccer_UG_blog.yaml

&lt;pre class=&#34;code&#34;&gt;
author: aklaswad
handle: http://soccerunderground\.com/blog/.*
extract: &amp;lt;div class=&#34;blogbody&#34;&amp;gt;.*?&amp;lt;/div&amp;gt;&amp;lt;/h3&amp;gt;(.*?)&amp;lt;div class=&#34;posted&#34;&amp;gt;
extract_capture: body
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Filter::EntryFullText　WorldSoccerPlus</title>
      <link>http://example.org/2006/000067.html</link>
      <pubDate>Tue, 19 Dec 2006 16:59:02 +0900</pubDate>
      
      <guid>http://example.org/2006/000067.html</guid>
      <description>
これは待っていても誰も作らないだろうということで、見よう見まねで作ってみた。

&lt;pre class=&#34;code&#34;&gt;
author: aklaswad
handle: http://wsp\.sponichi\.co\.jp/.*
extract: &amp;lt;div id=&#34;etbody&#34;&amp;gt;(.*?)&amp;lt;/div&amp;gt;\n&amp;lt;div id=&#34;etmore&#34;&amp;gt;(.*?)&amp;lt;/div&amp;gt;
extract_capture: body_1 body_2
extract_after_hook: |
  $data-&amp;gt;{body} = &#34;&amp;lt;p&amp;gt;&#34;.$data-&amp;gt;{body_1}.&#34;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&#34;.$data-&amp;gt;{body_2}.&#34;&amp;lt;/p&amp;gt;&#34;;
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>FaviconManager 0.1</title>
      <link>http://example.org/2006/000066.html</link>
      <pubDate>Wed, 13 Dec 2006 23:02:44 +0900</pubDate>
      
      <guid>http://example.org/2006/000066.html</guid>
      <description>&lt;h3&gt;インストール方法&lt;/h3&gt;
ファイルを解凍して、「FaviconManager」ディレクトリを丸ごと、Movable Type の「plugins」ディレクトリにアップロードしてください。

&lt;h3&gt;準備&lt;/h3&gt;
あらかじめ、faviconとして利用できる画像ファイルを、ftpやMovable Typeの「ファイルのアップロード」などを使用してサーバーにアップロードしてください。

&lt;h3&gt;テンプレートにfaviconのリンクを挿入&lt;/h3&gt;
新規ブログを作成する場合は、自動的にテンプレートにfaviconへのリンクが挿入されます。

既存のブログにfaviconへのリンクを挿入することもできます。
システム・メニュー内、ブログ一覧の「その他の操作」に「テンプレートにfaviconを追加」というメニューが追加されているので、リンクを追加したいブログを選択して「テンプレートにfaviconを追加」を実行してください。

※テンプレートをカスタマイズされている場合、ブログのテンプレート書き換えの際に、書き換えに失敗する可能性もあります。その場合は、全てのHTMLファイルを出力するテンプレートのhead内に以下のテンプレートを挿入してください。

&lt;pre class=&#34;code&#34;&gt;&amp;lt;MTHasFavicon&amp;gt;&amp;lt;link rel=&#34;shortcut icon&#34; href=&#34;&amp;lt;$MTFaviconURL$&amp;gt;&#34; /&amp;gt;&amp;lt;/MTHasFavicon&amp;gt;&lt;/pre&gt;

&lt;h3&gt;faviconを登録&lt;/h3&gt;
システム、あるいは各ブログの「プラグイン」メニューからFaviconManagerの「設定を表示」を選び、faviconの画像ファイルのURLアドレスを指定してください。

ブログのメニューでは、各ブログで使用するfaviconを指定できます。

システムのメニューでは、各ブログでの指定がない場合に使用するfaviconと、管理画面のfaviconを指定できます。

ブログのfaviconを設定、変更した場合、ブログ全体の再構築を行ってください。

&lt;dl&gt;&lt;dt&gt;todo:&lt;/dt&gt;&lt;dd&gt;&lt;ul&gt;&lt;li&gt;ダイナミック・パブリッシングに対応&lt;/li&gt;&lt;li&gt;各種フィードのテンプレート書き換えに対応&lt;/li&gt;&lt;/dd&gt;&lt;dl&gt;</description>
    </item>
    
    <item>
      <title>I am G1 winner!</title>
      <link>http://example.org/2006/000064.html</link>
      <pubDate>Sun, 03 Dec 2006 09:50:03 +0900</pubDate>
      
      <guid>http://example.org/2006/000064.html</guid>
      <description>
ついにG1勝てました。
われらが期待の6歳馬チャンジャフイタ号が爆発的な末脚を発揮し、スーパーマイルステークスを制しました!

サントリーのキャンペーンサイト &lt;a href=&#34;http://bvs.s-boss.com/&#34;&gt;bossvegas&lt;/a&gt; で遊べる競馬ゲームです。
まともにやるとそこらの競走馬育成ゲームより遥かに難易度が高いかもしれません。</description>
    </item>
    
    <item>
      <title>Movable Type の管理画面にfaviconを設定するプラグイン</title>
      <link>http://example.org/2006/000063.html</link>
      <pubDate>Mon, 30 Oct 2006 03:09:21 +0900</pubDate>
      
      <guid>http://example.org/2006/000063.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/cmsfavicon.zip&#34;&gt;cmsfavicon.zip&lt;/a&gt;

Movable Type の管理画面にfaviconを設定するtransformerプラグインです。3.3系でしか動作しないはずです。
pluginsディレクトリに展開したら、システム・メニューのプラグインからfaviconのURLを指定してください。上手く行けば、即座に反映されるはずです。Firefox2.0で動作を確認しました。
</description>
    </item>
    
    <item>
      <title>色々弄った</title>
      <link>http://example.org/2006/000062.html</link>
      <pubDate>Sun, 29 Oct 2006 23:29:19 +0900</pubDate>
      
      <guid>http://example.org/2006/000062.html</guid>
      <description>
久しぶりに色々やってました。

&lt;h3&gt;mt3.33にアップグレード(今更)&lt;/h3&gt;
dbのアップグレードも無いので、特に苦労なし。

&lt;h3&gt;個人的な備忘録用にmtをインストール&lt;/h3&gt;
自宅鯖にインスコ。サクサク書ける様に、&lt;a href=&#34;http://hsj.jp/works/2005/10/01/texthatenamt.html&#34;&gt;Text::HatenaでMTプラグイン。 (ささやかなる実験場の開発室):&lt;/a&gt;を参考にはてな記法に対応してみる。
&lt;pre class=&#34;code&#34;&gt;my $entry = $ctx-&gt;stash(&#39;entry&#39;);&lt;/pre&gt;ココが上手く動かない。どうやら$ctxが渡されていないみたい。なぜぇ。
とりあえず、$ctxが空のときはpermalinkを指定しないことで回避。
これで記事の書きやすさが200%にアップした。約2倍書く計算。
まあ、はてな記法を使ったことは無いわけだが。

&lt;h3&gt;Firefoxについて色々調べた&lt;/h3&gt;
自宅ノートを2.0にあぷぐれど。
アドオンの仕様についてざっと調べる。

アドレスバーに「about:config」で設定編集が出来る。初めて知った。スゲー。
同様に「about:cache」なんてのも便利。

&lt;h3&gt;ブックマークを整理&lt;/h3&gt;
普段あまり使わないブックマークって、実際問題必要ないよね。
ということで、日常的に使わないものはブックマークツールバーからすべて退避。
そして、&lt;a href=&#34;https://addons.mozilla.org/firefox/3176/&#34;&gt;Favicon Picker&lt;/a&gt;を使って、日常的に使うものをアイコンのみの状態でツールバーに並べていく。ツールバーがすっきりしてかなり良い感じです。
FaviconPicker は気づいたらfirefox2.0に対応したようですが、こちらは未確認。

アイコンの画像はbookmarks.htmlに埋め込まれているので、そのまま他のクライアントに移植可能。
bookmarkはインポート・エキスポートで移動すると却って混乱するので、直接bookmarks.htmlを挿げ替える。firefoxが起動している状態だと上手く行かないので、終了させてからファイルを入れ替えること。

&lt;h3&gt;フィードを整理&lt;/h3&gt;
Bloglinesのフィードをフォルダに整理。

&lt;h3&gt;Plaggerではまる&lt;/h3&gt;
&lt;a href=&#34;http://blog.livedoor.jp/hakin/archives/50557684.html&#34;&gt;しげふみメモ:PlaggerでBloglinesのフォルダ別にGmailへ送る:&lt;/a&gt;
を参考に、Gmailでタグ付けできるようにPlaggerを弄る。ついでに欲が出て、はてぶのカウントを表示させようと、Plagger::Plugin::Filter::HatenaBookmarkUsersCountをインスコ始めて嵌る。いくつかのモジュールがインスコできない。関係なさそうなので放置してみた。まだ新着が無いので確認できていないが、駄目かもしれないよ。</description>
    </item>
    
    <item>
      <title>TagCloudPlus</title>
      <link>http://example.org/2006/000060.html</link>
      <pubDate>Sat, 29 Jul 2006 17:33:02 +0900</pubDate>
      
      <guid>http://example.org/2006/000060.html</guid>
      <description>使い方&lt;br /&gt;
・使いたいブログのテンプレート編集画面で「テンプレート・モジュール」を開く&lt;br /&gt;
・「モジュールを新規作成」をクリック&lt;br /&gt;
・テンプレート名に「Widget: タグ クラウド プラス」を入力(名前は何でも良いのですが、「Widget: 」の部分を変えると動きません)&lt;br /&gt;
・モジュールの内容に以下のコードを貼り付けて「保存」&lt;br /&gt;

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;!-- 
name: TagCloudPlus
author: Akira Sawada
version: 0.3
--&amp;gt;

&amp;lt;div class=&#34;module-tagcloud module&#34;&amp;gt;
    &amp;lt;h2 class=&#34;module-header&#34;&amp;gt;Tag cloud Plus&amp;lt;/h2&amp;gt;
    &amp;lt;div class=&#34;module-content&#34; id=&#34;tag_cloud_plus_info&#34;&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;module-content&#34;&amp;gt;
        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;sizeDown()&#34;&amp;gt; &amp;lt;&amp;lt; &amp;lt;/a&amp;gt;
        size : &amp;lt;span id=&#34;tag_cloud_plus_size_info&#34;&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;sizeUp()&#34;&amp;gt; &amp;gt;&amp;gt; &amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;

        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;sizeBaseDown()&#34;&amp;gt; &amp;lt;&amp;lt; &amp;lt;/a&amp;gt;
        basesize : &amp;lt;span id=&#34;tag_cloud_plus_size_base_info&#34;&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;sizeBaseUp()&#34;&amp;gt; &amp;gt;&amp;gt; &amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;

        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;colorDown()&#34;&amp;gt; &amp;lt;&amp;lt; &amp;lt;/a&amp;gt;
        color : &amp;lt;span id=&#34;tag_cloud_plus_color_info&#34;&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;a href=&#34;javascript:void(0)&#34; onclick=&#34;colorUp()&#34;&amp;gt; &amp;gt;&amp;gt; &amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;module-content&#34;&amp;gt;
        &amp;lt;ul class=&#34;module-list&#34; id=&#34;tag_cloud_plus_list&#34;&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;

var sizeWeight = 8;
var sizeBase = 12;
var colorWeight = 8;
var rankMax = 64;

var tcpTags =
[
&amp;lt;MTTags&amp;gt;
    {
        &#34;name&#34; : &#34;&amp;lt;$MTTagName$&amp;gt;&#34;,
        &#34;rank&#34; : &#34;&amp;lt;$MTTagRank max=&#34;64&#34;$&amp;gt;&#34;,
        &#34;link&#34; : &#34;&amp;lt;$MTTagSearchLink$&amp;gt;&#34;,
    },
&amp;lt;/MTTags&amp;gt;
];

function buildCloud(){
    document.getElementById(&#39;tag_cloud_plus_list&#39;).innerHTML = &#34;&#34;;
    for(var i in tcpTags){
        var tag = String();
        tag = &#39;&amp;lt;li class=&#34;module-list-item&#34; style=&#34; font-size : &#39;
            + rank2FontSize(tcpTags[i].rank) + &#39;;&#34;&amp;gt;&amp;lt;a href=&#34;&#39;
            + tcpTags[i].link + &#39;&#34; style=&#34; color : &#39;
            + rank2Color(tcpTags[i].rank) + &#39;;&#34;&amp;gt;&#39;
            + tcpTags[i].name + &#39;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\n&#39;; /*need this \n but i don&#39;t know why.*/
        document.getElementById(&#39;tag_cloud_plus_list&#39;).innerHTML += tag;

    }
    document.getElementById(&#39;tag_cloud_plus_size_info&#39;).innerHTML = sizeWeight;
    document.getElementById(&#39;tag_cloud_plus_size_base_info&#39;).innerHTML = sizeBase;
    document.getElementById(&#39;tag_cloud_plus_color_info&#39;).innerHTML = colorWeight;
}

function rank2Color(rank)
{
    var col = Math.round((rank - rankMax / 2) * colorWeight / 4 + 128);
    col = col &amp;gt; 255 ? 255 : col;
    col = col &amp;lt; 0 ? 0 : col;
    return &#39;rgb(&#39; + col + &#39;,&#39; + col + &#39;,&#39; + col + &#39;)&#39;;
}

function rank2FontSize(rank)
{
    return Math.round((1 - rank / rankMax ) * sizeWeight + sizeBase) + &#34;px&#34;;
}

function sizeUp()
{
    sizeWeight += 1;
    buildCloud();
}

function sizeDown()
{
    sizeWeight -= 1;
    buildCloud();
}
function sizeBaseUp()
{
    sizeBase += 1;
    buildCloud();
}

function sizeBaseDown()
{
    sizeBase -= 1;
    buildCloud();
}
function colorUp()
{
    colorWeight += 1;
    buildCloud();
}

function colorDown()
{
    colorWeight -= 1;
    buildCloud();
}

/*at first we must build tag cloud*/
buildCloud();

&amp;lt;/script&amp;gt;
&lt;/pre&gt;

IEでは動かないみたいなので、そのうち直します。</description>
    </item>
    
    <item>
      <title>StyleRepositoryToolKit</title>
      <link>http://example.org/2006/000058.html</link>
      <pubDate>Wed, 26 Jul 2006 00:34:40 +0900</pubDate>
      
      <guid>http://example.org/2006/000058.html</guid>
      <description>&lt;h3&gt;概要&lt;/h3&gt;
StyleRepositoryToolKitプラグインは、StyleCatcherのスタイルリポジトリの公開を簡便化することを目的としたMovableType用プラグインです。
このプラグインを使用することにより、サーバー上に設置されたスタイルリポジトリのスタイルの一覧や、スタイルの詳細な情報ページを、MovableTypeのテンプレートとして設計することが出来ます。

スタイルリポジトリの作成方法については、以下のsixapartサイトのページに説明があります。
&lt;a title=&#34;http://www.sixapart.jp/pronet/developers/movabletype/stylelib.html&#34; href=&#34;http://www.sixapart.jp/pronet/developers/movabletype/stylelib.html&#34;&gt;http://www.sixapart.jp/pronet/developers/movabletype/stylelib.html&lt;/a&gt;
&lt;h3&gt;コンテナタグ&lt;/h3&gt;
&lt;h4&gt;MTSrtkStyles&lt;/h4&gt;
指定されたディレクトリでcssファイルを検索して、見つかった数だけループするコンテナタグです。
&lt;ul&gt;&lt;li&gt;localpath&lt;br /&gt;リポジトリのサーバー内でのパスを指定します。
&lt;/li&gt;&lt;li&gt;webpath&lt;br /&gt;リポジトリが公開されるURLを指定します。
&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;変数タグ&lt;/h3&gt;
以下のタグは、コンテナタグ「MTSrtkStyles」の内部でのみ使用できます。
&lt;h4&gt;MTSrtkStyleURL&lt;/h4&gt;
cssファイルへのurlを表示します。
&lt;h4&gt;MTSrtkFileName&lt;/h4&gt;
cssのファイル名を表示します。
&lt;h4&gt;MTSrtkLinkTag&lt;/h4&gt;
リポジトリ作成用のlinkタグを表示します。
&lt;h4&gt;MTSrtkLargeImageURL&lt;/h4&gt;
サムネイル大へのurlを表示します。
&lt;h4&gt;MTSrtkSmallImageURL&lt;/h4&gt;
サムネイル小へのurlを表示します。
&lt;h4&gt;MTSrtkMetadata&lt;/h4&gt;
cssに埋め込まれたメタデータを表示します。
&lt;ul&gt;&lt;li&gt;name&lt;br /&gt;メタデータのキーを指定します。
&lt;/li&gt;&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mod_proxy</title>
      <link>http://example.org/2006/000056.html</link>
      <pubDate>Mon, 17 Jul 2006 11:31:28 +0900</pubDate>
      
      <guid>http://example.org/2006/000056.html</guid>
      <description>
&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274065979/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274065979.09._SCMZZZZZZZ_.jpg&#34; alt=&#34;ハッカーと画家 コンピュータ時代の創造者たち&#34; /&gt;&lt;/a&gt;友達に借りた本に、「簡単な道と難しい道があったら、難しいほうを選べ。」とか書いてあった。
といっても、茫漠とした人生論では無い。単純に技術系ベンチャーでの製品開発の心構えとして、競合に対してアドバンテージを得るために、習得が困難でもより強力な方法を(文中では「プログラム言語を」)選択しろ、ということだ。

最初の2章程は、なんだか、何故学校でオタクがいじめられるのかをひたすら弁解していて、嫌になったが、後半のテクニカルな話になると俄然面白くなってくる。コンピューター言語の歴史みたいなことに興味があって、Lispはどのような経緯で実装されたか、なんて話で興奮できる奇特な人にはお奨め。

現在、我が家のデスクトップ上ではApacheが2つ起動している。
windows上のapache1.3と、debianで動作しているapache2だ。(ちなみにdebianはVMWareで動いてます。)
都合上、コンテンツをまとめることは出来ないが、ルータ越しにはどちらかにしかアクセスを振り分けることが出来ない。
コレを回避するために色々考えてみた。
考えられる方法はふたつ。

・片方のポートを変更する
利点 : 設定が簡単。
欠点 : アドレスがかっこ悪くなる。

・内部proxy + mod_rewriteを使う。
利点 ; アドレスがスマートになる。
欠点 : 設定が難しそう。

ということで、本にコロッと影響されて、apacheを弄ることにした。
apache2のパッケージに全て入っていたので、再コンパイルも必要なし。
&lt;a href=&#34;http://www.sixapart.jp/movabletype/developers/naoya/archives/2004/10/apache_20_mod_p.html&#34;&gt;ココ&lt;/a&gt;などを参考にして、さくっと設定できました。

&lt;pre class=&#34;code&#34;&gt;
#a2enmod proxy
#a2enmod rewrite
&lt;/pre&gt;

で、/etc/apache2/mods-enabled/proxy.confを修正して、RewriteRuleを[P]オプションつきで指定すれば完了。

いやー、apacheって本当に良いものですね。</description>
    </item>
    
    <item>
      <title>ネット止められてました</title>
      <link>http://example.org/2006/000055.html</link>
      <pubDate>Sun, 16 Jul 2006 23:34:42 +0900</pubDate>
      
      <guid>http://example.org/2006/000055.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/2006/000054.html&#34;&gt;下のエントリー&lt;/a&gt;でtracを偉そうに公開したのも束の間、料金不払いで半日ほどネット止められてました。うほ。
IP変わっちゃったので、まだ繋がらない場合もあるかもしれません。
</description>
    </item>
    
    <item>
      <title>trac</title>
      <link>http://example.org/2006/000054.html</link>
      <pubDate>Sat, 15 Jul 2006 16:46:45 +0900</pubDate>
      
      <guid>http://example.org/2006/000054.html</guid>
      <description>
&lt;a href=&#34;http://trac.aklaswad.com/&#34;&gt;trac をインストールしてみた。&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>MTIfSearchIncludeBlogs 1.0</title>
      <link>http://example.org/2006/000053.html</link>
      <pubDate>Sat, 15 Jul 2006 14:30:46 +0900</pubDate>
      
      <guid>http://example.org/2006/000053.html</guid>
      <description>
Movable Type で検索を行う場合に、あるブログが検索対象となっているかで処理を変更する条件タグ「MTIｆSearchIncludeBlogs」を追加するpluginです。

&lt;a href=&#34;http://blog.aklaswad.com/files/MTIfSearchIncludeBlogs.zip&#34;&gt;MTIfSearchIncludeBlogs.zip&lt;/a&gt;

考えられる主な使い方は以下の二つ。
・複数ブログの検索フォームで、値を引き継ぐ
・特定のブログでの検索をされたくないときに、ごっそりテンプレートを切り替える。

使い方はこんな感じ。

&lt;pre class=&#34;code&#34;&gt;
&amp;lt;MTIfSearchIncludeBlogs value=&#34;1&#34;&amp;gt;
  hogehoge
&amp;lt;/MTIfSearchIncludeBlogs&amp;gt;
&lt;/pre&gt;

アトリビュート:valueに判定したいブログのIDを入れる。複数のブログIDをカンマ区切りで指定できる。

追記 16,jul 06: 最新版はこの辺から。
&lt;a href=&#34;http://trac.aklaswad.com/trac.cgi/file/mtplugins/MTIfSearchIncludeBlogs.pl&#34;&gt;http://trac.aklaswad.com/trac.cgi/file/mtplugins/MTIfSearchIncludeBlogs.pl&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Vista beta2 &#43; word 2007 beta からテスト</title>
      <link>http://example.org/2006/000052.html</link>
      <pubDate>Sat, 17 Jun 2006 15:19:58 +0900</pubDate>
      
      <guid>http://example.org/2006/000052.html</guid>
      <description>
&lt;p&gt;Test
&lt;/p&gt;&lt;p&gt;なぜword はこんなに重いのですか&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>どうにも困難が多いvista</title>
      <link>http://example.org/2006/000051.html</link>
      <pubDate>Sun, 11 Jun 2006 22:42:32 +0900</pubDate>
      
      <guid>http://example.org/2006/000051.html</guid>
      <description>
インストールまでは、えらい苦労しました。

まず、ベータに応募してプロダクトキーを貰うためにmicrosoftのサイトに諸事項を記入してメールを受け取る必要があるのだが、なぜかメールが届かない。
(これは、メールサーバ側でのスパムフィルタに引っかかっていたことが原因だと思われる。)

次に、ダウンロード自体、うまく始まらず、「今ビジーなのごめんね」とのページに飛ばされまくり、日本語版がどうしてもダウンロードできない。

仕方なしに英語32bit版を落とし始めた。
ハードディスクの奥から、ほとんど使ったことのないダウンロードツールを引っ張り出して使ってみたのだが、S氏の予言どおり、見事に失敗していた。一日放置して落ちていたのは、件の「今ビジーなのごめんね」ページであった。

次に、microsoft推奨のダウンロードツール「akamai」を使用して落とすことにした。
(これもインターネットオプションの設定を弄らないと動かなかった。)
そしてやっと英語32bit版のisoを入手。dvdに焼いて早速インストール。失敗。パリーン。なぜぇ？
インストール途中でエラーが発生して、だめでした。

&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757717660/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757717660.09._SCMZZZZZZZ_.jpg&#34; border=&#34;0&#34; alt=&#34;ゲイツちゃん&#34; /&gt;&lt;/a&gt;ダウンロードかdvdのライティングかでファイルが破損したかハードとの相性なのか、何が悪かったのかは結局わからないが、たぶん俺のラブゲイツが足りなかったのだろうと思い、しばしamazonで桜玉吉「ゲイツちゃん」について検索したりする。

増幅されたラブゲイツのおかげか、その後2chで「日本語版が落とせない場合は、キャッシュを削除するといいお」との情報を得て、日本語64bit版を入手。終にvistaのインストールに成功する。i got it!

しばしその美しいguiと戯れた後、IISをインストールしてMTのベータを動かして「ゲイツ様の最新OSで表示がおかしいとはどういうことでしか!!!」などとsixapartにいちゃもんをつけてやろうと思い立ち、まずはperlでも入れようとActiveStateのサイトに行ってみると、こっちでもダウンロードサーバが落ちてやがる。
これは何の嫌がらせですか?</description>
    </item>
    
    <item>
      <title>windows vista beta2</title>
      <link>http://example.org/2006/000050.html</link>
      <pubDate>Sun, 11 Jun 2006 22:36:30 +0900</pubDate>
      
      <guid>http://example.org/2006/000050.html</guid>
      <description>
windows vista beta2 をインストールしてみた。見た目がきれい。それだけで満足ですよ。ええ。
私は CUI でゴリゴリハックするような人にはなれません。

</description>
    </item>
    
    <item>
      <title>MT-3.3-b1</title>
      <link>http://example.org/2006/000049.html</link>
      <pubDate>Sat, 03 Jun 2006 18:37:48 +0900</pubDate>
      
      <guid>http://example.org/2006/000049.html</guid>
      <description>
&lt;a href=&#34;http://www.sixapart.jp/movabletype/news/2006/06/02-1830.html&#34;&gt;ベータが出ていた&lt;/a&gt;ので、取り敢えずアップグレードしてみる。
デザインも問題なく移行できたが、動作を見てみたかったのでデフォルトに戻す。

タギング機能が追加されたのが、目玉かな。
過去のエントリー数も少なめだったので、一通りタグ付けしてみる。
すでに全てのエントリーがカテゴリーに分けられているので、
エントリー一覧からカテゴリーごとにフィルタリングしてビシバシとタグをつけていく。
なかなか便利。
「&lt;a href=&#34;http://www.sixapart.jp/movabletype/news/2006/05/29-1830.html&#34;&gt;Movable Typeの新しいバージョンについて&lt;/a&gt;」では、タグクラウドも実現できるように書いてあったので、システムテンプレート中の「検索結果のテンプレート」にあったタギング関係のタグを参考に適当にサイドバーにでっち上げてみる。ぐちゃぐちゃだ。
うまく調整する方法も用意されているかもしれないが、ドキュメントはまだ出ていないようなので、よく分からん。

&lt;blockquote&gt;

&amp;lt;MTTags&amp;gt;&amp;lt;font size=&#34;&amp;lt;$MTTagCount$&amp;gt;&#34;&amp;gt;&amp;lt;a href=&#34;&amp;lt;$MTTagSearchLink$&amp;gt;&#34;&amp;gt;&amp;lt;$MTTagName&amp;gt; &amp;lt;/a&amp;gt;&amp;lt;/font&amp;gt;, &amp;lt;/MTTags&amp;gt;

&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>from feedpath</title>
      <link>http://example.org/2006/000048.html</link>
      <pubDate>Tue, 23 May 2006 18:08:00 +0900</pubDate>
      
      <guid>http://example.org/2006/000048.html</guid>
      <description>なかなか良くできている感じ。&lt;br&gt;</description>
    </item>
    
    <item>
      <title>perlオブジェクト、リファレンス、モジュール</title>
      <link>http://example.org/2006/000047.html</link>
      <pubDate>Sun, 21 May 2006 01:15:30 +0900</pubDate>
      
      <guid>http://example.org/2006/000047.html</guid>
      <description>
東京医科歯科大の患者さんに付き合ってもらって、昨日買った、この本。
評判通りの良書なのですが。ひとつ。

&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873111676/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873111676.09.TZZZZZZZ.jpg&#34; alt=&#34;続・初めてのPerl - Perlオブジェクト、リファレンス、モジュール&#34;  /&gt;&lt;/a&gt;あちこちで言われていたような気もするのですが。
「@ISA」というキーワードがperlにはあるそうで。
あるファイルの識別子は、別の識別子と等価の関係

「A is a B」

である、という意味の命名なのですが。
このテクストの中では一貫して、(ある種類の動物)は、動物だ、という文脈を例文として当てはめているのですよ。
例えばこんな感じ。

(the dog) is a (Animal)

ボインの前はanになるんじゃなかったのか、と、著者と、中学校の英語教師に問い詰めたいです。</description>
    </item>
    
    <item>
      <title>大掃除作戦:その後</title>
      <link>http://example.org/2006/000046.html</link>
      <pubDate>Sat, 20 May 2006 10:05:47 +0900</pubDate>
      
      <guid>http://example.org/2006/000046.html</guid>
      <description>
あの壮絶な戦いから2週間が経った。
この一週間、毎朝ごみだめのような混沌とした部屋で目を覚ます自分がいる。
何故だ。</description>
    </item>
    
    <item>
      <title>ベーシック認証 on windows apache</title>
      <link>http://example.org/2006/000044.html</link>
      <pubDate>Sat, 20 May 2006 09:50:34 +0900</pubDate>
      
      <guid>http://example.org/2006/000044.html</guid>
      <description>
ウチのwin機のウェブサーバに、.htaccessファイルを置いてベーシック認証をかけようとしたのだが、何故か上手くいかない。色々調べた結果、以下のことについて分かった。

・パスにスペースが含まれる場合などの必要な場合、apacheのdirectiveではダブルクォートで文字列をまとめることが出来る。基本的なことだが、ふと上手くいかなかったときに不安になるのでメモ。

・windows版のapacheでは、AuthUserFileで指定したファイルに含まれるパスワードの暗号化にはcrypt()ではなく、MD5を使用する。

・MD5のルーチンは用意する必要は無い。認証ファイル作成用プログラムがapacheのパッケージに含まれている。apacheのインストールディレクトリ/bin/htpasswd.exeをコマンドラインから起動する。</description>
    </item>
    
    <item>
      <title>perl学習のtimeline</title>
      <link>http://example.org/2006/000043.html</link>
      <pubDate>Tue, 16 May 2006 23:41:45 +0900</pubDate>
      
      <guid>http://example.org/2006/000043.html</guid>
      <description>
今、漸く一冊目が読み終わったところ。先は長い。金が持たない。オライリーばっかし。
&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873111269/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873111269.09.TZZZZZZZ.jpg&#34; alt=&#34;初めてのPerl&#34;  /&gt;&lt;/a&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873111676/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873111676.09.TZZZZZZZ.jpg&#34; alt=&#34;続・初めてのPerl - Perlオブジェクト、リファレンス、モジュール&#34;  /&gt;&lt;/a&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873110963/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873110963.09.TZZZZZZZ.jpg&#34; alt=&#34;プログラミングPerl〈VOLUME1〉&#34;  /&gt;&lt;/a&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873110971/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873110971.09.TZZZZZZZ.jpg&#34; alt=&#34;プログラミングPerl〈VOLUME2〉&#34;  /&gt;&lt;/a&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873112028/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873112028.09.TZZZZZZZ.jpg&#34; alt=&#34;Perlクックブック〈VOLUME1〉&#34;  /&gt;&lt;/a&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873112036/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/4873112036.09.TZZZZZZZ.jpg&#34; alt=&#34;Perlクックブック〈VOLUME2〉&#34;  /&gt;&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>大掃除作戦:三日目</title>
      <link>http://example.org/2006/000042.html</link>
      <pubDate>Thu, 04 May 2006 15:00:44 +0900</pubDate>
      
      <guid>http://example.org/2006/000042.html</guid>
      <description>
だいぶ飽きてきた。
冬物の服を片付けたり布団を干したりした。</description>
    </item>
    
    <item>
      <title>大掃除作戦:二日目</title>
      <link>http://example.org/2006/000041.html</link>
      <pubDate>Wed, 03 May 2006 08:19:41 +0900</pubDate>
      
      <guid>http://example.org/2006/000041.html</guid>
      <description>
PC周辺が攻略目標としての最低ライン。
しかしなんとも寒々しい天気で、やる気出ず。身体痛いし。

それでも何とか前に進まねばならぬので、取り敢えずPCを落とす。
ゴチャゴチャのケーブル類を解きほぐすだけで小一時間かかる。
全て解体し、ようやく床が露出したところで丁寧に拭き掃除をする。
幸い、変な生き物の化石などは出土せず、胸を撫で下ろす。
その勢いで床を全て雑巾がけする。ワックスかけた方がベターだったか？

その後、PCバラしたままだと邪魔なので、取り敢えず動くようにする。
そのまま数時間掃除に戻れず、日が暮れる。
当初の予想通り、二日目はこうして、進捗芳しくないままに終了した。

今日は和室を掃除。天気もいいし、はかどるに違いない。はかどると良いな。</description>
    </item>
    
    <item>
      <title>大掃除作戦:初日</title>
      <link>http://example.org/2006/000040.html</link>
      <pubDate>Tue, 02 May 2006 08:12:33 +0900</pubDate>
      
      <guid>http://example.org/2006/000040.html</guid>
      <description>
ゴールデンウィークです。只今、なんと、九連休の真っ只中です。
こんなまとまった休みは三年振りなのです。
で、何をするかというと、昨日から気合を入れて大掃除をしています。

初夏を思わせる好天なので、窓を全部開けると大変気持ちイイ。
ドイツ生まれの激落ち君を大量に買ってきて、
昨日はキッチン周りから一大清掃作戦を開始しました。
てっきり黒だと思っていた換気扇ケースが実は白だったり、
コンロから三年ものの魚の干物が出現したりと、
波乱万丈の一日でした。

今日はデスクトップ周辺を攻撃予定なのですが、今日は天気は悪いし、
実は、掃除ごときで全身筋肉痛になって動けません。
作戦は失敗に終わるかも知れません。</description>
    </item>
    
    <item>
      <title>外側から作っていこう</title>
      <link>http://example.org/2006/000039.html</link>
      <pubDate>Mon, 01 May 2006 18:14:54 +0900</pubDate>
      
      <guid>http://example.org/2006/000039.html</guid>
      <description>
&lt;a href=&#34;http://blog.aklaswad.com/img/web_access_iTunes_capture_01.png&#34;&gt;&lt;img alt=&#34;web_access_iTunes_capture_01.png&#34; src=&#34;http://blog.aklaswad.com/img/web_access_iTunes_capture_01-thumb.png&#34; width=&#34;256&#34; height=&#34;140&#34; /&gt;&lt;/a&gt;サーバーマシンで動いているiTunesを、外部からリモート操作しようという試みについて。とりあえず動いてはいるので、また、非常に限定された用途しかないから、としばらく放置していましたが、HTMLやJavaScriptの練習に良いかな、と思い直し、この二週間ほど見た目を中心にこつこつと作っております。
JavaScriptに取り組むのはほぼ初めてです。仕様がいまいち統一されておらず、色々となんだかメンドクサイですが、簡単に動きのあるものが作れて、楽しくもあります。
将来的にはXMLRPCなぞ受け入れるようにして、目指せAjaxってか。
(関係ないですが、Ajaxはアヤックスと読みたいなあ。エイジャックスなんて田舎風の読み方は、俺の身体に流れるオランダ人の血が許しません(流れてないけど)(オランダだって田舎か)。)

まだ公開できる段階ではないので、とりあえずスクリーンショットだけ。WebからiTunesにAccessできるということで、Web Access iTunes、略してWAiTってか。
Playlistを取得〜曲を選んで再生〜イントロを飛ばして〜ボリューム絞って〜といった基本部分は動きます。検索はまだ動きません。プレイリストの作成や編集などは、実装するかわかりません。

技術的にいま行き詰っているのは、ライブラリ全体のような、膨大な量のリストをどう処理するか、という点。
一気に転送するのはまず無理。nページ中mページ目、なんて感じに細切れにして送るしかないのだが、そうするとややこしくなってくるのが、クライアントごとの検索、ソートの結果。これらをどこかに保持しておく必要がある気がするのだが。
・サーバー側で保持する。その場合、セッション管理などして上手くやる必要があるかも。
・その都度検索する。検索は良いとしても、ソートはオリジナルの並び順を維持したまま、複雑なソートを実施というのは難しそうだ。
・とりあえず複数のクライアントがアクセスする可能性は忘れて、サーバー側のデータを直接弄ってしまう。
・そもそもソートのやり方がわからない。

うーん。先は長い。</description>
    </item>
    
    <item>
      <title>viva oolong 3</title>
      <link>http://example.org/2006/000038.html</link>
      <pubDate>Tue, 25 Apr 2006 12:30:34 +0900</pubDate>
      
      <guid>http://example.org/2006/000038.html</guid>
      <description>
Kさんにいただいたポイントで、一曲ゲットしました〜。
ありがとうございます。

現在のソングコード獲得率 4/24

全体的に 1/6 位で安定しているのだろうか。
応募数の時期的な増減にも呼応して変動していくとは思うが。

で、iPodはいつあたるのだろうか。</description>
    </item>
    
    <item>
      <title>viva oolong 2</title>
      <link>http://example.org/2006/000037.html</link>
      <pubDate>Mon, 24 Apr 2006 08:49:14 +0900</pubDate>
      
      <guid>http://example.org/2006/000037.html</guid>
      <description>
朝のほうが当たりやすいかも、と思い2枚投下。
iPodは外れたが、ソングコードx2をゲット。
烏龍茶はスーパー信濃屋で118円で購入しているので、素で儲かっているかも。

現在ソングコード獲得率 : 3/18
</description>
    </item>
    
    <item>
      <title>viva oolong</title>
      <link>http://example.org/2006/000036.html</link>
      <pubDate>Wed, 19 Apr 2006 01:00:12 +0900</pubDate>
      
      <guid>http://example.org/2006/000036.html</guid>
      <description>
サントリーの烏龍茶でiPodが当たるキャンペーンをご存知でしょうか?
毎年毎年、なんだか一年の半分くらいはやっているのではないかという気もする長寿キャンペーンです。
iPod miniがブレークしていた一昨年、狙いましたよ。
記憶が曖昧ですが、十六枚一口の抽選を八回やった記憶があります。
これまた記憶が曖昧ですが、iPodが当たった事はないような気がします。
ちなみにいくら烏龍茶に使ったかというと、仮に一本150円として、16*8*・・・
おっと、電卓は故障したみたいです。

で、去年は心が折れたままだったので手を出さなかったのですが、
今年は再びチャレンジしています。
で、ようやく今日10枚たまって、チャレンジしました。
そしたらなんと！
大当選しました！

はい、iTunes Music Storeのギフト券(一曲分)ですが。
150円相当ですが、結構うれしいですね。いや本当に。

今まで興味がなかったので殆ど見たことがなかったiTMSですが、早速アクセス。
最初はクレジットカードが無いと使えないのかよ、と思いましたが、
いろいろ試した結果、メインページ左の「コードを使う」からアカウントを作成すると
カード情報なしのアカウントを作成することに成功しました。

&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B000063CLO/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images-jp.amazon.com/images/P/B000063CLO.09.TZZZZZZZ.jpg&#34; alt=&#34;Futebol: Sound of Brazilian Football&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;貧乏性なので、お高いビデオクリップを買おうとしましたが買えず。
結局、「Perdão, Não Tem - Elis Regina &amp; Pele - Música de Futebol」という奴をダウンロードしてみました。
ブラジルのサッカー関係のオムニバスのような気がします。多分ペレは本当にペレでしょう。
途中、なにやらElis Reginaと会話しています。何をお話しているのでしょうね。</description>
    </item>
    
    <item>
      <title>角膜炎</title>
      <link>http://example.org/2006/000035.html</link>
      <pubDate>Thu, 13 Apr 2006 23:17:31 +0900</pubDate>
      
      <guid>http://example.org/2006/000035.html</guid>
      <description>
事の起こりは月曜日。右目がショボショボする。
コンタクトを入れていれば、体調によっては一時的に違和感を感じたりすることもある。
しかしそれは、まったく治まる気配を見せず、痛みというべきモノへ変化していった。
耐え切れずにお手洗いで確認してみると、コンタクトの円を正確にトレースする形で充血していた。
アヒィー。こんなスゴイの初めて。
即時にコンタクトの破棄を決断。この時点では、寝れば治ると思っている。

仕事帰り、暗い道をしばらく歩いて後、家の前のバス通りに出る。
スーパーの明かりがいやに眩しい。ていうか痛い。なんだこれ。
この時点でかなりやばいことに気づく。
モニターに向かっても痛い。
飲めば治る理論に従い、ビール飲んで寝る。

火曜日。起きた瞬間に異変に気づく。右目が開かない。
目ヤニ、だ。
昨夜の段階で、いくらか症状について調べておいたので、それほど慌てなかったが、とにかく大量の変な汁が寝てる間に出たらしい。
そして、光が当たるだけで激痛がする。
加えて、激しい異物感がして涙がとまらない。
仕事を休んで医者に行くことにする。

近代医療というものは凄まじいもので、麻酔の目薬を注した瞬間に、痛みの6割が消える。
もらった目薬を注して、痛み止めを飲んだら、3〜4時間で日常生活に復帰できるようになった。
近代医療に感謝。

ところでその眼科。ドクターも含めて、看護士が全員(それなりに)若い女性だった。なぜ？
その謎を解明するため、今日も半休をとって診察を受けに通ったのでした。</description>
    </item>
    
    <item>
      <title>バカの壁</title>
      <link>http://example.org/2006/000034.html</link>
      <pubDate>Mon, 10 Apr 2006 00:23:15 +0900</pubDate>
      
      <guid>http://example.org/2006/000034.html</guid>
      <description>
昨日からバイトを始めた。
以前バイトしていたお店が人手不足で、ちょっと手を貸してほしいとの事。
久しぶりの立ち仕事で足が痛い。この上ないほどなまってます。
その上、久しぶりに会う人全員に腹が出たと言われた。アリヤバイ。

今日は朝起きたらちょっと宿酔。
理由は明白だ。昨日バイト先の店長と二時まで飲んでいたからだ。
店長は朝八時三分から店に出ていたらしい。タフだ。
三分は遅刻なのは秘密らしい。

&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106100037/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4106100037.09._SCMZZZZZZZ_.jpg&#34; alt=&#34;バカの壁&#34; /&gt;&lt;/a&gt;で、朝起きて動く気になれなかったので、何故か部屋に転がっていた「バカの壁」を読む。養老孟司は以前(学生の時分だったか)「唯脳論」が難しすぎて通読できなかったので苦手な気がしていたのだが、平易な文、というか話し言葉で書かれていて、二時間ほどで読めた。
 
様々な話題を挙げつつ、脳の機能を縦糸にして、現代日本の問題点を個々の意識の変化および教育という観点から説明している。
全体的にちょっと説教臭いが、言っていることはとてもまともに感じたし、内容自体面白かった。
しかしそれ以上に文体が面白かった。
この本は、この本のために養老孟司が一人語りをし、その録音テープを編集部が文に書き起こしたものらしく、そのせいか語尾がずいぶん揺れているのだ。自分の書く文章も語尾はたいがい滅茶苦茶だか、この本の中での揺れは、連続した語りの中での語り手のテンションの変化が現れているように思われて興味深かった。
 
この本かなり売れたんでしたっけ。
そもそも買った覚えも無いのに何故部屋に転がっていたのかが謎だ。弟の置き土産かな</description>
    </item>
    
    <item>
      <title>第206回</title>
      <link>http://example.org/2006/000033.html</link>
      <pubDate>Sat, 08 Apr 2006 11:55:40 +0900</pubDate>
      
      <guid>http://example.org/2006/000033.html</guid>
      <description>▼第206回mini toto B組 \800
01 甲　府 — 新　潟 [10-] 
02 清　水 — 大　分 [10-] 
03 福　岡 — 浦　和 [--2] 
04 湘　南 — 山　形 [10-] 
05 草　津 — 仙　台 [--2] 

ここまでの戦績
購入5回
投資総額3300円
的中?回</description>
    </item>
    
    <item>
      <title>更新ping</title>
      <link>http://example.org/2006/000032.html</link>
      <pubDate>Wed, 05 Apr 2006 23:18:25 +0900</pubDate>
      
      <guid>http://example.org/2006/000032.html</guid>
      <description>
とりあえずモノは試しで、更新pingを設定してみた。
technoratiというところに更新情報が飛ぶらしい。</description>
    </item>
    
    <item>
      <title>颯爽と</title>
      <link>http://example.org/2006/000028.html</link>
      <pubDate>Sun, 02 Apr 2006 19:33:57 +0900</pubDate>
      
      <guid>http://example.org/2006/000028.html</guid>
      <description>
神宮で六甲おろし歌って来ました。むひょおー。

私は親父から伝承された由緒正しい、コアではない阪神ファンです。
これまでも幾度か神宮に足を運んだことはありますが、
実は一度も勝ち試合を観たことがありませんでした。

ですが今日は勝ちましたよ。勝ってくれましたよ。
六甲颪の大合唱がとても心地よかったです。</description>
    </item>
    
    <item>
      <title>amazonアソシエイタ</title>
      <link>http://example.org/2006/000027.html</link>
      <pubDate>Sun, 26 Mar 2006 10:41:07 +0900</pubDate>
      
      <guid>http://example.org/2006/000027.html</guid>
      <description>
&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873111269/blogaklaswadc-22/ref=nosim/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873111269.09._SCMZZZZZZZ_.jpg&#34; alt=&#34;初めてのPerl&#34;  /&gt;&lt;/a&gt;
物は試しで、Amazonアソシエイトプログラムに参加してみました。
これで今日から俺はアフィリエイターというわけです。

Perlの勉強について、ネット上のリソースに限界を感じて、「リャマ本」を買って勉強してます。ちょっと扱う範囲が狭くて、物足りない気もしますが、読んでいて面白いのでよかった。海外のこの手の本って本当に面白いなー。</description>
    </item>
    
    <item>
      <title>カテゴリー別に文字色を変えてみる</title>
      <link>http://example.org/2006/000025.html</link>
      <pubDate>Sun, 26 Mar 2006 00:33:26 +0900</pubDate>
      
      <guid>http://example.org/2006/000025.html</guid>
      <description>下のようなものを「スタイルシート」テンプレートに貼り付ける。

&lt;blockquote&gt;

&amp;lt;MTTopLevelCategories&amp;gt;
&amp;lt;MTIfNonEmpty&amp;nbsp;tag=&#34;CategoryDescription&#34;&amp;gt;
.&amp;lt;$MTCategoryLabel&amp;nbsp;dirify=&#34;1&#34;&amp;gt;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;color:&amp;nbsp;&amp;lt;$MTCategoryDescription$&amp;gt;;
}
&amp;lt;/MTIfNonEmpty&amp;gt;
&amp;lt;/MTTopLevelCategories&amp;gt;

&lt;/blockquote&gt;

管理画面から各カテゴリーの「カテゴリーの説明」に以下のように色を指定する。

&lt;blockquote&gt;#ff0077&lt;/blockquote&gt;

そして、色を変更したい箇所の適当なdivタグか何かに、以下のようにclass指定を追加してやる。

&lt;blockquote&gt;&amp;lt;div&amp;nbsp;class=&#34;hogehoge&amp;nbsp;&amp;lt;MTTopLevelParent&amp;gt;&amp;lt;$MTCategoryLabel　dirify=&#34;1&#34;$&amp;gt;&amp;lt;/MTTopLevelParent&amp;gt;&#34;&amp;gt;&lt;/blockquote&gt;

いかがでしょうか。</description>
    </item>
    
    <item>
      <title>第202回</title>
      <link>http://example.org/2006/000024.html</link>
      <pubDate>Fri, 24 Mar 2006 14:17:21 +0900</pubDate>
      
      <guid>http://example.org/2006/000024.html</guid>
      <description>mini toto-A組第202回　\900
大宮　　清水　　[102]
Ｃ大阪　新潟　　[1--]
広島　　Ｇ大阪　[102]
横浜M　浦和　　[--2]
甲府　　福岡　　[1--]

ここまでの戦績
購入4回
投資総額2500円
的中0回</description>
    </item>
    
    <item>
      <title>第201回</title>
      <link>http://example.org/2006/000023.html</link>
      <pubDate>Fri, 24 Mar 2006 08:20:15 +0900</pubDate>
      
      <guid>http://example.org/2006/000023.html</guid>
      <description>▼201回mini toto B組 \600
01 福　岡 —名古屋 [10-]
02 浦　和 — C大阪 [1--]
03 清　水 — 千　葉 [1--]
04 草　津 — 徳　島 [--2]
05 横浜C — 山　形 [102]

ここまでの戦績
購入3回
投資総額1600円
的中0回</description>
    </item>
    
    <item>
      <title>第200回</title>
      <link>http://example.org/2006/000022.html</link>
      <pubDate>Tue, 21 Mar 2006 10:18:55 +0900</pubDate>
      
      <guid>http://example.org/2006/000022.html</guid>
      <description>
今年は全部買うなど言った直後に買いそびれてしまいました。
はあー。

とりあえず201回を買ってきました。
▼201回mini toto B組 \600 
01 福　岡 —名古屋 [10-] 
02 浦　和 — C大阪 [1--] 
03 清　水 — 千　葉 [1--] 
04 草　津 — 徳　島 [--2] 
05 横浜C — 山　形 [102] </description>
    </item>
    
    <item>
      <title>状況確認が必要だ。</title>
      <link>http://example.org/2006/000021.html</link>
      <pubDate>Sun, 19 Mar 2006 10:53:57 +0900</pubDate>
      
      <guid>http://example.org/2006/000021.html</guid>
      <description>
iTunesのCOMインターフェイスについて、現在までに分かっている事。

・呼び出したユーザーのライブラリを使用する
考えてみれば当たり前のことですが。
CGIを実行しているユーザーがSYSTEMならば、SYSTEMのライブラリーを読みに行き、それが無ければ作成します。なんだってー。

・多重起動が出来ない
詳しく実験していないので断言できませんが、ユーザーの別を問わず、多重起動はできないようです。
これもアプリケーションとしての性質上仕方ないことかもしれません。

また、explorerから起動した場合とCGIから起動した場合では、別扱いとなるようで、現在のところ両立できません。つまり、CGIから起動した「iTunes.exe」が実行中の場合、explorerから起動が出来ません。
逆も同様。
それぞれ、起動した後にタスクマネージャから見ると同じユーザーで動作しているように見えるのですが、なぜだろうか。
また、CGIから起動した場合GUIが見えません。以前は見えていたような気もするが。はて。

・GetActiveObjectではオブジェクトを取得できない
謎。

windowsのユーザ管理に関する問題になるんですかねー。俺のLOVEGATESが足りないのか。
今度そっち方面の文献でも当たってみよう。

現在の所、当初の目的であるリモート操作は(かなりの問題点を残しつつも)動いているので、続かないかもしれません。</description>
    </item>
    
    <item>
      <title>謎はちょっと解けた。</title>
      <link>http://example.org/2006/000020.html</link>
      <pubDate>Wed, 15 Mar 2006 22:53:37 +0900</pubDate>
      
      <guid>http://example.org/2006/000020.html</guid>
      <description>なにやら&lt;a href=&#34;http://developer.apple.com/sdk/itunescomsdk.html&#34;&gt;iTunesのsdk&lt;/a&gt;とやらが出ているらしいので、落としてきて弄ってみる。
sdkに従ってcでコードを書き、comを叩いてみる。成功。
折角ネットワーク越しに弄るのだからと、perlをインストールして(この時までperlを触ったことは無かったと思う)、comを叩いてみる。成功!
いよいよ、ネットワーク越しに操作するため、apacheをインストール。
割と簡単にwebサーバーが起動し、cgiも動くようになる。
それではcgiでiTunesをコントロールッッッ。。。失敗。ナゼぇ？

どうやらcomオブジェクトの作成の段階でレスポンスが無い。
で、google先生に聞いてみると、同じ問題にぶつかっている人がいる。

&lt;a href=&#34;http://blog.bulknews.net/mt/archives/001391.html&#34;&gt;blog.bulknews.net :: AirTunes リモコン&lt;/a&gt;

しかし、ここでも結局問題は解決せず。
（ちなみにこの時は、bulknewsの中の人が何者なのか知る由も無く、「なんだ野良ハッカーめ途中で投げ出しやがってこの腑抜けが」などと思ってました。・・・おそろしい。)

で、結局max/mspのexternalで実装してnetsendでコントロールしたりしてました。非常に面倒くさくしかも不安定で、殆ど使い物になりませんでしたが。

ここまでが、去年の秋ごろの話。
そして今日、突然動いてしまったんですよ。
XPPersonal + ActivePerl + Apache1.3 + iTunes6 で。

どうやらiTunes Helperという常駐ソフトが邪魔をしていたらしく、こいつを停止してからcom経由でiTunesを起動してやると上手くいきました。
詳しい追試などはまだ行っておりませんし、十分な環境を用意することも出来ないので断言は出来ませんが、同じ事で困っている人がいたらお試しください。

#20060316追記
#結構色々問題がありそうなので、手を出さないほうが良いです。
#私現在iTunes起動しません。んがー。</description>
    </item>
    
    <item>
      <title>風邪引いたっす</title>
      <link>http://example.org/2006/000019.html</link>
      <pubDate>Wed, 15 Mar 2006 22:08:46 +0900</pubDate>
      
      <guid>http://example.org/2006/000019.html</guid>
      <description>
三日も仕事を休んでしまいました。

自分は小さい頃から風邪を引くことは多いのですが、たいていはノドと鼻に来て、熱は出ないんですよ。
もともと体温低いので、平熱プラス1度で36度2分とか。
でも、それで(学校/仕事)を休むとなると、結構聞かれるんですよね。「熱は?」って。
小学生の頃などは、休むときに提出しなくてはいけない問診表のようなものがあって、そのトップ項目で偉そうに「体温」とか書かされて、母に1,2度誤魔化して書いてもらっていた記憶があります。
明らかに外を歩ける状態ではないので、素直に答えればいいのですが、なんだか気まずいんですよ。熱は無い、と答えるのが。
ズル休みと疑われるのが怖かったのでしょうか。
数字に表れる成果(?)が無いからでしょうか。

話を今回の風邪に戻すと、久しぶりにうなされるくらい熱が出ました。
寝てても怖い夢を見ます。今回見た夢は…ええ、そうです。
風邪を引いたのに熱が出ない夢でした。
汗びっしょりで目が覚めました。
あわてて測りなおした結果は8度6分。なんだか嬉しかったです。</description>
    </item>
    
    <item>
      <title>第199回</title>
      <link>http://example.org/2006/000018.html</link>
      <pubDate>Sat, 11 Mar 2006 20:56:41 +0900</pubDate>
      
      <guid>http://example.org/2006/000018.html</guid>
      <description>▼199回mini toto B組 \600
01 浦　和 — 磐　田 [1--] 
02 千　葉 — 甲　府 [1--] 
03 大　分 — 広　島 [10-] 
04 C大阪 — G大阪 [102] 
05 札　幌 — 水　戸 [1--]

たけしごめん。
2回続けて、初日で玉砕です。
おかしいなー、フルのtoto買ってたときのほうが、もっと中っていた気がする。。。

ここまでの戦績
購入2回
総額1000円
的中0回 </description>
    </item>
    
    <item>
      <title>第198回</title>
      <link>http://example.org/2006/000016.html</link>
      <pubDate>Sat, 04 Mar 2006 23:36:22 +0900</pubDate>
      
      <guid>http://example.org/2006/000016.html</guid>
      <description>▼198回mini toto A組　　　\400 
01 G大阪 — 浦　和 [--2] 
02 F.東京 — 大　分 [1--]　　　 
03 磐　田 — 福　岡 [1--] 　 
04 川　崎 — 新　潟 [10-] 
05 愛　媛 — 横浜C [10-] 

本日一試合だけ行われた J1 開幕戦。早くもアウトです。
お疲れ様でした。</description>
    </item>
    
    <item>
      <title>MTCalc0.8</title>
      <link>http://example.org/2006/000014.html</link>
      <pubDate>Wed, 01 Mar 2006 01:45:07 +0900</pubDate>
      
      <guid>http://example.org/2006/000014.html</guid>
      <description>ちなみに上記リンクのページのテンプレートはこんな感じ
&lt;blockquote&gt;&amp;lt;$MTSetVar&amp;nbsp;name=&#34;cnt&#34;&amp;nbsp;value=&#34;0&#34;$&amp;gt;
&amp;lt;MTEntries&amp;nbsp;lastn=&#34;100&#34;&amp;nbsp;sort_order=&#34;ascend&#34;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;a&amp;nbsp;style=&#34;padding-left:&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;$MTCalc&amp;nbsp;expr=&#34;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int(50&amp;nbsp;*&amp;nbsp;(1&amp;nbsp;+&amp;nbsp;sin(VARcnt&amp;nbsp;/&amp;nbsp;2)))&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#34;$&amp;gt;px;&#34;&amp;nbsp;href=&#34;&amp;lt;$MTEnrtyPermalink$&amp;gt;&#34;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;$MTCalc&amp;nbsp;setvar=&#34;cnt&#34;&amp;nbsp;expr=&#34;VARcnt&amp;nbsp;+&amp;nbsp;1&#34;$&amp;gt;&amp;nbsp;&amp;lt;$MTEntryTitle$&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;/a&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;br&amp;nbsp;/&amp;gt;
&amp;lt;/MTEntries&amp;gt;
&lt;/blockquote&gt;
カウントの更新用に、表示はしないモードがあったほうが良いだろうか。

</description>
    </item>
    
    <item>
      <title>タグの全て</title>
      <link>http://example.org/2006/000013.html</link>
      <pubDate>Tue, 28 Feb 2006 01:23:22 +0900</pubDate>
      
      <guid>http://example.org/2006/000013.html</guid>
      <description>
/lib/MT/Template/ContextHandler.pm にはMTのタグの全てが記されている。
その全てのタグを使い尽くしてあげたい今日は、直にコピペして全てのタグを使いこなされたテンプレートを作成してやりたかった。perlで簡易スクリプトを作成したりもしました。
結論、MTタグとは...破壊と慈悲の混沌だ！
&lt;del&gt;&lt;a href=&#34;http://blog.aklaswad.com/taglist.html&#34;&gt;taglist&lt;/a&gt;
&lt;a href=&#34;http://blog.aklaswad.com/make.txt&#34;&gt;make.txt&lt;/a&gt;
&lt;a href=&#34;http://blog.aklaswad.com/taglist.txt&#34;&gt;taglist.txt&lt;/a&gt;&lt;/del&gt;</description>
    </item>
    
    <item>
      <title>MTCalc0.7</title>
      <link>http://example.org/2006/000012.html</link>
      <pubDate>Sun, 26 Feb 2006 13:17:07 +0900</pubDate>
      
      <guid>http://example.org/2006/000012.html</guid>
      <description>とりあえず現在のコード。

&lt;blockquote&gt;

&lt;span class=&#34;com&#34;&gt;#Calc&amp;nbsp;Plugin&amp;nbsp;of&amp;nbsp;Movable&amp;nbsp;Type&amp;nbsp;3.2&amp;nbsp;#aklaswad&amp;nbsp;2006&amp;nbsp;feb&lt;/span&gt;


package&amp;nbsp;MT::Plugin::Calc;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#このソースコードのモジュール名を宣言&lt;/span&gt;
use&amp;nbsp;strict;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#紳士的に定義を行うことをコードに対して強制する&lt;/span&gt;
use&amp;nbsp;base&amp;nbsp;&#39;MT::Plugin&#39;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#謎&lt;/span&gt;
use&amp;nbsp;vars&amp;nbsp;qw($VERSION);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#バージョン&lt;/span&gt;
$VERSION&amp;nbsp;=&amp;nbsp;&#39;0.7&#39;;

use&amp;nbsp;MT;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#MTのモジュールを使用&lt;/span&gt;
use&amp;nbsp;MT::Template::Context;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#タグを追加するときに必要？&lt;/span&gt;

&lt;span class=&#34;com&#34;&gt;#プラグインのコンストラクタ&lt;/span&gt;
my&amp;nbsp;$plugin&amp;nbsp;=&amp;nbsp;MT::Plugin::Calc-&amp;gt;new({
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name&amp;nbsp;=&amp;gt;&amp;nbsp;&#39;MT&amp;nbsp;Calculator&#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;description&amp;nbsp;=&amp;gt;&amp;nbsp;&#34;calculator&#34;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;doc_link&amp;nbsp;=&amp;gt;&amp;nbsp;&#39;http://www.sixapart.jp&#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;author_name&amp;nbsp;=&amp;gt;&amp;nbsp;&#39;aklaswad&#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;author_link&amp;nbsp;=&amp;gt;&amp;nbsp;&#39;http://www.aklaswad.com/&#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version&amp;nbsp;=&amp;gt;&amp;nbsp;$VERSION,
});

&lt;span class=&#34;com&#34;&gt;#プラグインのクラスを&amp;nbsp;Movable&amp;nbsp;Type&amp;nbsp;に渡す&lt;/span&gt;
MT-&amp;gt;add_plugin($plugin);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;

&lt;span class=&#34;com&#34;&gt;#追加するタグの名前とメソッドのアドレスを渡す&lt;/span&gt;
MT::Template::Context-&amp;gt;add_tag(Calc&amp;nbsp;=&amp;gt;&amp;nbsp;\&amp;tag_calc);&amp;nbsp;&amp;nbsp;&amp;nbsp;

&lt;span class=&#34;com&#34;&gt;#タグを処理するメソッド&lt;/span&gt;
&lt;span class=&#34;com&#34;&gt;#戻り値がそのままドキュメントに書き出される&lt;/span&gt;
sub&amp;nbsp;tag_calc&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#引数を取り出す&lt;/span&gt;
&amp;nbsp;&amp;nbsp;my&amp;nbsp;($ctx,&amp;nbsp;$args)&amp;nbsp;=&amp;nbsp;@_;
&amp;nbsp;&amp;nbsp;my&amp;nbsp;$exoriginal&amp;nbsp;=&amp;nbsp;$args-&amp;gt;{&#34;expr&#34;};
&amp;nbsp;&amp;nbsp;my&amp;nbsp;$ex&amp;nbsp;=&amp;nbsp;$args-&amp;gt;{&#34;expr&#34;};

&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#MTタグを検索・置換&lt;/span&gt;
&amp;nbsp;&amp;nbsp;while(&amp;nbsp;$ex&amp;nbsp;=~&amp;nbsp;/MT([A-Za-z]+)/&amp;nbsp;){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my&amp;nbsp;$handler&amp;nbsp;=&amp;nbsp;$ctx-&amp;gt;handler_for($1);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(defined($handler))&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my&amp;nbsp;$tagvalue&amp;nbsp;=&amp;nbsp;$handler-&amp;gt;($ctx,&amp;nbsp;{&amp;nbsp;%$args&amp;nbsp;});
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ex&amp;nbsp;=~&amp;nbsp;s/MT$1/$tagvalue/;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ex&amp;nbsp;=~&amp;nbsp;s/MT$1/0/;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#MTGetVar変数を検索・置換&lt;/span&gt;
&amp;nbsp;&amp;nbsp;while(&amp;nbsp;$ex&amp;nbsp;=~&amp;nbsp;/VAR([A-Za-z0-9]+)/&amp;nbsp;){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my&amp;nbsp;$varvalue&amp;nbsp;=&amp;nbsp;$ctx-&amp;gt;{__stash}{vars}{$1};
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ex&amp;nbsp;=~&amp;nbsp;s/VAR$1/$varvalue/;
&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#式を評価&lt;/span&gt;
&amp;nbsp;&amp;nbsp;my&amp;nbsp;$ret&amp;nbsp;=&amp;nbsp;eval($ex);
&amp;nbsp;&amp;nbsp;die&amp;nbsp;&#34;MTCalc&amp;nbsp;can&#39;t&amp;nbsp;evaluate&amp;nbsp;this&amp;nbsp;line:$ex:&#34;&amp;nbsp;if&amp;nbsp;$@;
&amp;nbsp;&amp;nbsp;if&amp;nbsp;($args-&amp;gt;{&#34;setvar&#34;}){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ctx-&amp;gt;{__stash}{vars}{$args-&amp;gt;{&#34;setvar&#34;}}&amp;nbsp;=&amp;nbsp;$ret;
&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;$ret;

&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#デバッグ用の戻り値&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&lt;span class=&#34;com&#34;&gt;#&#34;$exoriginal&amp;nbsp;==&amp;nbsp;$ex&amp;nbsp;=&amp;nbsp;$ret&#34;;&lt;/span&gt;
}

1;

&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>検索プラグインについて</title>
      <link>http://example.org/2006/000011.html</link>
      <pubDate>Sun, 26 Feb 2006 02:50:33 +0900</pubDate>
      
      <guid>http://example.org/2006/000011.html</guid>
      <description>
Movable Typeの欠点として、検索が弱いなーと思うので、そのためのプラグインを探してみた。
すぐに X 何とかって言うのが見つかったのだが、インストールがすごいめんどくさそうだった。
すでにチャンピオンズリーグダイジェストを観ながら酩酊状態に陥っている自分にとっては、実行不可能なタスクであった。

やっぱり、プラグインと銘打つ以上、ポコッと入れるとガーッて働くような使いやすさが望ましいと思うのだが、機能的に不可能なのだろうか。

それはまあ後々の課題として、今日は浦和レッズがタイトルを取って嬉しいので大満足なのだった。</description>
    </item>
    
    <item>
      <title>MTCalc0.6</title>
      <link>http://example.org/2006/000010.html</link>
      <pubDate>Sat, 25 Feb 2006 22:49:36 +0900</pubDate>
      
      <guid>http://example.org/2006/000010.html</guid>
      <description>
SetVar/GetVarについてのテストも成功したので、具体的にどういう動作をするかを考える。
ほしい機能は次のようなものだ。&lt;br /&gt;
&lt;ol&gt;
&lt;li&gt;四則演算が出来る。
&lt;li&gt;10進数字のほかに、変数として、値を返すMTタグとMTSetVarで作成した変数を扱える。
&lt;li&gt;計算結果をMTSetVarの変数空間に格納できる。
&lt;/ol&gt;
&lt;p&gt;
(1)については、取りあえず eval() 関数に丸投げすることで良しとしよう。取りあえず。
&lt;/p&gt;
&lt;p&gt;
(2)について現在の仕様では、式について評価する前に全て書き換えてしまうのなら難しくないように思える。MT...で始まる英数字の列はMTタグとして評価、VARで始まる英数字の列はMTGetVarもどきで値の取り出しを試みる。それ以外の文字列は、eval() にお任せとする。
&lt;/p&gt;
&lt;p&gt;
(3)これは式の中に書式を織り込むのはホネそうなので、別のアトリビュートに放り込み先を指定することとする。setvar=&#34;&lt;em&gt;name&lt;/em&gt;&#34;とすると、&amp;lt;$MTSetVar name=&#34;&lt;em&gt;name&lt;/em&gt;&#34; value =&#34;&lt;em&gt;(計算結果)&lt;/em&gt;&#34;$&amp;gt;と同じ働きをする。といいな。指定が無ければ何もしない。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MTCalc0.5</title>
      <link>http://example.org/2006/000009.html</link>
      <pubDate>Sat, 25 Feb 2006 22:07:39 +0900</pubDate>
      
      <guid>http://example.org/2006/000009.html</guid>
      <description>
MTのほうで、アトリビュート内のMTタグを展開してくれないことで、別の手段を模索しなくてはならなくなった。
そういえば、&amp;lt;$MT...$&amp;gt;という構文では無い形でタグの情報を利用しているタグがあった筈。・・・そうだ、MTIｆNonZero と MTIｆNonEmpty だ。
早速、./lib/MT/Template/ContextHandler.pm から、それっぽいところをぶった切って持ってきてみる。
動いた。
何とかなりそうだ。

ついでに、MTSetVar などとも連携が取れるようにすれば面白そうだ。</description>
    </item>
    
    <item>
      <title>MTCalc0.4</title>
      <link>http://example.org/2006/000008.html</link>
      <pubDate>Sat, 25 Feb 2006 21:05:56 +0900</pubDate>
      
      <guid>http://example.org/2006/000008.html</guid>
      <description>
evalに丸投げで完成かと思われた矢先、MTタグのアトリビュート内にはMTタグを埋め込めない事が判明した。HTMLタグの中には普通に放り込んでいたので、再帰的に内側のタグから展開しているものだと思い込んでしまった&amp;こんな事は先に実験しておくべきだった。。。
考えていたあんなことやこんなことが遠のいていく。。。</description>
    </item>
    
    <item>
      <title>MTCalc0.3</title>
      <link>http://example.org/2006/000007.html</link>
      <pubDate>Sat, 25 Feb 2006 20:37:11 +0900</pubDate>
      
      <guid>http://example.org/2006/000007.html</guid>
      <description>
perl には、eval() という関数があることを今知った。
引数をこの関数にぶち込めば、計算など幾らでも出来る。。。
危険といえば危険だが。

開発終了？</description>
    </item>
    
    <item>
      <title>MTCalc0.2</title>
      <link>http://example.org/2006/000006.html</link>
      <pubDate>Sat, 25 Feb 2006 10:15:56 +0900</pubDate>
      
      <guid>http://example.org/2006/000006.html</guid>
      <description>
参考

&lt;a href=&#34;http://www.tuat.ac.jp/~tuatmcc/contents/monthly/200206/nuki.xml&#34;&gt;作れる！数式評価プログラム&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>よく分かるマニュアル</title>
      <link>http://example.org/2006/000005.html</link>
      <pubDate>Thu, 23 Feb 2006 23:43:40 +0900</pubDate>
      
      <guid>http://example.org/2006/000005.html</guid>
      <description>
&lt;blockquote&gt;これらの値のすべては、上記のような形式で応答のcleartextにも与えられます。ただし、クライアントによって渡されたサイト・トークンは省かれます。 たとえば、ログインするユーザーが&#34;Napoleon Bonaparte&#34; &amp;lt;napoleon@france.fr&amp;gt;で、&#39;napster&#39;というログイン名を持ち、2001-09-08 19:00:00 (エポックから1000000800秒後)にログインした場合、「sig」は以下の文字列の署名になります。

&lt;blockquote&gt;napoleon@france.fr::Napolon Bonaparte::napster::1000000800::6jTGQ2MF1focBR5vODfC&lt;/blockquote&gt;&lt;/blockquote&gt;

&lt;a href=&#34;http://www.sixapart.jp/movabletype/manual/mtauth.html#item_sig&#34;&gt;http://www.sixapart.jp/movabletype/manual/mtauth.html#item_sig&lt;/a&gt;

なんだこのたとえは。</description>
    </item>
    
    <item>
      <title>MTCalc0.1</title>
      <link>http://example.org/2006/000004.html</link>
      <pubDate>Thu, 23 Feb 2006 01:24:23 +0900</pubDate>
      
      <guid>http://example.org/2006/000004.html</guid>
      <description>
MTのタグ内で簡単な計算をするプラグインをつくろう。

ということで、取りあえず動き出した。
現状の仕様
・四則演算だけなら出来る。括弧は認識しない。
・左から順に計算する

既知の不具合
・右から計算してしまう

今日はこれまで。</description>
    </item>
    
    <item>
      <title>MTHello?</title>
      <link>http://example.org/2006/000003.html</link>
      <pubDate>Sat, 18 Feb 2006 01:46:02 +0900</pubDate>
      
      <guid>http://example.org/2006/000003.html</guid>
      <description>以下、そのコード。コメントはかっこつけマンなので英語にした。多分どこか変。&lt;br /&gt;

&lt;pre class=&#34;code&#34;&gt;
#Hello? Plugin of Movable Type 3.2
#aklaswad 2006 feb 5th
#this plugin just add a MTtag that print &#34;hello?&#34; 

package MT::Plugin::Hello;   #Declare the Module space (Namespace?) in Perl
use strict;                  #this line force to the code to be Gentle to Declare 
use base &#39;MT::Plugin&#39;;       #Load MT Module?
use vars qw($VERSION);       #Version
$VERSION = &#39;1.0&#39;;

use MT;                      #Load MT Module?
use MT::Template::Context;   #Load MT Module?

#Constractor of my plugin class
my $plugin = MT::Plugin::Hello-&gt;new({
    name =&gt; &#39;Hello? Movable Type&#39;,
    description =&gt; &#34;say Hello?&#34;,
    doc_link =&gt; &#39;http://www.sixapart.jp&#39;,
    author_name =&gt; &#39;aklaswad&#39;,
    author_link =&gt; &#39;http://www.aklaswad.com/&#39;,
    version =&gt; $VERSION,
});

MT-&gt;add_plugin($plugin);     #pass my plugin class to MT

#Add an External tag&#39;s name and that&#39;s routine&#39;s address
MT::Template::Context-&gt;add_tag(Hello =&gt; \&amp;tag_hello);   

#My new External MTtag&#39;s code
#return balue will output to the document
sub tag_hello {
  # get arguments 
  my ($ctx, $args) = @_;
  my $name = $$args{&#34;name&#34;};
  &#34;hello? $name&#34;;            #return value
}

1;
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>テンプレートマッピング</title>
      <link>http://example.org/2006/000002.html</link>
      <pubDate>Sat, 18 Feb 2006 01:27:25 +0900</pubDate>
      
      <guid>http://example.org/2006/000002.html</guid>
      <description>
色々とメモを書いたりするブログをこれから作っていくわけだが、取りあえずの方針として、Movable Typeを弄り倒していく過程を記事の主軸に据えていこうと思う。

だがその前にまず、最初に、エントリーのタイトルに日本語をつけたときに気持ち悪い「post_1」とか何とかいうファイル名になってしまう件について解決しておこうと思い、記憶を辿って sixapart.com のマニュアルの中から Archive File Path Specifiers という記事を探し出した。

&lt;a href=&#34;http://www.sixapart.com/movabletype/docs/3.2/e_archive_file_path_specifiers/&#34;&gt;http://www.sixapart.com/movabletype/docs/3.2/e_archive_file_path_specifiers/&lt;/a&gt;

結構米sixapartのサイトにしかない情報というものがあるから要注意だ。</description>
    </item>
    
  </channel>
</rss>